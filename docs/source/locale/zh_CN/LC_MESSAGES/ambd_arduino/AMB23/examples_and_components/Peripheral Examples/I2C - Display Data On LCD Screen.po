# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-12 04:08+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:3
msgid "I2C - Display Data On LCD Screen"
msgstr "I2C - 使用 LCD 并在 LCD 上显示资料"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:8
msgid ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Preparation** "
":raw-html:`</p>`"
msgstr ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **材料准备** :raw-"
"html:`</p>`"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:12
msgid "AmebaD [AMB21 / AMB22 / AMB23 / BW16] x 1"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:13
msgid "I2C 2×16 LCD"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:15
msgid ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Example** :raw-"
"html:`</p>`"
msgstr ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **范例准备** :raw-"
"html:`</p>`"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:19
msgid "Normally there are many pins on an LCD display, as shown in below figure."
msgstr "一般LCD有许多pin脚, 以手上这片LCD为例有16个pin"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:29
msgid ""
"An LCD display can be equipped with an additional processing chip to "
"process the data. The processing chip can connect to a microcontroller "
"using the I2C interface."
msgstr "直接控制LCD的话会用掉许多pin, 在资料处理上也很麻烦, 所以一般LCD会有额外的控制晶片帮忙处理, 并且使用I2C介面控制这块控制晶片。"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:33
msgid "**AMB21 / AMB22** Wiring Diagram:"
msgstr "**AMB21 / AMB22** 接线图："

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:41
msgid "**AMB23** Wiring Diagram:"
msgstr "**AMB23** 接线图："

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:49
msgid "**BW16** Wiring Diagram:"
msgstr "**BW16** 接线图："

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:56
#, fuzzy
msgid "**BW16-TypeC** Wiring Diagram:"
msgstr "**BW16** 接线图："

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:63
msgid ""
"Open the example in ``“File” → “Examples” → “AmebaWire” → "
"“LCD_HelloWorld”``. Compile and upload to Ameba, then press the reset "
"button. Then you can see “Hello World” in the first line, and “Ameba” in "
"the second line displayed on the LCD screen."
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:74
msgid ""
"After 8 seconds, you can input to the Serial Monitor the string you would"
" like to display on the LCD."
msgstr "等8秒之后出现提示可以从Serial Monitor输入要显示的字串:"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:83
msgid "For example, we enter “123456789” and press “Send”:"
msgstr "在Serial Monitor 输入“123456789” 之后按下“Send”, 显示在LCD上:"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:91
msgid ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Code "
"Reference** :raw-html:`</p>`"
msgstr ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **程式码说明** :raw-"
"html:`</p>`"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:95
msgid ""
"The required settings of each model of LCD might be different, the "
"constructor we use in this example is:"
msgstr "每款LCD的I2C控制板需要设定的内容都不一样,范例里使用的constructor:"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:104
msgid "And the setting parameters are as follows:"
msgstr "设定的内容如下:"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:110
msgid ""
"The first parameter 0x27 is the address of I2C. Each of the following 8 "
"parameters represents the meaning of each bit in a byte, i.e., En is bit "
"2, Rw is bit 1, Rs is bit 0, d4 is bit 4, and so forth."
msgstr ""
"其中I2C的address是0x27, 后面八个参数代表1个byte里, 每个bit代表的意义, 其中En为Bit 2, Rw为Bit 1, "
"Rs为Bit 0, d4为bit 4, 以此类推每款LCD需要设定的内容可能不一样, 要参考datasheet做设定。"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Data Display LCD On
#: Screen.rst:114
#, fuzzy
msgid ""
"Call ``backlight()`` to light the screen, Call ``setCursor(0, 0)`` to set"
" the position of the cursor. LCD inherits the Print class, so we can use "
"``lcd.print()`` to output string on the screen."
msgstr "LCD 继承了Print class, 所以可以使用 ``lcd.print()`` 来输出要显示的字串"

#~ msgid "|1|"
#~ msgstr ""

#~ msgid "1"
#~ msgstr ""

#~ msgid "|2|"
#~ msgstr ""

#~ msgid "2"
#~ msgstr ""

#~ msgid "|2-1|"
#~ msgstr ""

#~ msgid "|2-3|"
#~ msgstr ""

#~ msgid ""
#~ "Open the example in ``“File” -> "
#~ "“Examples” -> “AmebaWire” -> "
#~ "“LCD_HelloWorld”``."
#~ msgstr "打开范例, “File” -> “Examples” -> “AmebaWire” -> “LCD_HelloWorld”, "

#~ msgid "Compile and upload to Ameba, then press the reset button."
#~ msgstr "编译并上传到Ameba, 完成后按Reset按钮。"

#~ msgid ""
#~ "Then you can see “Hello World” in"
#~ " the first line, and “Ameba” in "
#~ "the second line displayed on the "
#~ "LCD screen."
#~ msgstr "范例里, LCD第一行出现“Hello World”, 第二行出现“Ameba”:"

#~ msgid "|3|"
#~ msgstr ""

#~ msgid "3"
#~ msgstr ""

#~ msgid "|4|"
#~ msgstr ""

#~ msgid "4"
#~ msgstr ""

#~ msgid "|5|"
#~ msgstr ""

#~ msgid "5"
#~ msgstr ""

#~ msgid "Call ``backlight()`` to light the screen,"
#~ msgstr "呼叫 ``backlight()`` 打开背光使萤幕亮起"

#~ msgid "Call ``setCursor(0, 0)`` to set the position of the cursor."
#~ msgstr "呼叫 ``setCursor(0, 0)`` 指定游标的位置, 第一个参数是行, 第二个参数是列"

