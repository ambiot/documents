# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-02 06:46+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:3
msgid "Class SdFatFile"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:5 SdFatFile.rst:37
#: SdFatFile.rst:76 SdFatFile.rst:283 SdFatFile.rst:313 SdFatFile.rst:344
#: SdFatFile.rst:376 SdFatFile.rst:407
msgid "**Description**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:7
msgid "Defines a class of SD FAT File."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:9 SdFatFile.rst:41
#: SdFatFile.rst:80 SdFatFile.rst:287 SdFatFile.rst:317 SdFatFile.rst:349
#: SdFatFile.rst:380 SdFatFile.rst:411
msgid "**Syntax**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:15
msgid "**Members**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:18
msgid "**Public Constructors**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:20
msgid "SdFatFile::SdFatFile"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:20
msgid "Constructs a SdFatFile object"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:21
msgid "SdFatFile::~SdFatFile"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:21
msgid "Destructs a SdFatFile object"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:22
msgid "**Public Methods**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:23
msgid "SdFatFile::write"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:23
msgid "Write 1 byte/bytes to file"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:24
msgid "SdFatFile::read"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:24
msgid "Read 1 byte/bytes from the file"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:25
msgid "SdFatFile::peek"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:25
msgid "Read 1 byte from file without move curser"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:26
msgid "SdFatFile::available"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:26
msgid "Check if the cursor is at EOF (End-Of-File)"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:27
msgid "SdFatFile::bool"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:27
msgid "Check if file is opened"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:28
msgid "SdFatFile::seek"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:28
msgid "Change cursor to a specific position"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:29
msgid "SdFatFile::close"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:29
msgid "Close file"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:39
msgid "Write 1 byte or bytes to the file."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:51 SdFatFile.rst:90
#: SdFatFile.rst:293 SdFatFile.rst:323 SdFatFile.rst:355 SdFatFile.rst:386
#: SdFatFile.rst:417
msgid "**Parameters**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:53
msgid "``c`` : The character to be written."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:55
msgid "``buf`` : The buffer to be written."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:57
msgid "``size`` : The length of buffer to be written."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:59 SdFatFile.rst:96
#: SdFatFile.rst:297 SdFatFile.rst:327 SdFatFile.rst:359 SdFatFile.rst:390
#: SdFatFile.rst:421
msgid "**Returns**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:61
msgid ""
"The function returns the number of byte count that has been successfully "
"written to the file."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:64 SdFatFile.rst:100
#: SdFatFile.rst:301 SdFatFile.rst:331 SdFatFile.rst:363 SdFatFile.rst:394
#: SdFatFile.rst:426
msgid "**Example Code**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:66
msgid "NA."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:68 SdFatFile.rst:274
#: SdFatFile.rst:305 SdFatFile.rst:335 SdFatFile.rst:367 SdFatFile.rst:398
#: SdFatFile.rst:518
msgid "**Notes and Warnings**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:70 SdFatFile.rst:276
#: SdFatFile.rst:307 SdFatFile.rst:337 SdFatFile.rst:369
msgid "Include “SdFatFile.h” to use the class function."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:78
msgid "Read 1 byte or bytes from the file."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:92
msgid "``buf``: The buffer to store the content."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:94
msgid ""
"``nbyte``: The buffer size. (Or can be regarded as the desired length to "
"read)."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:98
msgid "The function returns a read character or the read size of the buffer."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:102
#: SdFatFile.rst:190
msgid "#include \"FatFs_SD.h\""
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:106
msgid "char dirname[] = \"testdir\";"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:108
#: SdFatFile.rst:194 SdFatFile.rst:452
msgid "char filename[] = \"test.txt\";"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:110
#: SdFatFile.rst:196
msgid "char write_content[] = \"hello world!\";"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:114
#: SdFatFile.rst:200 SdFatFile.rst:448
msgid "FatFsSD fs;"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:118
#: SdFatFile.rst:204 SdFatFile.rst:456
msgid "void setup() {"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:120
#: SdFatFile.rst:206
msgid "char buf[128];"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:122
#: SdFatFile.rst:208 SdFatFile.rst:458
msgid "char absolute_filename[128];"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:126
#: SdFatFile.rst:212 SdFatFile.rst:476
msgid "fs.begin();"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:130
#, python-format
msgid "sprintf(absolute_filename, \"%s%s\", fs.getRootPath(), dirname);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:132
msgid "fs.mkdir(absolute_filename);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:134
#, python-format
msgid "printf(\"create dir at \\\\\"%s\\\"\\r\\n\", absolute_filename);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:138
#, python-format
msgid ""
"sprintf(absolute_filename, \"%s%s/%s\", fs.getRootPath(), dirname, "
"filename);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:141
#: SdFatFile.rst:220 SdFatFile.rst:482
msgid "SdFatFile file = fs.open(absolute_filename);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:143
#: SdFatFile.rst:224
msgid "file.println(write_content);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:145
#: SdFatFile.rst:163 SdFatFile.rst:228 SdFatFile.rst:246 SdFatFile.rst:484
msgid "file.close();"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:147
#, python-format
msgid "printf(\"create file at \\\\\"%s\\\"\\r\\n\", absolute_filename);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:151
#, python-format
msgid "printf(\"read back from \\\\\"%s\\\"\\r\\n\", absolute_filename);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:153
#: SdFatFile.rst:236
msgid "file = fs.open(absolute_filename);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:157
#: SdFatFile.rst:240
msgid "memset(buf, 0, sizeof(buf));"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:159
#: SdFatFile.rst:242
msgid "file.read(buf, sizeof(buf));"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:165
#: SdFatFile.rst:248
msgid "printf(\"==== content ====\\r\\n\");"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:167
#: SdFatFile.rst:250
#, python-format
msgid "printf(\"%s\", buf);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:169
#: SdFatFile.rst:252
msgid "printf(\"==== end ====\\r\\n\");"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:173
#: SdFatFile.rst:256 SdFatFile.rst:503
msgid "fs.end();"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:175
#: SdFatFile.rst:183 SdFatFile.rst:258 SdFatFile.rst:266 SdFatFile.rst:505
#: SdFatFile.rst:513
msgid "}"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:179
#: SdFatFile.rst:262 SdFatFile.rst:509
msgid "void loop() {"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:181
#: SdFatFile.rst:264 SdFatFile.rst:511
msgid "delay(1000);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:187
#: SdFatFile.rst:432
msgid "Example: create_folder;"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:188
#: SdFatFile.rst:434
msgid "This example shows how to create a folder and open a file under it."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:216
#, python-format
msgid "printf(\"write something to \\\\\"%s\\\"\\r\\n\", filename);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:218
#: SdFatFile.rst:480
#, python-format
msgid "sprintf(absolute_filename, \"%s%s\", fs.getRootPath(), filename);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:230
msgid "printf(\"write finish\\r\\n\\r\\n\");"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:234
#, python-format
msgid "printf(\"read back from \\\\\"%s\\\"\\r\\n\", filename);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:270
#: SdFatFile.rst:438
msgid "Example: file_read_write;"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:272
msgid "This example shows how to open/close files and perform read/write to it."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:285
msgid "Read one byte from the file without moving the curser."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:295
#: SdFatFile.rst:325 SdFatFile.rst:357 SdFatFile.rst:419
msgid "The function requires no input parameter."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:299
msgid "The function returns the read character as an integer number."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:303
#: SdFatFile.rst:333 SdFatFile.rst:365 SdFatFile.rst:396
msgid "NA"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:315
msgid "Check if the cursor is at EOF."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:329
msgid "The function returns ``0`` if the cursor is at EOF, else returns “1”."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:346
msgid ""
"It is a nop. This is an inherited function from class Stream. And it does"
" not affect SD File."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:361
msgid "The function returns nothing."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:378
msgid "Change cursor to a specific position."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:388
msgid "pos: The desired position."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:392
msgid "The function returns 0 if success otherwise returns a negative value."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:400
#: SdFatFile.rst:520
msgid "Include “SdFatFile.h” in order to use the class function."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:409
msgid "Close file."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:423
msgid ""
"The function returns 0 if runs successfully otherwise it returns a "
"negative value."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:428
msgid "Example: last_modified_time;"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:430
msgid "The example shows how to get and set last modified time of a file."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:436
msgid "the details of the code can be found in the section of SdFatFile::read."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:440
msgid "This example shows how to open/close files and perform read/write to"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:442
msgid ""
"it. The details of the code can be found in the section of "
"SdFatFile::read."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:444
msgid "#include <FatFs_SD.h>"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:462
msgid "uint16_t year = 2021;"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:464
msgid "uint16_t month = 4;"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:466
msgid "uint16_t date = 4;"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:468
msgid "uint16_t hour = 12;"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:470
msgid "uint16_t minute = 12;"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:472
msgid "uint16_t second = 12;"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:488
msgid ""
"fs.setLastModTime(absolute_filename, year, month, date, hour, minute, "
"second);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:493
msgid ""
"fs.getLastModTime(absolute_filename, &year, &month, &date, &hour, "
"&minute, &second);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:496
#, python-format
msgid "printf(\"filename:\\\"%s\\\"\\r\\n\", absolute_filename);"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class SdFatFile.rst:498
#, python-format
msgid ""
"printf(\"time mod:%04d/%02d/%02d %02d:%02d:%02d\\r\\n\", year, month, "
"date, hour, minute, second);"
msgstr ""

#~ msgid "class SdFatFile"
#~ msgstr ""

#~ msgid "**SdFatFile::write**"
#~ msgstr ""

#~ msgid "size_t SdFatFile::write(uint8_t c);"
#~ msgstr ""

#~ msgid "size_t SdFatFile::write(const uint8_t \\*buf, size_t size);"
#~ msgstr ""

#~ msgid "c: The character to be written."
#~ msgstr ""

#~ msgid "buf: The buffer to be written."
#~ msgstr ""

#~ msgid "size: The length of buffer to be written."
#~ msgstr ""

#~ msgid "**SdFatFile:: read**"
#~ msgstr ""

#~ msgid "int SdFatFile::read(void);"
#~ msgstr ""

#~ msgid "int SdFatFile::read(void \\*buf, uint16_t nbyte);"
#~ msgstr ""

#~ msgid "buf: The buffer to store the content."
#~ msgstr ""

#~ msgid ""
#~ "nbyte: The buffer size. (Or can be"
#~ " regarded as the desired length to"
#~ " read)."
#~ msgstr ""

#~ msgid "**SdFatFile:: peek**"
#~ msgstr ""

#~ msgid "int SdFatFile::peek(void);"
#~ msgstr ""

#~ msgid "**SdFatFile:: available**"
#~ msgstr ""

#~ msgid "int SdFatFile::available(void);"
#~ msgstr ""

#~ msgid "The function returns “0” if the cursor is at EOF, else returns “1”."
#~ msgstr ""

#~ msgid "**SdFatFile:: flush**"
#~ msgstr ""

#~ msgid "void SdFatFile::flush(void);"
#~ msgstr ""

#~ msgid "**SdFatFile:: seek**"
#~ msgstr ""

#~ msgid "int SdFatFile::seek(uint32_t pos);"
#~ msgstr ""

#~ msgid "**SdFatFile:: close**"
#~ msgstr ""

#~ msgid "int SdFatFile::close(void);"
#~ msgstr ""

#~ msgid ""
#~ "This example shows how to create a"
#~ " folder and open a file under "
#~ "it. The details of the code can"
#~ " be found in the section of "
#~ "SdFatFile:: read."
#~ msgstr ""

#~ msgid ""
#~ "This example shows how to open/close "
#~ "files and perform read/write to it. "
#~ "The details of the code can be "
#~ "found in the section of SdFatFile:: "
#~ "read."
#~ msgstr ""

