# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-08 05:02+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:3
msgid "Getting Started"
msgstr "入门指南"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:7
msgid "Ameba ARDUINO: Getting Started with BW16"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:10
msgid "Introduction"
msgstr "介绍"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:12
msgid ""
"Realtek RTL8720DN is a Wi-Fi and Bluetooth IC that supports 2.4GHz and "
"5GHz dual bands for Wi-Fi communication, and Bluetooth Low Energy (BLE) "
"5.0. BW16 module is manufactured by B&T, this module is a highly "
"integrated Wi-Fi and Bluetooth module with the RTL8720DN as the main SoC "
"(System on Chip), it can be regarded as an SoC for the Wi-Fi and "
"Bluetooth application with typical SBCs. BW16 board is a development "
"board that integrated with the module. There are 2 BW16 boards, BW16 and "
"BW6-TypeC. BW16 board uses Micro USB connector."
msgstr ""
"Realtek RTL8720DN 是一款 Wi-Fi 和蓝牙 IC，支持 2.4GHz 和 5GHz 双频 Wi-Fi 通信，以及蓝牙低功耗 "
"(BLE) 5.0。BW16模组由B&T生产，该模组是以RTL8720DN为主要SoC（System on Chip）的高度集成的Wi-"
"Fi和蓝牙模块，可以看作是典型SBC的Wi-Fi和蓝牙应用的SoC。BW16是与模块集成的开发板。 "
"BW16开发板有2块，BW16和BW6-TypeC。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:17
#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:135
msgid "**BW16 Board**"
msgstr "**BW16 开发板**"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:26
msgid ""
"The size of the board is 50.4*25.4(±0.2) mm. It uses Type C USB to supply"
" power, which is common in many smart devices. Please refer to the "
"following figure and table for the pin diagram and functions."
msgstr ""
"开发板的尺寸为 50.4*25.4(±0.2) mm。它使用Micro USB供电，这在很多智能设备中都很常见。BW16 "
"的引脚图和功能请参考下图和下表。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:39
msgid "#"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:39
msgid "GPIO Pin"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:39
msgid "GPIO INT"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:39
msgid "ADC"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:39
msgid "PWM"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:39
msgid "UART"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:39
msgid "SPI"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:39
msgid "I2C"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:39
msgid "IR"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:39
msgid "RGB LED"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:39
msgid "SWD"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:41
msgid "0"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:41
msgid "PA7"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:41
#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:42
#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:43
#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:44
#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:45
#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:46
#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:47
#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:48
#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:49
#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:50
#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:51
#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:52
#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:53
msgid "✓"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:41
msgid "LOG_TX"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:42
msgid "1"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:42
msgid "PA8"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:42
msgid "LOG_RX"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:43
msgid "2"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:43
msgid "PA27"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:43
msgid "SWD_DATA"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:44
msgid "3"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:44
msgid "PA30"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:45
msgid "4"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:45
msgid "PB1"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:45
msgid "SERIAL1_TX"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:46
msgid "5"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:46
msgid "PB2"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:46
msgid "SERIAL1_RX"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:47
msgid "6"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:47
msgid "PB3"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:47
msgid "A2"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:47
msgid "SWD_CLK"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:48
msgid "7"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:48
msgid "PA25"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:48
msgid "I2C_SCL"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:48
msgid "IR_TX"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:49
msgid "8"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:49
msgid "PA26"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:49
msgid "I2C_SDA"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:49
msgid "IR_RX"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:50
msgid "9"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:50
msgid "PA15"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:50
msgid "SPI_SS"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:51
msgid "10"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:51
msgid "PA14"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:51
msgid "SPI_SCLK"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:51
msgid "LED_G"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:52
msgid "11"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:52
msgid "PA13"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:52
msgid "SPI_MISO"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:52
msgid "LED_B"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:53
msgid "12"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:53
msgid "PA12"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:53
msgid "SPI_MOSI"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:53
msgid "LED_R"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:56
msgid ""
"There are 2 buttons besides USB connector. “RST” button is on the left "
"and “Burn” button is on the right as shown on above figures. Refer the "
"following table for the functions of the buttons."
msgstr "除了 USB 连接器外，还有 2 个按钮。如上图所示，左侧为“RST”按钮，右侧为“Burn”按钮。有关按钮的功能，请参阅下表。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:60
msgid "**Button Functions**"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:60
msgid "**Button Process**"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:62
msgid "**Reset board**"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:62
#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:66
msgid "Press then release \"RST\""
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:64
msgid "**Enter upload mode**"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:64
msgid "Press and hold \"Burn\""
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:68
msgid "Release \"Burn\""
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:71
msgid "The Upload Mode is required by board when erase flash or upload firmware."
msgstr "清除flash或上传固件时，开发板需要上传模式。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:75
msgid "Set up Developing Environment"
msgstr "设置开发环境"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:78
msgid "Step 1. OS Environment"
msgstr "步骤一、 环境配置"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:80
msgid ""
"BW16 (RTL8720DN) board currently supports Windows OS 32-bits or 64-bits, "
"Linux OS (Ubuntu) and macOS. To have the best experiences, please use the"
" latest version of OS."
msgstr ""
"BW16 (RTL8720DN) 开发板目前支持 Windows OS 32 位元或 64 位元、Linux OS (Ubuntu) 和 "
"macOS。为了获得最佳体验，请使用最新版本的作业系统。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:84
msgid "Step 2. Set up Arduino IDE"
msgstr "步骤二、 设定 Arduino IDE"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:86
msgid ""
"From version 1.6.5, Arduino IDE supports third-party hardware. Arduino "
"IDE is used to develop applications on BW16, and the Arduino basic "
"examples (refer to the basic example link)."
msgstr ""
"从 1.6.5 版本开始，Arduino IDE 支持第三方硬件。 Arduino "
"IDE用于在BW16上开发应用程序，以及Arduino基本范例(refer to the basic example link)。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:88
msgid ""
"Arduino IDE can be downloaded in the Arduino website: "
"https://www.arduino.cc/en/Main/Software"
msgstr "Arduino IDE可以在Arduino网站下载: https://www.arduino.cc/en/Main/Software"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:90
msgid ""
"When the installation is finished, open Arduino IDE. Go to “File” -> "
"“Preferences”."
msgstr "安装完成后，打开Arduino IDE。请打开 “File” -> “Preferences”"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:92
msgid ""
"And paste the following URL into the “Additional Boards Manager URLs” "
"field: "
"https://github.com/ambiot/ambd_arduino/raw/master/Arduino_package/package_realtek.com_amebad_index.json"
" BW16 is supported from V3.0.8."
msgstr ""
"并将以下 URL 复制到 “Additional Boards Manager URLs” "
"栏位:https://github.com/ambiot/ambd_arduino/raw/master/Arduino_package/package_realtek.com_amebad_index.json从"
" v3.0.8版本开始，Ameba Arduino将支持BW16开发板。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:95
msgid "Next, go to “Tools” -> “Board” -> “Boards Manager”:"
msgstr "接下来，打开Arduino IDE 中 “Tools”->”Board”->”Boards Manager”："

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:104
msgid ""
"The “Boards Manager” requires several seconds to refresh all hardware "
"files (if the network is in bad condition, it may take longer). Search "
"“Realtek” then find “Realtek Ameba Boards (32-bits ARM Cortex-M33 "
"@200MHz)” in the list, click “Install”, then the Arduino IDE starts to "
"download required files for AmebaD family includes BW16."
msgstr ""
"“Boards Manager”大约需要几秒钟来刷新所有硬件文件(如果网络状况不好，可能需要更长的时间)。在列表中找到“Realtek Ameba"
" Boards (32-bits ARM Cortex-M33 @200MHz)”，点击“Install”，Arduino "
"IDE会自动开始下载AmebaD包含BW16所需的文件。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:112
msgid ""
"If there is downloading issue (Bad internet or GitHub access), please "
"refer to the following link at “Download/Software Development Kit”. There"
" are 3 sections. 1. “AmebaD_Arduino_patch1_SDK”, please select at least 1"
" of the SDKs. There are 5 latest released SDK options. 2. "
"“AmebaD_Arduino_patch2_Tools”, please select according to operating "
"system. There are Windows, Linux, and macOS. 3. "
"“AmebaD_Arduino_Source_Code”, this section is optional. Download for the "
"latest source code."
msgstr ""
"如果您遇到 GitHub 下载问题，请参考以下连结 中的“下载/软体开发套件”。有3个部分。1. "
"“AmebaD_Arduino_patch1_SDK”，请至少选择 1 个 SDK。目前有 5 个最新发布的 SDK 选项。2. "
"“AmebaD_Arduino_patch2_Tools”，请根据您的作业系统进行选择。有 Windows、Linux 和 MacOS。3. "
"“AmebaD_Arduino_Source_Code”，此部分为可选下载，用来参考最新原始码。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:117
msgid "https://www.amebaiot.com.cn/en/ameba-arduino-summary/"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:119
msgid ""
"Download the files selected, then unzip (patch1 and patch2 are "
"compulsory). There are “Install.doc”/“Install.pdf” for you to refer to "
"installation steps. According to your system, please run the installation"
" tool in the “Offline_SDK_installation_tool” folder."
msgstr ""
"下载选择的文件，然后解压（patch1 和patch2 "
"是必须的）。有“Install_中文.doc”/“Install_中文.pdf”供您参考安装步骤。根据您的系统，请运行“Offline_SDK_installation_tool”文件夹中的安装工具。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:122
msgid ""
"After the installation, select AmebaD as current connected board in "
"“Tools” -> “Board” -> “Ameba ARM (32-bits) Boards” ->” BW16(RTL8720DN)”:"
msgstr ""
"安装运行成功后，您可以打开Arduino IDE并选择 “Tools” -> “Board” -> “Ameba ARM (32-bits) "
"Boards” ->” BW16(RTL8720DN)” 来选择AmebaD作为当前连接的开发板。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:131
msgid "Step 3. Install the serial port"
msgstr "步骤三、 安装串行端口"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:133
msgid "First, connect the board to computer via Micro USB:"
msgstr "首先，通过 Micro USB 将开发板连接到电脑："

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:143
msgid ""
"Refer to the pinmap and table above, D0 and D1 pins are used for program "
"uploading. However, onboard USB-to-UART module is connected to D4 and D5 "
"which is not able to be directly used for program upload. In order to "
"upload firmware, it suggests that adding an external USB-to-UART module "
"connecting to D0 and D1 as shown in the pin connection below:"
msgstr ""
"参考上面的引脚图和表格，D0 和 D1 "
"引脚用于程序上传。但是，板载USB转UART模块连接到D4和D5，不能直接用于程序上传。为了上传固件，建议添加一个外部 USB 转 UART "
"模块连接到 D0 和 D1，如下图引脚连接："

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:153
msgid ""
"Optionally, short the pins indicated below to use the on-board USB: D1 "
"––– D5 D0 ––– D4"
msgstr "或者，短接下面指示的引脚以使用板载 USB：D1––– D5 D0 ––– D4"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:163
msgid ""
"After connected, the USB driver will be automatically installed. If there"
" is any driver issue of connecting board, please go to http://www.wch-"
"ic.com/downloads/CH341SER_ZIP.html for USB driver. Check the COM Port "
"number in Device Manager for Windows OS user:"
msgstr ""
"对应连接后，会自动安装BW16的USB驱动。如果连接板有驱动问题，请到 http://www.wch- "
"ic.com/downloads/CH341SER_ZIP.html 参考 USB 驱动程序。在 Windows 作业系统的装置管理员中检查 "
"COM 端口号："

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:177
msgid "Go to “Tools” -> “Port” and select the correct COM port."
msgstr "到“Tools”->“Port”并选择正确的 COM 端口。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:185
msgid ""
"Go to “Tools” -> “Serial Monitor”, set the baud rate as “115200”, and "
"press the RST button to check the serial port connection."
msgstr "进入“Tools”->“Serial Monitor”，将baud rate设置为“115200”，然后按RST按钮检查串口连接。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:198
msgid "Step 4. Erase flash"
msgstr "步骤四、 清除 flash"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:200
msgid ""
"Depending on the batch of manufacturing, some boards might have built-in "
"the default B&T firmware, the firmware information is shown below:"
msgstr "根据生产批次的不同，部分开发板可能内置了预设的B&T固件，固件信息如下图所示："

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:209
msgid ""
"The firmware is at the OTA section. All new compiled firmware will be "
"replaced automatically by the OTA section firmware. Therefore, OTA "
"section firmware needs to be erased first to make use of compiled "
"firmware."
msgstr "固件位于 OTA 部分。所有新编译的固件将被 OTA 固件自动替换。因此，需要先清除 OTA 固件才能使用已编译的固件。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:214
msgid "Method 1: “Erase Flash Enable” by Arduino SDK after V3.1.3"
msgstr "方法一：Arduino SDK V3.1.3 之后的“Erase Flash Enable”。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:216
msgid "Select “Tools” -> “Erase Flash” -> “Enable”"
msgstr "选择“Tools”->“Erase Flash”->“Enable”"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:225
msgid "Then enter the enter the upload mode."
msgstr "然后进入上传模式。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:227
msgid ""
"Manually. Press and hold \"Burn\" button, press then release \"RST\" "
"button and release \"Burn” button."
msgstr "手动。按住“Burn”按钮，按下然后放开“RST”按钮并放开“Burn”按钮。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:228
msgid ""
"Auto. Select “Tools” -> “Auto Upload Mode” -> “Enable”. Note that only "
"boards with auto upload circuit build-in (BW16-TypeC) can use the Auto "
"Upload Mode, otherwise it will back to normal upload mode and wait for 5 "
"seconds."
msgstr ""
"自动。选择“Tools”->“Auto Upload "
"Mode”->“Enable”。注意只有内置自动上传电路的板子（BW16-TypeC）才能使用自动上传模式，否则会回到正常上传模式并等待5秒。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:231
msgid "Next, Select “Sketch” -> “Upload”. “Erase flash done.” will show up."
msgstr "接下来，选择“Sketch”->“Upload”。 “Erase flash done” 会出现。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:244
msgid ""
"Check the serial monitor and reset board by press RST button. If only “#”"
" shows that means erase flash success. Remember to select “Tools” -> "
"“Erase Flash” -> “Disable”."
msgstr ""
"按RST按钮来检查串行监视器和重制开发板。如果只有“#”表示清除flash成功。记得选择“Tools”->“Erase "
"Flash”->“Disable”。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:254
msgid "Try the First Example"
msgstr "尝试操作范例"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:257
msgid "Step 1. Compile & Upload"
msgstr "Step 1. 编译和上传"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:259
msgid ""
"Arduino IDE provides many built-in examples, which can be compiled, "
"uploaded, and run directly on the boards. Here, we take the “Blink” "
"example as the first try."
msgstr "Arduino IDE提供了很多内置的范例，可以在开发板上直接编译、上传和运行。这里，我们以“Blink”为例进行第一次尝试。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:262
msgid "Open :guilabel:`“File” -> “Examples” -> “01.Basics” -> “Blink”`:"
msgstr "打开 “File” -> “Examples” -> “01.Basics” -> “Blink”:"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:278
msgid ""
"There is two onboard RGB LED, the default ``LED_BUILTIN`` is green color."
" Change ``LED_BUILTIN`` to ``LED_R`` or ``LED_G``, or ``LED_B`` for red, "
"green or blue colors."
msgstr ""
"板载 RGB "
"LED，预设“LED_BUILTIN”为绿色。将“LED_BUILTIN”更改为“LED_R”、“LED_G”或“LED_B”以获得红色、绿色或蓝色。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:281
msgid ""
"Next, compile the sample code directly. “Sketch” -> “Verify/Compile”. "
"Then if there is no compile error, followed by “Sketch” -> “Upload”."
msgstr "接下来，直接编译范例代码。 “Sketch”->“Verify/Compile”。然后如果没有编译错误，接着“Sketch”->“Upload”。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:283
msgid "Check and select “Tools” -> “Erase Flash” -> “Disable”."
msgstr "检查并选择 “Tools” -> “Erase Flash” -> “Disable”。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:284
msgid ""
"Enter the Upload Mode. Manual or Auto. Select “Tools” -> “Auto Upload "
"Mode” -> “Enable”/ ”Disable”."
msgstr "进入上传模式。手动或自动。选择 “Tools” -> “Auto Upload Mode” -> “Enable”/ ”Disable”。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:285
msgid ""
"“Verify/Compile” and “Upload”. “Upload” includes “Verify/Compile”, "
"“Verify/Compile” can be skipped."
msgstr ""
" “Verify/Compile” 和 “Upload”. “Upload” 包括 "
"“Verify/Compile”,“Verify/Compile” 可以跳过。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:287
msgid "Successful upload will show “All images are sent successfully!”"
msgstr "上传成功会显示“All images are sent successfully!”"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:291
msgid "Step 2. Run the Blink example"
msgstr "Step 2. 执行 Blink 范例"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:293
msgid ""
"The board will be reset automatically, press RST button if board does not"
" support Auto Upload Mode. And the onboard RGB LED will blinking."
msgstr "板子将自动重置，如果板子不支持自动上传模式，请按 RST 按钮。板载 RGB LED 将闪烁。"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:295
msgid ""
"In each example, Arduino not only provides sample code but also detailed "
"documentation, including wiring diagram, sample code explanation, "
"technical details, …etc. These examples can be directly used on BW16. "
"Refer to detailed information of the Blink example in the link below: "
"https://www.arduino.cc/en/Tutorial/BuiltInExamples/Blink"
msgstr ""
"在每个范例中，Arduino不仅提供了范例代码，还提供了详细的文档，包括接线图、范例代码说明、技术细节等。这些范例可以直接用于 "
"BW16。请参阅以下连结中的 Blink 详细信息: "
"https://www.arduino.cc/en/Tutorial/BuiltInExamples/Blink"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:300
msgid "References"
msgstr "参考"

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:302
msgid ""
"Introduction of BW16 on Instructable: "
"https://www.instructables.com/RTL8720DN/"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:304
msgid ""
"Load Arduino image into BW16: `How to load BW16 program with Arduino – "
"#13 <https://forum.amebaiot.com/t/how-to-load-bw16-program-with-"
"arduino/517/13>`_"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:306
msgid ""
"BW16 IMG2 SIGN Invalid Solution: `RTL8720DN(BW16) IMG2 SIGN Invalid "
"Solution <https://forum.amebaiot.com/t/rtl8720dn-bw16-img2-sign-invalid-"
"solution/669>`_"
msgstr ""

#: ../../source/ambd_arduino/BW16_/getting_started/ambd_getting_started.rst:308
msgid ""
"FTDI Driver Download from here: https://ftdichip.com/wp-"
"content/uploads/2021/02/CDM21228_Setup.zip"
msgstr ""

#~ msgid "First, connect BW16 to the computer via Micro USB:"
#~ msgstr ""

#~ msgid "|bw16-get-start-3|"
#~ msgstr ""

#~ msgid "First, connect BW16 to the computer via Micro USB: |bw16-get-start-3|"
#~ msgstr ""

#~ msgid ""
#~ "In order to upload firmware to "
#~ "this board, we suggested that you "
#~ "could choose to add in an external"
#~ " USB-to-UART module connecting to "
#~ "D0 and D1 as shown in the "
#~ "pin connection below:"
#~ msgstr "所以，为了将固件上传到此主板，我们建议您选择添加连接到 D0 和 D1 的外部 USB 转 UART 模组，如下面的引脚连接所示："

#~ msgid ""
#~ "After connecting accordingly, the USB "
#~ "driver for BW16 will be automatically"
#~ " installed. If you have driver issue"
#~ " of connecting board, please go to"
#~ " http://www.wch-ic.com/downloads/CH341SER_ZIP.html for"
#~ " USB driver. You can check the "
#~ "COM Port number in your Device "
#~ "Manager:"
#~ msgstr ""
#~ "用USB将开发板连接至电脑后，电脑将自动安装用于BW16/RTL8720DN的USB驱动程序。如果您在安装驱动时遇到任何与开发板的连接问题，请前往"
#~ " http://www.wch-ic.com/downloads/CH341SER_ZIP.html  "
#~ "网址下载USB驱动程式。安装完成后，您可以在电脑装置管理员中检查 COM "
#~ "端口以确认驱动安装正确，电脑可以识别BW16开发板："

#~ msgid ":guilabel:`“ambd_sdk\\\\tools\\\\AmbaD\\\\Image_tool\\\\image_tool.exe”`"
#~ msgstr ""

#~ msgid ""
#~ "Arduino IDE provides many built-in "
#~ "examples, which can be compiled, "
#~ "uploaded, and run directly on the "
#~ "boards."
#~ msgstr "Arduino IDE提供了很多内置的范例，可以在开发板上直接编译、上传和运行。"

#~ msgid "Here, we take the “Blink” example as the first try."
#~ msgstr "这里，我们以“Blink”为例进行第一次尝试。"

#~ msgid ""
#~ "Press :guilabel:`Upload` button in Arduino "
#~ "IDE to compile and upload the "
#~ "program. Arduino IDE will wait for "
#~ "5s for the development board to "
#~ "enter the upload mode."
#~ msgstr "Arduino IDE会等待5秒钟，等待开发板进入上传模式。"

#~ msgid "Required Environment"
#~ msgstr "工作环境"

#~ msgid ""
#~ "Realtek RTL8720DN is a Wi-Fi and"
#~ " Bluetooth IC that supports 2.4GHz "
#~ "and 5GHz dual bands for Wi-Fi "
#~ "communication, and Bluetooth Low Energy "
#~ "(BLE) 5.0. BW16 is a module "
#~ "manufactured by B&T, this module is "
#~ "a highly integrated Wi-Fi and "
#~ "Bluetooth module with the RTL8720DN as"
#~ " the main SoC (System on Chip), "
#~ "it can be regarded as an SoC "
#~ "for the Wi-Fi and Bluetooth "
#~ "application with typical SBCs."
#~ msgstr ""
#~ "Realtek RTL8720DN是一款Wi-Fi和蓝牙IC，支持2.4GHz和5GHz双频Wi-"
#~ "Fi通信，以及蓝牙低能耗（BLE）5.0。BW16是深圳市博安通科技股份有限公司（B&T）生产的模块，该模块是以RTL8720DN "
#~ "SoC 为主的Wi-Fi和蓝牙模块，它可以被看作是与典型SBC一起用于Wi-Fi和蓝牙应用的SoC。"

#~ msgid "|bw16-get-start-1|"
#~ msgstr ""

#~ msgid "bw16-get-start-1"
#~ msgstr ""

#~ msgid ""
#~ "BW16 has a smaller size than AMB21"
#~ " and AMB23 as shown in the "
#~ "above figure. It uses Micro USB to"
#~ " supply power, which is common in "
#~ "many smart devices. Please refer to "
#~ "the following figure and table for "
#~ "the pin diagram and function of "
#~ "BW16."
#~ msgstr ""
#~ "如上图所示，RTL8720DN (BW16) 的尺寸小于我们以往介绍的AmebaD和AmebaD "
#~ "MINI开发板。它使用Micro USB 接口供电，这种供电方式在许多智能设备中很常见。RTL8720DN "
#~ "(BW16)的引脚图和功能请参考下图和表格。"

#~ msgid "|bw16-get-start-2|"
#~ msgstr ""

#~ msgid "bw16-get-start-2"
#~ msgstr ""

#~ msgid "\\#"
#~ msgstr ""

#~ msgid "PIN name"
#~ msgstr ""

#~ msgid "GPIO"
#~ msgstr ""

#~ msgid "D0(PA7)"
#~ msgstr ""

#~ msgid "GPIOA_7"
#~ msgstr ""

#~ msgid "UART_LOG_TX"
#~ msgstr ""

#~ msgid "D1(PA8)"
#~ msgstr ""

#~ msgid "GPIOA_8"
#~ msgstr ""

#~ msgid "UART_LOG_RX"
#~ msgstr ""

#~ msgid "D2(PA27)"
#~ msgstr ""

#~ msgid "GPIOA_27"
#~ msgstr ""

#~ msgid "D3(PA30)"
#~ msgstr ""

#~ msgid "GPIOA_30"
#~ msgstr ""

#~ msgid "D4(PB1)"
#~ msgstr ""

#~ msgid "GPIOB_1"
#~ msgstr ""

#~ msgid "Serial_TX"
#~ msgstr ""

#~ msgid "D5(PB2)"
#~ msgstr ""

#~ msgid "GPIOB_2"
#~ msgstr ""

#~ msgid "Serial_RX"
#~ msgstr ""

#~ msgid "D6(PB3)"
#~ msgstr ""

#~ msgid "GPIOB_3"
#~ msgstr ""

#~ msgid "D7(PA25)"
#~ msgstr ""

#~ msgid "GPIOA_25"
#~ msgstr ""

#~ msgid "I2C0_CLK"
#~ msgstr ""

#~ msgid "D8(PA26)"
#~ msgstr ""

#~ msgid "GPIOA_26"
#~ msgstr ""

#~ msgid "I2C0_SDA"
#~ msgstr ""

#~ msgid "D9(PA15)"
#~ msgstr ""

#~ msgid "GPIOA_15"
#~ msgstr ""

#~ msgid "SPI_CS"
#~ msgstr ""

#~ msgid "D10(PA14)"
#~ msgstr ""

#~ msgid "GPIOA_14"
#~ msgstr ""

#~ msgid "SPI_CLK"
#~ msgstr ""

#~ msgid "D11(PA13)"
#~ msgstr ""

#~ msgid "GPIOA_13"
#~ msgstr ""

#~ msgid "D12(PA12)"
#~ msgstr ""

#~ msgid "GPIOA_12"
#~ msgstr ""

#~ msgid "bw16-get-start-3"
#~ msgstr ""

#~ msgid ""
#~ "If this is the first time you "
#~ "connect BW16 to your computer, here "
#~ "is something that you might take "
#~ "note of:"
#~ msgstr "如果这是您第一次将RTL8720DN (BW16)连接到电脑，请注意以下事项。"

#~ msgid ""
#~ "From the pinmap above, we know D0"
#~ " and D1 pins are used for "
#~ "program uploading. However, according to "
#~ "the schematic design of AI Thinker, "
#~ "the onboard USB-to-UART module is"
#~ " connected to D4 and D5 which "
#~ "cannot be directly used for program "
#~ "upload. In order to upload firmware "
#~ "to this board, we suggested that "
#~ "you could choose to add in an "
#~ "external USB-to-UART module connecting"
#~ " to D0 and D1 as shown in "
#~ "the pin connection below:"
#~ msgstr ""
#~ "从上面的引脚图中，我们知道引脚 D0 和 "
#~ "D1可以被用于程序上传。但是，根据安信可的原理图设计，板载USB转UART模组连接到引脚 D4 和 "
#~ "D5，因此该USB转UART模组并不能直接用于程式上传。"

#~ msgid "|bw16-get-start-4|"
#~ msgstr ""

#~ msgid "bw16-get-start-4"
#~ msgstr ""

#~ msgid "D1 ––– D5"
#~ msgstr ""

#~ msgid "D0 ––– D4"
#~ msgstr ""

#~ msgid "|bw16-get-start-5|"
#~ msgstr ""

#~ msgid "bw16-get-start-5"
#~ msgstr ""

#~ msgid ""
#~ "After connecting accordingly, the USB "
#~ "driver for BW16 will be automatically"
#~ " installed."
#~ msgstr "用USB将开发板连接至电脑后，电脑将自动安装用于BW16/RTL8720DN的USB驱动程序。"

#~ msgid ""
#~ "If you have driver issue of "
#~ "connecting board, please go to "
#~ "http://www.wch-ic.com/downloads/CH341SER_ZIP.html for "
#~ "USB driver."
#~ msgstr ""
#~ "如果您在安装驱动时遇到任何与开发板的连接问题，请前往http://www.wch-"
#~ "ic.com/downloads/CH341SER_ZIP.html 网址下载USB驱动程式。"

#~ msgid ""
#~ "You can check the :guilabel:`COM` Port"
#~ " number in your :guilabel:`Device Manager`:"
#~ msgstr ""
#~ "安装完成后，您可以在电脑 :guilabel:`装置管理员` 中检查 :guilabel:`COM`"
#~ " 端口以确认驱动安装正确，电脑可以识别BW16开发板："

#~ msgid "|bw16-get-start-6|"
#~ msgstr ""

#~ msgid "bw16-get-start-6"
#~ msgstr ""

#~ msgid ""
#~ "From version 1.6.5, Arduino IDE supports"
#~ " third-party hardware. TTherefore, we "
#~ "can use Arduino IDE to develop "
#~ "applications on BW16, and the basic "
#~ "examples of Arduino can run on "
#~ "BW16 too. Refer to the :doc:`Basic "
#~ "Examples </ambd_arduino/BW16_/examples_and_components/Basic "
#~ "Examples>`."
#~ msgstr ""
#~ "从 1.6.5 版本开始，Arduino IDE "
#~ "支持第三方硬件。因此，我们可以使用Arduino "
#~ "IDE在RTL8720DN（BW16）开发应用程序，Arduino的基本范例也可以在 BW16上运行。请参阅 "
#~ ":doc:`基本范例 </ambd_arduino/BW16_/examples_and_components/Basic"
#~ " Examples>` 。"

#~ msgid ""
#~ "And paste the following URL into "
#~ ":guilabel:`“Additional Boards Manager URLs”` "
#~ "field::"
#~ msgstr "并将以下 URL 复制到 “Additional Boards Manager URLs” 栏位:"

#~ msgid "BW16 will be supported from v3.0.8 officially."
#~ msgstr "从 v3.0.8版本开始，Ameba Arduino将正式支持RTL8720DN (BW16)开发板。"

#~ msgid "|bw16-get-start-7|"
#~ msgstr ""

#~ msgid "bw16-get-start-7"
#~ msgstr ""

#~ msgid ""
#~ "The :guilabel:`“Boards Manager”` requires "
#~ "about 10~20 seconds to refresh all "
#~ "hardware files (if the network is "
#~ "in bad condition, it may take "
#~ "longer). Every time the new hardware "
#~ "is connected, we need to reopen "
#~ "the Board Manager. So, we close "
#~ "the :guilabel:`“Boards Manager”`, and then "
#~ "open it again. Find :guilabel:`“Realtek "
#~ "Ameba Boards (32-bits ARM Cortex-M33 "
#~ "@200MHz)”` in the list, click "
#~ ":guilabel:`“Install”`, then the Arduino IDE"
#~ " starts to download required files "
#~ "for RTL8722DM."
#~ msgstr ""
#~ "“Boards "
#~ "Manager”大约需要10~20秒来刷新所有硬件文件(如果网络状况不好，可能需要更长的时间)。每次连接新硬件时，我们都需要重新打开Boards"
#~ " Manager。因此，我们先关闭然后再次打开它。在列表中找到“Realtek Ameba Boards"
#~ " (32-bits ARM Cortex-M33 "
#~ "@200MHz)”，点击“Install”，Arduino IDE会自动开始下载AmebaD所需的文件。"

#~ msgid "|bw16-get-start-8|"
#~ msgstr ""

#~ msgid "bw16-get-start-8"
#~ msgstr ""

#~ msgid ""
#~ "If you are facing GitHub downloading "
#~ "issue, please refer to the following "
#~ "link at `Download/Software Development Kit`_."
#~ " There are 3 sections:"
#~ msgstr ""
#~ "如果您遇到 GitHub 下载问题，请参考以下 `Download/Software "
#~ "Development Kit`_ 中的链接。有3个部分。"

#~ msgid ""
#~ ":guilabel:`“AmebaD_Arduino_patch1_SDK”`, please select "
#~ "at least 1 of the SDKs. There "
#~ "are 5 latest released SDK options."
#~ msgstr "“AmebaD_Arduino_patch1_SDK”，请至少选择 1 个 SDK。目前有 5 个最新发布的 SDK 选项。"

#~ msgid ""
#~ ":guilabel:`“AmebaD_Arduino_patch2_Tools”`, please select"
#~ " according to your operation system. "
#~ "There are Windows, Linux and MacOS."
#~ msgstr "“AmebaD_Arduino_patch2_Tools”，请根据您的作业系统进行选择。有 Windows、Linux 和 MacOS。"

#~ msgid ""
#~ ":guilabel:`“AmebaD_Arduino_Source_Code”`, this section "
#~ "is optional download only wants to "
#~ "refer the latest source code."
#~ msgstr "“AmebaD_Arduino_Source_Code”，此部分为可选下载，用来参考最新原始码。"

#~ msgid ""
#~ "After the installation tool running "
#~ "successfully, you may open Arduino IDE"
#~ " and proceed to :guilabel:`“Tools” -> "
#~ "“Board“ -> “Boards Manager…”`. Try to"
#~ " find :guilabel:`“Realtek Ameba Boards "
#~ "(32-bits ARM Cortex-M33 @200MHz)”`` in "
#~ "the list, click :guilabel:`“Install”`, then"
#~ " the Arduino IDE starts to download"
#~ " required files for AmebaD."
#~ msgstr ""
#~ "安装工具运行成功后，您可以打开Arduino IDE并选择 “tools” -> "
#~ "“Board“ -> “Boards Manager…”。尝试在列表中找到“Realtek "
#~ "Ameba Boards (32-bits ARM Cortex-M33 "
#~ "@200MHz)”，点击“Install”，Arduino IDE开始下载AmebaD所需的文件。"

#~ msgid "|bw16-get-start-9|"
#~ msgstr ""

#~ msgid "bw16-get-start-9"
#~ msgstr ""

#~ msgid "How to upload firmware into BW16"
#~ msgstr "如何更新BW16轫体"

#~ msgid "|bw16-get-start-10|"
#~ msgstr ""

#~ msgid "bw16-get-start-10"
#~ msgstr ""

#~ msgid ""
#~ "This will cause Arduino Image unable "
#~ "to flash into the module. Although "
#~ "information of “All images are sent "
#~ "successfully! Image tool closed! Upload "
#~ "Image did.” is showing in the "
#~ "Image Tool, however, the factory image"
#~ " is unable to be erased. "
#~ "Unfortunately after press the onboard "
#~ "RST button, you will find the "
#~ "factory image still remains in the "
#~ "flash."
#~ msgstr ""
#~ "这将导致 Arduino Image 无法写入模块。虽然有“All images "
#~ "are sent successfully! Image tool "
#~ "closed! Upload Image did.”的信息。但无法清除出厂Image，按下板载 "
#~ "RST 按钮后，您会发现出厂Image仍然保留着。"

#~ msgid ""
#~ "Arduino IDE provides many built-in "
#~ "examples, which can be compiled, "
#~ "uploaded and run directly on the "
#~ "boards. Here, we take the “Blink” "
#~ "example as the first try."
#~ msgstr "Arduino IDE提供了很多内置的范例，可以在开发板上直接编译、上传和运行。这里，我们以“Blink”为例进行第一次尝试。"

#~ msgid "Uploading Solution"
#~ msgstr "上传方法"

#~ msgid "Method 1: Use AmebaD Image Tool to erase flash"
#~ msgstr "方法1 – 使用AmebaD Image Tool清除Flash"

#~ msgid ""
#~ "The B&T default factory image can "
#~ "be washed using “Erase” function "
#~ "provided by Realtek’s Image Tool. Using"
#~ " Image Tool to erase the flash "
#~ "image memory starting from memory "
#~ "address: 0x8000_0000 till the end of "
#~ "2MB memory location, later on, we "
#~ "need to upload Realtek’s image back "
#~ "to the module again using Arduino "
#~ "IDE."
#~ msgstr ""
#~ "B&T预设轫体可以通过Realtek提供的Image Tool使用“Erase”功能来进行更新。使用 Image"
#~ " Tool 从记忆体位址 0x8000_0000 开始清除Flash image，直到"
#~ " 2MB 内存位置结束稍后，我们需要使用 Arduino IDE 再次将 "
#~ "Realtek image上传回模块。"

#~ msgid "|bw16-get-start-11|"
#~ msgstr ""

#~ msgid "bw16-get-start-11"
#~ msgstr ""

#~ msgid "Step 1 – Download and prepare the Image Tool"
#~ msgstr "步骤1 -下载并准备 Image Tool."

#~ msgid ""
#~ "Download ambd_sdk from the link ambiot"
#~ " GitHub: https://github.com/ambiot/ambd_sdk."
#~ msgstr "从 ambiot GitHub 的链接下载 ambd_sdk: https://github.com/ambiot/ambd_sdk."

#~ msgid ""
#~ "The Realtek’s Image Tool can be "
#~ "found under the following file path: "
#~ ":guilabel:`“ambd_sdk\\\\tools\\\\AmbaD\\\\Image_tool\\\\image_tool.exe”`"
#~ msgstr ""
#~ "Realtek 的 Image Tool 可以在以下文件路径下找到：“ambd_sdk"
#~ "\tools\\AmbaD\\Image_tool\\image_tool.exe”。"

#~ msgid "Step 2 – Setup the Image Tool"
#~ msgstr "步骤2 – 设定 Image Tool"

#~ msgid ""
#~ "In the :guilabel:`Chip Select` option, "
#~ "choose :guilabel:`AmebaD(8721D)` which is also"
#~ " suitable for RTL8720DN chip."
#~ msgstr "“Chip Select” 选项中, 选择 “AmebaD(8721D)”"

#~ msgid "Select correct :guilabel:`COM` Port that you are using."
#~ msgstr "选择您正在使用的正确 :guilabel:`COM` 端口"

#~ msgid "Set the Baudrate to :guilabel:`115200`."
#~ msgstr " 设定Baudrate至“115200”"

#~ msgid ""
#~ "Then key in the Flash Erase "
#~ "starting position from Memory Address of"
#~ " **0x0800 0000**."
#~ msgstr "然后从Memory Address 0x0800 0000 开始键入Flash Erase 起始位置"

#~ msgid "The size to be 2048 KB."
#~ msgstr "具体内存大小为2048 KB"

#~ msgid ""
#~ "Set the module to “Download mode” "
#~ "first, then click the :guilabel:`Erase` "
#~ "button."
#~ msgstr "首先将模块设置为“Download mode”，然后单击“Erase”按钮"

#~ msgid "|bw16-get-start-12|"
#~ msgstr ""

#~ msgid "bw16-get-start-12"
#~ msgstr ""

#~ msgid ""
#~ "Upon finishing the above image erase "
#~ "and press the reset button, we "
#~ "could find that the ``\"#calibration\"`` "
#~ "will no longer pop out, only "
#~ "``\"#\"`` will appear in the Serial "
#~ "Monitor."
#~ msgstr "完成上面的清除并按重置按钮后，我们可以发现“#calibration”不再弹出，只有“#”出现在serial monitor中。"

#~ msgid "|bw16-get-start-13|"
#~ msgstr ""

#~ msgid "bw16-get-start-13"
#~ msgstr ""

#~ msgid "Step 3 – Download Image using Arduino IDE"
#~ msgstr "步骤3 – 使用Arduino IDE 下载 Image"

#~ msgid ""
#~ "Now you are able to download the"
#~ " program via UART in Ardunio IDE. "
#~ "In order to upload the program, "
#~ "you could choose to either use an"
#~ " external USB-to-UART module "
#~ "connecting to D0 and D1, or short"
#~ " the pins indicated below to use "
#~ "the on-board USB:"
#~ msgstr ""
#~ "现在您可以在 Arduio IDE 中通过 UART "
#~ "下载程序。为了上传程序，您可以选择使用连接到 D0 和 D1 的外部 "
#~ "USB-to-UART 模块，或短接如下所示的引脚以使用板载 USB："

#~ msgid "Optional Uploading Solution"
#~ msgstr "解决上传方法"

#~ msgid "OTA (Over The Air)"
#~ msgstr ""

#~ msgid ""
#~ "Ai-Thinker is providing a guide "
#~ "for OTA firmware upload in Section "
#~ "6.1 of B&T “RTL8720D AT Command "
#~ "User Manual” of which can be "
#~ "retrieved from this `link <https://docs.ai-"
#~ "thinker.com/_media/rtl8710/docs/rtl8720d-"
#~ "at%E6%8C%87%E4%BB%A4%E6%89%8B%E5%86%8Cv2.4.1-20190814.pdf>`_ "
#~ "here."
#~ msgstr ""
#~ "Ai-Thinker 在 B&T 《RTL8720D AT "
#~ "Command User Manual》的 6.1 节中提供了 OTA "
#~ "轫体上传指南，可从以下链接获取：https://docs.ai-thinker.com/_media/rtl8710/docs"
#~ "/rtl8720d-"
#~ "at%E6%8C%87%E4%BB%A4%E6%89%8B%E5%86%8Cv2.4.1-20190814.pdf."

#~ msgid "|bw16-get-start-14|"
#~ msgstr ""

#~ msgid "bw16-get-start-14"
#~ msgstr ""

#~ msgid "Arduino IDE opens a new window with the complete sample code."
#~ msgstr "Arduino IDE 打开一个带有完整范例代码的新视窗。"

#~ msgid "|bw16-get-start-15|"
#~ msgstr ""

#~ msgid "bw16-get-start-15"
#~ msgstr ""

#~ msgid ""
#~ "There is two onboard LED on BW16,"
#~ " the default ``LED_BUILTIN`` is the "
#~ "onboard green LED. Change ``LED_BUILTIN`` "
#~ "to ``LED_B`` or ``LED_R`` for different"
#~ " colors such as blue and red."
#~ msgstr ""
#~ "BW16 的开发板上带有板载 LED， 默认的”LED_BUILTIN”代表绿色板载 "
#~ "LED。将”LED_BUILTIN”更改为”LED_B”或”LED_R”则可以将颜色转换为蓝色或者红色。"

#~ msgid "Here we use ``LED_B`` for demonstration purpose."
#~ msgstr "这里，我们使用LED_B为例。"

#~ msgid ""
#~ "Next, we compile the sample code "
#~ "directly; click :guilabel:`“Sketch” -> "
#~ "“Verify/Compile”`"
#~ msgstr "接下来，我们直接编译范例代码，点击“Sketch”->“Verify/Compile”"

#~ msgid "|bw16-get-start-16|"
#~ msgstr ""

#~ msgid "bw16-get-start-16"
#~ msgstr ""

#~ msgid ""
#~ "Arduino IDE prints the compiling "
#~ "messages in the bottom area of the"
#~ " IDE window. When the compilation is"
#~ " finished, you will get the message"
#~ " similar to the following figure:"
#~ msgstr "Arduino IDE在IDE窗口的底部区域打印编译消息。编译完成后，会得到如下图所示的消息:"

#~ msgid "|bw16-get-start-17|"
#~ msgstr ""

#~ msgid "bw16-get-start-17"
#~ msgstr ""

#~ msgid "Afterwards, we will upload the compiled code to BW16."
#~ msgstr "之后，我们将把编译后的代码上传到 BW16。"

#~ msgid ""
#~ "Please make sure BW16 is connected "
#~ "to your computer, then click "
#~ ":guilabel:`“Sketch” -> “Upload”`."
#~ msgstr "请确保 BW16 已连接到您的电脑，然后单击“Sketch” -> “Upload”。"

#~ msgid ""
#~ "The Arduino IDE will compile first "
#~ "then upload. During the uploading "
#~ "process, users are required to enter "
#~ "the upload mode of the board. To"
#~ " enter the upload mode, first press"
#~ " and hold the BW16 :guilabel:`Burn` "
#~ "button, press the :guilabel:`RST` button, "
#~ "and then release the :guilabel:`Burn` "
#~ "button."
#~ msgstr ""
#~ "Arduino "
#~ "IDE将先编译，然后上传。在上传过程中，用户需要将开发板调至上传模式。要进入上传模式，首先按住RTL8720DN(BW16)“Burn”键，按下“RST”键，然后松开“Burn”键。"

#~ msgid "|bw16-get-start-18|"
#~ msgstr ""

#~ msgid "bw16-get-start-18"
#~ msgstr ""

#~ msgid ""
#~ "Please make sure the board is "
#~ "connected to your computer, then click"
#~ " :guilabel:`\"sketch\" → \"Upload\"`. There "
#~ "is a 5-seconds count down set as"
#~ " a reminder to enter the upload "
#~ "mode."
#~ msgstr "请确保 BW16 已连接到您的电脑，然后单击“Sketch” -> “Upload”。有一个5秒的倒计时提醒您進入上傳模式。 "

#~ msgid "|bw16-get-start-19|"
#~ msgstr ""

#~ msgid "bw16-get-start-19"
#~ msgstr ""

#~ msgid ""
#~ "Again, during the uploading procedure "
#~ "the IDE prints messages. Uploading "
#~ "procedure takes considerably longer time "
#~ "(about 30 seconds to 1 minute). "
#~ "When upload completed, the “Done "
#~ "uploading” message is printed."
#~ msgstr ""
#~ "同样，在上传过程中IDE会自动显示消息。上传过程需要相当长的时间(大约30秒到1分钟)。上传完成后，您会看到“Done "
#~ "uploading”消息。"

#~ msgid ""
#~ "So, we find the detailed information "
#~ "of the `Blink example "
#~ "<https://www.arduino.cc/en/Tutorial/Blink>`__."
#~ msgstr ""
#~ "在这里我们可以找到Blink这个范例的详细信息: "
#~ "https://www.arduino.cc/en/Tutorial/BuiltInExamples/Blink"

#~ msgid ""
#~ "In short, for BW16, the example "
#~ "can be run on both the onboard "
#~ "RGB LED or external LED (use any"
#~ " GPIO pins for signal output). "
#~ "Finally, press the :guilabel:`RST` button, "
#~ "and you can see the RGB LED "
#~ "turns into blue and keep blinking."
#~ msgstr ""
#~ "简而言之，对于RTL8720DN，该范例可以在板载RGB "
#~ "LED或外接LED（使用任何GPIO引脚进行信号输出）上运行。最后，按RST按钮，你就会看到LED开始闪烁。"

#~ msgid "Software Environment Requirements"
#~ msgstr "使用环境配置"

#~ msgid ""
#~ "BW16 board (RTL8720DN Dual-Band Wi-"
#~ "Fi board) currently supports Windows "
#~ "XP/7/8/10/11 32-bits and 64-bits operating "
#~ "systems. In this documentation, please "
#~ "use the latest version of Arduino "
#~ "IDE."
#~ msgstr ""
#~ "BW16开发板（RTL8720DN双频Wi-Fi开发板）目前支援Windows XP/7/8/10/11 "
#~ "32位和64位作业系统。在本文档中，请使用最新版本的 Arduino IDE。"

#~ msgid "Eraase flash before first use"
#~ msgstr "首次使用前清除 flash"

#~ msgid "**(End)**"
#~ msgstr ""

#~ msgid ""
#~ "If you face any issue, please "
#~ "refer to the FAQ and Trouble "
#~ "shooting sections on :doc:`../support/index` "
#~ "page."
#~ msgstr ""

