# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-10 10:15+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:2
msgid "Class MDNS"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:6
#: MDNSClass.rst:41 MDNSClass.rst:112 MDNSClass.rst:143 MDNSClass.rst:175
#: MDNSClass.rst:209
msgid "**Description**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:8
msgid "A class used for registering and removing MDNS service records."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:10
#: MDNSClass.rst:45 MDNSClass.rst:116 MDNSClass.rst:147 MDNSClass.rst:179
#: MDNSClass.rst:213
msgid "**Syntax**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:16
msgid "**Members**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:19
msgid "**Public Constructors**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:21
msgid ""
"The public constructor should not be used as this class is intended to be"
" a singleton class. Access member functions using the object instance "
"named MDNS."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:27
msgid "**Public Methods**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:29
msgid "MDNSClass::begin"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:29
msgid "Start MDNS operations"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:30
msgid "MDNSClass::end"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:30
msgid "Stop MDNS operations"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:31
msgid "MDNSClass::registerService"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:31
msgid "Add a service record"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:32
msgid "MDNSClass::deregisterService"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:32
msgid "Remove service record"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:33
msgid "MDNSClass::updateService"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:33
msgid "Update service record"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:43
msgid "Start MDNS operations to begin responding to MDNS queries."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:51
#: MDNSClass.rst:122 MDNSClass.rst:153 MDNSClass.rst:185 MDNSClass.rst:219
msgid "**Parameters**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:53
#: MDNSClass.rst:124
msgid "The function requires no input parameter."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:55
#: MDNSClass.rst:126 MDNSClass.rst:157 MDNSClass.rst:189 MDNSClass.rst:225
msgid "**Returns**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:57
#: MDNSClass.rst:128 MDNSClass.rst:159 MDNSClass.rst:191 MDNSClass.rst:227
msgid "The function returns nothing."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:59
#: MDNSClass.rst:130 MDNSClass.rst:161 MDNSClass.rst:193 MDNSClass.rst:229
msgid "**Example Code**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:61
#: MDNSClass.rst:163 MDNSClass.rst:195
msgid "Example: mDNS_On_Arduino_IDE"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:63
msgid "This example shows how to register Ameba as a service that can be"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:65
msgid ""
"recognized by Arduino IDE. If both of the PC runs Arduino IDE and the "
"Ameba board are connecting to the same local network. Then you can find "
"Ameba in “Tools” -> “Port” -> “Arduino at 192.168.1.238 (Ameba RTL8195A),"
" which means the Arduino IDE find Ameba via mDNS."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:70
msgid "mDNS_On_Arduino_IDE"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:114
msgid "Stop MDNS operations and stop responding to MDNS queries."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:132
#: MDNSClass.rst:231
msgid "NA"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:134
#: MDNSClass.rst:167 MDNSClass.rst:199 MDNSClass.rst:233
msgid "**Notes and Warnings**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:136
#: MDNSClass.rst:169 MDNSClass.rst:201 MDNSClass.rst:235
msgid "Include “AmebaMDNS.h” to use the class function."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:145
msgid "Add a service record to be included in MDNS responses."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:155
msgid "``service`` : MDNSService class object with required MDNS service data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:165
#: MDNSClass.rst:197
msgid ""
"Details of the code can be found in the previous section of ``MDNSClass::"
" begin``."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:177
msgid "Remove a service record from MDNS responses."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:187
msgid "``service`` : MDNSService class object to be removed"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:211
msgid "Update a service record."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:221
msgid "``service``: MDNSService class object to be updated"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class MDNSClass.rst:223
msgid "``ttl`` : time-to-live(TTL) for service"
msgstr ""

#~ msgid "Class HttpClient"
#~ msgstr ""

#~ msgid "**MDNSClass Class**"
#~ msgstr ""

#~ msgid "class MDNSClass"
#~ msgstr ""

#~ msgid "**MDNSClass::begin**"
#~ msgstr ""

#~ msgid "void begin(void);"
#~ msgstr ""

#~ msgid ""
#~ "This example shows how to register "
#~ "Ameba as a service that can be "
#~ "recognized by Arduino IDE. If both "
#~ "of the PC runs Arduino IDE and "
#~ "the Ameba board are connecting to "
#~ "the same local network. Then you "
#~ "can find Ameba in “Tools” -> "
#~ "“Port” -> “Arduino at 192.168.1.238 "
#~ "(Ameba RTL8195A), which means the "
#~ "Arduino IDE find Ameba via mDNS."
#~ msgstr ""

#~ msgid "**#include <WiFi.h>**"
#~ msgstr ""

#~ msgid "**#include <AmebaMDNS.h>**"
#~ msgstr ""

#~ msgid "**char** ssid[] = \"yourNetwork\"; // your network SSID (name)"
#~ msgstr ""

#~ msgid "**char** pass[] = \"secretPassword\"; // your network password"
#~ msgstr ""

#~ msgid "MDNSService service(\"MyAmeba\", \"_arduino._tcp\", \"local\", 5000);"
#~ msgstr ""

#~ msgid "**void** setup() {"
#~ msgstr ""

#~ msgid "printf(\"Try to connect to %s\\r\\n\", ssid);"
#~ msgstr ""

#~ msgid "**while** (WiFi.begin(ssid, pass) != WL_CONNECTED) {"
#~ msgstr ""

#~ msgid "printf(\"Failed. Wait 1s and retry...\\r\\n\");"
#~ msgstr ""

#~ msgid "delay(1000);"
#~ msgstr ""

#~ msgid "}"
#~ msgstr ""

#~ msgid "printf(\"Connected to %s\\r\\n\", ssid);"
#~ msgstr ""

#~ msgid ""
#~ "service.addTxtRecord(\"board\", strlen(\"ameba_rtl8195a\"), "
#~ "\"ameba_rtl8195a\");"
#~ msgstr ""

#~ msgid "service.addTxtRecord(\"auth_upload\", strlen(\"no\"), \"no\");"
#~ msgstr ""

#~ msgid "service.addTxtRecord(\"tcp_check\", strlen(\"no\"), \"no\");"
#~ msgstr ""

#~ msgid "service.addTxtRecord(\"ssh_upload\", strlen(\"no\"), \"no\");"
#~ msgstr ""

#~ msgid "printf(\"Start mDNS service\\r\\n\");"
#~ msgstr ""

#~ msgid "MDNS.begin();"
#~ msgstr ""

#~ msgid "printf(\"register mDNS service\\r\\n\");"
#~ msgstr ""

#~ msgid "MDNS.registerService(service);"
#~ msgstr ""

#~ msgid "**void** loop() {"
#~ msgstr ""

#~ msgid "// put your main code here, to run repeatedly:"
#~ msgstr ""

#~ msgid "**MDNSClass::end**"
#~ msgstr ""

#~ msgid "void end(void);"
#~ msgstr ""

#~ msgid "**MDNSClass::registerService**"
#~ msgstr ""

#~ msgid "void register service(MDNSService service);"
#~ msgstr ""

#~ msgid "service: MDNSService class object with required MDNS service data"
#~ msgstr ""

#~ msgid ""
#~ "Details of the code can be found"
#~ " in the previous section of "
#~ "MDNSClass:: begin."
#~ msgstr ""

#~ msgid "**MDNSClass::deregisterService**"
#~ msgstr ""

#~ msgid "void deregisterService(MDNSService service);"
#~ msgstr ""

#~ msgid "service: MDNSService class object to be removed"
#~ msgstr ""

#~ msgid "**MDNSClass::updateService**"
#~ msgstr ""

#~ msgid "void updateService(MDNSService service, unsigned int ttl);"
#~ msgstr ""

#~ msgid "service: MDNSService class object to be updated"
#~ msgstr ""

#~ msgid "ttl: time-to-live(TTL) for service"
#~ msgstr ""

