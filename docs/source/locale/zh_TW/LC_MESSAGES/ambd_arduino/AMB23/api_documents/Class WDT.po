# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-02 06:46+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../../source/ambd_arduino/api_class/Class WDT.rst:3
msgid "Class WDT"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:5 WDT.rst:48 WDT.rst:142
#: WDT.rst:175 WDT.rst:208 WDT.rst:241
msgid "**Description**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:7
msgid "A class used for initializing, starting, stopping watchdog timer."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:9 WDT.rst:52 WDT.rst:146
#: WDT.rst:179 WDT.rst:212 WDT.rst:245
msgid "**Syntax**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:15
msgid "**Members**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:18
msgid "**Public Constructors**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:20
msgid ""
"A public constructor should not be used as this class is intended to be a"
" singleton class. Access member functions using the object instance named"
" WDT."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:26
msgid "**Public Methods**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:28
msgid "WDT:: InitWatchdog"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:28
msgid "Initializes the watchdog, include time setting, and mode register"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:31
msgid "WDT:: StartWatchdog"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:31
msgid "Start the watchdog counting"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:33
msgid "WDT:: StopWatchdog"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:33
msgid "Stop the watchdog counting"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:35
msgid "WDT:: RefreshWatchdog"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:35
msgid "Refresh the watchdog counting to prevent WDT timeout"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:38
msgid "WDT:: InitWatchdogIRQ"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:38
msgid ""
"Switch the watchdog timer to interrupt mode and register a watchdog timer"
" timeout interrupt handler"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:50
msgid "Initializes the watchdog, include time setting, and mode register."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:58 WDT.rst:152 WDT.rst:185
#: WDT.rst:218 WDT.rst:251
msgid "**Parameters**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:60
msgid ""
"``timeout_ms``: the watch-dog timer timeout value in millisecond (ms). "
"The default action after watchdog timer timeout is to reset the whole "
"system."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:62 WDT.rst:156 WDT.rst:189
#: WDT.rst:222 WDT.rst:257
msgid "**Returns**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:64 WDT.rst:158 WDT.rst:191
#: WDT.rst:224 WDT.rst:259
msgid "The function returns nothing."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:66 WDT.rst:160 WDT.rst:193
#: WDT.rst:226 WDT.rst:261
msgid "**Example Code**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:68 WDT.rst:162 WDT.rst:195
#: WDT.rst:228 WDT.rst:263
msgid "Example: WatchdogTimer"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:70
msgid "WatchdogTimer"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:134
msgid "**Notes and Warnings** NA"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:144
msgid "Start the watchdog counting."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:154 WDT.rst:187
#: WDT.rst:220
msgid "The function requires no input parameter."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:164 WDT.rst:197
#: WDT.rst:230 WDT.rst:265
msgid "You may refer to the code in previous section of ``WDT::InitWatchdog``."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:166 WDT.rst:199
#: WDT.rst:232 WDT.rst:267
msgid "**Notes and Warnings**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:168 WDT.rst:201
#: WDT.rst:234 WDT.rst:269
msgid "NA"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:177
msgid "Stop the watchdog counting."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:210
msgid "Refresh the watchdog counting to prevent WDT timeout."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:243
msgid ""
"Switch the watchdog timer to interrupt mode and register a watchdog timer"
" timeout interrupt handler. The interrupt handler will be called when the"
" watchdog timer is timeout."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:253
msgid "``handler`` : the callback function for WDT timeout interrupt."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class WDT.rst:255
msgid "``id`` : the parameter for the callback function"
msgstr ""

#~ msgid "**WDT Class**"
#~ msgstr ""

#~ msgid "class WDT"
#~ msgstr ""

#~ msgid "**WDT:: InitWatchdog**"
#~ msgstr ""

#~ msgid "void InitWatchdog(uint32_t timeout_ms);"
#~ msgstr ""

#~ msgid ""
#~ "timeout_ms: the watch-dog timer timeout"
#~ " value in millisecond (ms). The "
#~ "default action after watchdog timer "
#~ "timeout is to reset the whole "
#~ "system."
#~ msgstr ""

#~ msgid "\\/*"
#~ msgstr ""

#~ msgid "\\* This example describes how to use watchdog api."
#~ msgstr ""

#~ msgid "\\* In this example, watchdog is setup to 5s timeout."
#~ msgstr ""

#~ msgid "\\* Watchdog won't bark if we refresh it before timeout in smallTask."
#~ msgstr ""

#~ msgid "\\* The timer is also reloaded after refresh."
#~ msgstr ""

#~ msgid ""
#~ "\\* Otherwise, while running bigTask, "
#~ "watchdog will restart system in default"
#~ " or call callback function if "
#~ "registered."
#~ msgstr ""

#~ msgid "\\*/"
#~ msgstr ""

#~ msgid "**#include \"wdt.h\"**"
#~ msgstr ""

#~ msgid "**#define RUN_CALLBACK_IF_WATCHDOG_BARKS (0)**"
#~ msgstr ""

#~ msgid "WDT wdt;"
#~ msgstr ""

#~ msgid "**void** setup() {"
#~ msgstr ""

#~ msgid "Serial.begin(115200);"
#~ msgstr ""

#~ msgid "wdt.InitWatchdog(5000); // setup 5s watchdog"
#~ msgstr ""

#~ msgid "**#if RUN_CALLBACK_IF_WATCHDOG_BARKS**"
#~ msgstr ""

#~ msgid "wdt.InitWatchdogIRQ(my_watchdog_irq_handler, 0);"
#~ msgstr ""

#~ msgid "**#else**"
#~ msgstr ""

#~ msgid "// system would restart in default when watchdog barks"
#~ msgstr ""

#~ msgid "**#endif**"
#~ msgstr ""

#~ msgid "wdt.StartWatchdog(); // enable watchdog timer"
#~ msgstr ""

#~ msgid "successfulTask();"
#~ msgstr ""

#~ msgid "failedTask();"
#~ msgstr ""

#~ msgid "**while** (1)"
#~ msgstr ""

#~ msgid ";"
#~ msgstr ""

#~ msgid "}"
#~ msgstr ""

#~ msgid "**void** loop() {"
#~ msgstr ""

#~ msgid "**void** successfulTask(**void**) {"
#~ msgstr ""

#~ msgid "Serial.println(\"......doing small task......\");"
#~ msgstr ""

#~ msgid "**for** (**int** i = 0; i < 50000000; i++) // dummy task"
#~ msgstr ""

#~ msgid "**asm**\\ (\" nop\");"
#~ msgstr ""

#~ msgid "Serial.println(\"refresh watchdog\\r\\n\");"
#~ msgstr ""

#~ msgid "wdt.RefreshWatchdog();"
#~ msgstr ""

#~ msgid "\\* Doing this task will lead to failed refresh the"
#~ msgstr ""

#~ msgid "\\* watchdog timer within the time limits of 5 seconds"
#~ msgstr ""

#~ msgid "**void** failedTask(**void**) {"
#~ msgstr ""

#~ msgid "Serial.println(\"......doing big task......\");"
#~ msgstr ""

#~ msgid "**for** (**int** i = 0; i < 10; i++) {"
#~ msgstr ""

#~ msgid "Serial.print(\"doing dummy task #\");"
#~ msgstr ""

#~ msgid "Serial.println(i, DEC);"
#~ msgstr ""

#~ msgid "**for** (**int** j = 0; j < 50000000; j++) // dummy task"
#~ msgstr ""

#~ msgid "**void** my_watchdog_irq_handler(**uint32_t** id) {"
#~ msgstr ""

#~ msgid "printf(\"watchdog barks!!!\\r\\n\");"
#~ msgstr ""

#~ msgid "WDG_Cmd(DISABLE);"
#~ msgstr ""

#~ msgid "**WDT:: StartWatchdog**"
#~ msgstr ""

#~ msgid "void StartWatchdog(void);"
#~ msgstr ""

#~ msgid "You may refer to the code in previous section of WDT::InitWatchdog."
#~ msgstr ""

#~ msgid "**WDT:: StopWatchdog**"
#~ msgstr ""

#~ msgid "void StopWatchdog(void);"
#~ msgstr ""

#~ msgid "**WDT:: RefreshWatchdog**"
#~ msgstr ""

#~ msgid "void RefreshWatchdog(void);"
#~ msgstr ""

#~ msgid "**WDT:: InitWatchdogIRQ**"
#~ msgstr ""

#~ msgid "void WDT::InitWatchdogIRQ(wdt_irq_handler handler, uint32_t id)"
#~ msgstr ""

#~ msgid "handler: the callback function for WDT timeout interrupt."
#~ msgstr ""

#~ msgid "id: the parameter for the callback function"
#~ msgstr ""

