# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-21 02:28+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:2
msgid "Class EpdIF"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:3
msgid "**EpdIf Class**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:5 EpdIF.rst:64
#: EpdIF.rst:90 EpdIF.rst:117 EpdIF.rst:138 EpdIF.rst:159 EpdIF.rst:182
#: EpdIF.rst:203 EpdIF.rst:224 EpdIF.rst:245 EpdIF.rst:267
msgid "**Description**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:7
msgid "A class used to control the electronic paper display internal functions."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:9 EpdIF.rst:67
#: EpdIF.rst:94 EpdIF.rst:120 EpdIF.rst:141 EpdIF.rst:163 EpdIF.rst:185
#: EpdIF.rst:206 EpdIF.rst:227 EpdIF.rst:250 EpdIF.rst:272
msgid "**Syntax**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:10
msgid "class EpdIf"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:12
msgid "**Members**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:15
msgid "**Public Constructors**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:17
msgid ""
"A public constructor should not be used as this class is intended to be a"
" singleton class. Access member functions using the object instance named"
" EpdIf."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:23
msgid "**Public Methods**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:25
msgid "EpdIf::EPD_Dis_Part"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:25
msgid "Put an image buffer to the frame memory, but not updating the display"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:29
msgid "EpdIf::EPD_SetFrame"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:29
msgid ""
"Put display data to the frame memory, usually used for setup text display"
" functions"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:33
msgid "EpdIf::EPD_SetRAMValue_BaseMap"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:33
msgid "To read image data stored in the RAM, but not display on the screen"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:36
msgid "EpdIf::EPD_SetFrameMemory"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:36
msgid "To read image data stored in the buffer, but not display on the screen"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:40
msgid "EpdIf::EPD_UpdateDisplay"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:40
msgid "Update the display"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:42
msgid "EpdIf::EPD_ClearScreen_White"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:42
msgid "Clear the frame memory with the White color, but not updating the display"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:46
msgid "EpdIf::EPD_ClearScreen_Black"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:46
msgid "Clear the frame memory with the Black color, but not updating the display"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:50
msgid "EpdIf::EPD_Busy"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:50
msgid "Wait until the Busy pin goes to low, which is the idle state"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:53
msgid "EpdIf::EPD_Reset"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:53
msgid ""
"Used for the Epaper module reset. Often used to awaken the module in deep"
" sleep"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:57
msgid "EpdIf::EPD_Sleep"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:57
msgid ""
"After this command is transmitted, the chip would enter the deep-sleep "
"mode to save power"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:62
msgid "**EpdIf:: EPD_Dis_Part**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:65
msgid "Put an image buffer to the frame memory, but not updating the display."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:70
msgid ""
"void EPD_Dis_Part(unsigned int x_start, unsigned int y_start, const "
"unsigned char\\* datas, unsigned int PART_COLUMN, unsigned int "
"PART_LINE);"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:72 EpdIF.rst:98
#: EpdIF.rst:123 EpdIF.rst:144 EpdIF.rst:166 EpdIF.rst:188 EpdIF.rst:209
#: EpdIF.rst:230 EpdIF.rst:253 EpdIF.rst:275
msgid "**Parameters**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:73
msgid "x_start: starting position of the x-axis"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:74
msgid "y_start: starting position of the y-axis"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:75
msgid "datas: data to be displayed on the e-paper module"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:76
msgid "PART_COLUMN: height of the display area"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:77
msgid "PART_LINE: width of the display area"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:79
#: EpdIF.rst:106 EpdIF.rst:127 EpdIF.rst:148 EpdIF.rst:169 EpdIF.rst:191
#: EpdIF.rst:212 EpdIF.rst:233 EpdIF.rst:256 EpdIF.rst:278
msgid "**Returns**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:80
#: EpdIF.rst:107 EpdIF.rst:128 EpdIF.rst:149 EpdIF.rst:170 EpdIF.rst:192
#: EpdIF.rst:213 EpdIF.rst:234 EpdIF.rst:257 EpdIF.rst:279
msgid "The function returns nothing."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:82
#: EpdIF.rst:109 EpdIF.rst:130 EpdIF.rst:151 EpdIF.rst:172 EpdIF.rst:194
#: EpdIF.rst:215 EpdIF.rst:236 EpdIF.rst:259 EpdIF.rst:281
msgid "**Example Code**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:83 EpdIF.rst:86
#: EpdIF.rst:110 EpdIF.rst:113 EpdIF.rst:131 EpdIF.rst:134 EpdIF.rst:152
#: EpdIF.rst:155 EpdIF.rst:173 EpdIF.rst:195 EpdIF.rst:216 EpdIF.rst:237
#: EpdIF.rst:260 EpdIF.rst:263 EpdIF.rst:282 EpdIF.rst:285
msgid "NA"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:85
#: EpdIF.rst:112 EpdIF.rst:133 EpdIF.rst:154 EpdIF.rst:175 EpdIF.rst:197
#: EpdIF.rst:218 EpdIF.rst:239 EpdIF.rst:262 EpdIF.rst:284
msgid "**Notes and Warnings**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:88
msgid "**EpdIf:: EPD_SetFrame**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:92
msgid ""
"Put display data to the frame memory, usually used for setup text display"
" functions."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:96
msgid ""
"void EPD_SetFrame(const unsigned char\\* image_buffer, int x, int y, int "
"image_width, int image_height);"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:100
msgid ""
"image_buffer: the buffer which stores the data to be displayed on the "
"e-paper module, usually used to display texts."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:101
msgid "x: starting position of the x-axis"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:102
msgid "y: starting position of the y-axis"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:103
msgid "image_width: width of the display area"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:104
msgid "image_height: height of the display area"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:115
msgid "**EpdIf:: EPD_SetRAMValue_BaseMap**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:118
msgid "To read image data stored in the RAM, but not display on the screen."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:121
msgid "void EPD_SetRAMValue_BaseMap(const unsigned char\\* datas);"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:125
msgid ""
"datas: contains the black and white information that forms the image "
"stored in RAM"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:136
msgid "**EpdIf:: EPD_SetFrameMemory**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:139
msgid "To read image data stored in the buffer but not display on the screen."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:142
msgid "void EPD_SetFrameMemory(const unsigned char\\* image_buffer);"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:146
msgid ""
"image_buffer: the buffer where stores the image data in hexadecimal "
"numbers"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:157
msgid "**EpdIf:: EPD_UpdateDisplay**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:161
msgid ""
"Update the ePaper display module. Always combined used with functions set"
" the frames."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:164
msgid "void EPD_UpdateDisplay(void);"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:167
#: EpdIF.rst:189 EpdIF.rst:210 EpdIF.rst:231 EpdIF.rst:254 EpdIF.rst:276
msgid "The function requires no input parameter."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:178
msgid ""
"There are 2 memory areas embedded in the e-paper display but once this "
"function is called, then the next action of SetFrameMemory or ClearScreen"
" will set the other memory area."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:180
msgid "**EpdIf:: EPD_ClearScreen_White**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:183
msgid "Clear the frame memory with the White color."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:186
msgid "void EpdIf::EPD_ClearScreen_White(void);"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:199
#: EpdIF.rst:220 EpdIF.rst:241
msgid ""
"If the users want to see the actual display on the e-paper screen, the "
"function EPD_UpdateDisplay() is required to be added behind this code."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:201
msgid "**EpdIf:: EPD_ClearScreen_Black**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:204
msgid "Clear the frame memory with the Black color."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:207
msgid "void EpdIf::EPD_ClearScreen_Black(void);"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:222
msgid "**EpdIf:: EPD_Busy**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:225
msgid "Wait until the busy_pin goes to low, which is the idle state."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:228
msgid "void EpdIf::EPD_Busy(void);"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:243
msgid "**EpdIf:: EPD_Reset**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:248
msgid ""
"This command will let the E-paper module reset, it is often used to "
"awaken the module in while it’s in the deep sleep mode, you will find "
"more details in the function EpdIf:: EPD_Sleep()."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:251
msgid "void EpdIf::EPD_Reset(void);"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:265
msgid "**EpdIf::EPD_Sleep**"
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:270
msgid ""
"After this command is transmitted, the chip would enter the deep-sleep "
"mode to save power. The deep sleep mode would return to standby by "
"hardware reset. You can use EPD:: Init() to awaken the E-paper module."
msgstr ""

#: ../../source/ambd_arduino/ambd/api_documents/Class EpdIF.rst:273
msgid "void EpdIf::EPD_Sleep(void);"
msgstr ""

