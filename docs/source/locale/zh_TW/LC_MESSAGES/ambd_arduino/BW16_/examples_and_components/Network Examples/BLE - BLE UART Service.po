# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-02 09:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:3 UART
msgid "BLE – BLE UART Service"
msgstr "BLE - UART 服務"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:8 UART
msgid ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Materials** "
":raw-html:`</p>`"
msgstr ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **材料準備** "
":raw-html:`</p>`"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:12 UART
msgid "AmebaD [AMB21 / AMB22 / AMB23 / BW16] x 1"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:13 UART
msgid "Android / iOS smartphone"
msgstr "Android / iOS 智能手機"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:15 UART
msgid ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Example** :raw-"
"html:`</p>`"
msgstr ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **範例説明** :raw-"
"html:`</p>`"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:19 UART
msgid "**Introduction**"
msgstr "**介紹**"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:27 UART
msgid ""
"With BLE, application data is sent and received using the GATT system. "
"GATT uses services, characteristics, and attributes to organise data and "
"control how the data can be read from and written to. The Bluetooth SIG "
"specification for BLE includes several predefined services for common "
"applications, but users are free to implement custom services and "
"characteristics to best fit their data structure and application needs"
msgstr ""
"BLE可以使用GATT系統發送和接收應用程序數據。 GATT使用服務，特徵和屬性來組織數據並控制如何讀取和寫入數據。"
"BLE的藍牙SIG規範包括針對常見應用的幾種定義服務，但用戶可以依據適合其數據結構和應用需求來自由實施自定義服務和特性。"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:31 UART
msgid ""
"In this example, the BLEService and BLECharacteristic classes are used to"
" implement a custom service for transmitting ASCII characters similar to "
"regular UART. This custom service is the Nordic UART Service, which is "
"supported in several smartphone apps."
msgstr ""
"在此範例中，BLEService和BLECharacteristic用於實現類似於常規UART傳輸ASCII字符的自定義服務。 "
"此自定義服務是在多個智能手機應用程序中受支持的Nordic UART服務。"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:33 UART
msgid "**Procedure**"
msgstr "**步驟**"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:36 UART
msgid ""
"Ensure that a compatible BLE UART app is installed on your smartphone, it"
" is available at:"
msgstr "確保您的智能手機上已安裝兼容的BLE UART應用程序，該應用程序可在以下位置獲得："

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:37 UART
msgid "– Google Play Store:"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:38 UART
msgid "https://play.google.com/store/apps/details?id=com.adafruit.bluefruit.le.connect"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:39 UART
msgid "https://play.google.com/store/apps/details?id=de.kai_morich.serial_bluetooth_terminal"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:41 UART
msgid "– Apple App Store:"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:42 UART
msgid "https://apps.apple.com/us/app/bluefruit-connect/id830125974"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:44 UART
msgid ""
"Open the example, ``“Files” -> “Examples” -> “AmebaBLE” -> "
"“BLEUartService”``."
msgstr "打開範例, “Files” -> “Examples” -> “AmebaBLE” -> “BLEUartService”."

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:47 UART
msgid "|1|"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:90 UART
msgid "1"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:50 UART
msgid ""
"Upload the code and press the reset button on Ameba once the upload is "
"finished."
msgstr "上傳代碼並在上傳完成後按Ameba上的重置按鈕。"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:56 UART
msgid ""
"Open the app on your smartphone, scan and connect to the Ameba board "
"shown as “AMEBA_BLE_DEV” and choose the UART function in the app. Note "
"that the BLE UART service on the Ameba board will only work with the UART"
" and Plotter functions in the Bluefruit Connect app, other functions (Pin"
" I/O, Image Transfer) require other BLE services that are not included in"
" this example."
msgstr ""
"在手機上打開應用程序，掃描並連接到顯示為“AMEBA_BLE_DEV”的Ameba開發板，然後在應用程序中選擇UART功能。"
"請注意，Ameba板上的BLE UART服務僅可與Bluefruit Connect應用程序中的UART和Plotter功能一起使用，"
"其他功能（Pin I/O，圖像傳輸）需要此範例中未包括的其他BLE服務。"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:58 UART
msgid "|2|"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:95 UART
msgid "2"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:60 UART
msgid "|3|"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:100 UART
msgid "3"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:63 UART
msgid ""
"In the UART terminal section of the app, enter a message and click send. "
"You should see the message appear in the Arduino serial monitor."
msgstr "在應用程序的UART終端部分中，輸入一條消息，然後單擊發送。 您應該看到消息出現在Arduino串行監視器中。"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:65 UART
msgid ""
"In the Arduino serial monitor, enter a message and click send. The "
"message will appear in the smartphone app."
msgstr "在Arduino串行監視器中，輸入一條消息，然後單擊發送。 該消息將出現在手機應用程序中。"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:67 UART
msgid "|4|"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:105 UART
msgid "4"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:69 UART
msgid "|5|"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:110 UART
msgid "5"
msgstr ""

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:71 UART
msgid ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Code "
"Reference** :raw-html:`</p>`"
msgstr ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **程式碼説明** "
":raw-html:`</p>`"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:77 UART
msgid ""
"The BLECharacteristic class is used to create two characteristics, one "
"for receive (Rx) and one for transmit (Tx), and added to a service "
"created with the BLEService class."
msgstr "BLECharacteristic用於創建兩個特徵，一個用於接收（Rx），一個用於發送（Tx），並添加到使用BLEService創建的服務中。"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:82 UART
msgid ""
"The required read/write/notify properties are set for each characteristic"
" using the ``set__Property()`` methods, and callback functions are "
"registered using the ``set__Callback()`` methods. The required buffer "
"size is also set for each characteristic so that it has enough memory to "
"store a complete string."
msgstr ""
"使用set__Property（）方法為每個特徵設置所需的讀/寫/通知屬性，並使用set__Callback（）方法註冊回調函數。"
"還為每個特徵設置了所需的緩衝區大小，以便它有足夠的內存來存儲完整的字符串。"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:85 UART
msgid ""
"When data is written to the receive characteristic, the registered "
"callback function is called, which prints out the received data as a "
"string to the serial monitor."
msgstr "將數據寫入接收特性時，將調用已註冊的回調函數，該函數將接收到的數據作為字符串輸出到串行監視器。"

#: - ../../source/ambd_arduino/examples/network/BLE BLE Service.rst:88 UART
msgid ""
"When data is received on the serial port, it is copied into the transmit "
"characteristic buffer, and the ``notify()`` method is used to inform the "
"connected device of the new data."
msgstr "在串行端口上接收到數據後，會將其複製到發送特性緩衝區中，然後notify（）方法用於將新數據通知給連接的設備。"

