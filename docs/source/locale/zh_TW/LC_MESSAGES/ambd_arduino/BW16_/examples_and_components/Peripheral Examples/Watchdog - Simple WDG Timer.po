# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-12 04:08+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:3
#: WDG
msgid "Watchdog - Simple WDG Timer"
msgstr "Watchdog - 簡單的 WDG 定時器"

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:8
#: WDG
msgid ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Preparation** "
":raw-html:`</p>`"
msgstr ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **準備** :raw-"
"html:`</p>`"

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:12
#: WDG
msgid "AmebaD [AMB21 / AMB22 / AMB23 / BW16] x 1"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:14
#: WDG
msgid ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Example** :raw-"
"html:`</p>`"
msgstr ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **範例説明** :raw-"
"html:`</p>`"

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:18
#: WDG
msgid ""
"In this example, we will use this simple watchdog timer example runs on "
"the Ameba RTL8722 module to illustrate how to use the watchdog API. "
"Before we get into the details of the example, let’s briefly go through "
"the definition of Watchdog as well as it’s working principles."
msgstr ""
"在此範例中，我們將使用在AmebaD AMB21/AMB22/AMB23 上運行的Watchdog計時器範例來說明如何使用Watchdog "
"API。在詳細介紹範例之前，我們先簡要介紹一下“Watchdog”的定義及其工作原理。"

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:23
#: WDG
msgid "**Watchdog**"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:25
#: WDG
msgid ""
"Watchdog Timer (WDT) is a hardware timer that is used to detect the "
"occurrence of a software fault, then automatically generates a system "
"reset or a watchdog interrupt on the expiry of a programmed period."
msgstr "Watchdog Timer（WDT）是一種硬件定時器，用於檢測軟件故障的發生，然後在編程週期到期時自動生成系統重置或Watchdog中斷。"

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:29
#: WDG
msgid ""
"In layman terms, imagine in the situation while your micro-controller is "
"confused in an infinity loop, or any case like the micro-controller hang "
"while performing some tasks. The normal troubleshooting method would be "
"to press the reset button and jump out of the infinity loop. However, is "
"it practically impossible to do press on the button all time, therefore, "
"the watchdog timer that embedded inside the micro-controller would help "
"with this situation."
msgstr ""
"一般來說，想像一下您的微控制器陷入無限循環的混亂情況，或者像微控制器在執行某些任務時卡住的任何情況。正常的故障排除方法是按下重置按鈕並跳出無限循環。"
" 但是，實際上不可能一直都按下按鈕，因此，嵌入在微控制器內的Watchdog定時器將有助於解決這種情況。"

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:37
#: WDG
msgid "|1|"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:75
#: WDG
msgid "1"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:39
#: WDG
msgid "**Feed the Dog**"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:43
#: WDG
msgid ""
"If you have a dog in your home. You need to feed that dog at a regular "
"interval. if you can’t feed one day, it will bite you! And likewise, this"
" is the working logic behind the watchdog timer."
msgstr "如果您的家中有一隻狗。 您需要定期餵食。 如果一天不能餵食，它會咬你！ 同樣，這是Watchdog定時器背後的工作邏輯。"

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:48
#: WDG
msgid ""
"In our example, we created 2 tasks that contain some loop that runs "
"repeatedly, one is called “Small_Task” and the other is called "
"“Big_Task”. We are enabling the watchdog timer is loaded with an initial "
"value (5 seconds) greater than the total delay in the “Small_Task”, but "
"shorter than the “Big_Task”."
msgstr ""
"在我們的範例中，我們創建了2個任務，其中包含一次又一次重複運行的循環，一個稱為Small_Task任務，另一個稱為Big_Task任務。 "
"我們使Watchdog定時器的初始值（5秒）大於Small_Task任務的總延遲，但比Big_Task任務的延遲短。"

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:53
#: WDG
msgid ""
"For the successful case, the watchdog is being refreshed/feed within 5 "
"seconds, however, for the failed case, the loop is under processing and "
"the watchdog is not being fresh after 5 seconds, which triggers the "
"watchdog (dog barks), an interrupt is generated to reset the processor. "
"Likewise, the watchdog timer protects the micro-controller from the "
"hanging case."
msgstr ""
"對於Small_Task任務的情況，Watchdog將在5秒內刷新/餵食，但是，對於Big_Task任務的情況，循環正在處理中，並且Watchdog在5秒後仍不刷新，這會觸發Watchdog"
" 以重置處理器。 同樣，Watchdog定時器可以保護微控制器免受卡住情況的影響。"

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:56
#: WDG
msgid ""
"Then we move to the coding part for this example, for this example, you "
"will only need the RTL8722CSM/RTL8722DM/RTL8722DM MINI Board itself."
msgstr "然後我們開始說明本範例的編碼部分，對於本範例，您僅需要AMB21/AMB22/AMB23開發板。"

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:61
#: WDG
#, fuzzy
msgid ""
"Firstly, make sure the correct Ameba development board is selected in "
"Arduino IDE: ``“Tools” → “Board” → “RTL8722CSM/RTL8722DM” (or “RTL8722DM "
"MINI”)``. Then open the “Watchdog Timer” example in ``“File” → “Examples”"
" → “AmebaWatchdog” → “Watchdog Timer”``:"
msgstr ""
"首先，確保在Arduino "
"IDE中選擇了正確的Ameba開發板：“Tools”->“Board”->“RTL8722CSM/RTL8722DM”(或 “RTL8722DM "
"MINI”)。然後在“File”->“Examples”->“AmebaWatchdog”->“Watchdog "
"Timer”中打開“Watchdog Timer”範例："

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:63
#: WDG
msgid "|2|"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:79
#: WDG
msgid "2"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:69
#: WDG
msgid ""
"Upon successfully upload the sample code, open the serial monitor, and "
"press the reset button. You will find that the “Small_Task” can refresh "
"the watchdog within the 5 seconds (initialized in the watchdog timer). "
"However, the “Big_Task” will not be able to refresh the watchdog within 5"
" seconds, which the watchdog “barks” then the microcontroller reset."
msgstr ""
"成功上傳範例代碼後，打開串行監視器，然後按重置按鈕。您會發現Small_Task任務可以在5秒內刷新Watchdog（初始化Watchdog定時器）。"
" 但是，Big_Task任務將無法在5秒內刷新Watchdog，這將導致微控制器重置。"

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:71
#: WDG
msgid "|3|"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:83
#: WDG
msgid "3"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:73
#: WDG
msgid "|4|"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/Watchdog Simple Timer.rst:87
#: WDG
msgid "4"
msgstr ""

