# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-12 04:08+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:3 to
msgid "I2C - Send Data to Arduino UNO"
msgstr "I2C - 向 Arduino UNO 發送資料"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:8 to
msgid ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Introduction of"
" I2C** :raw-html:`</p>`"
msgstr ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **I2C 介紹**:raw-"
"html:`</p>`"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:12 to
msgid ""
"There are two roles in the operation of I2C, one is “master”, the other "
"is “slave”. Only one master is allowed and can be connected to many "
"slaves. Each slave has its unique address, which is used in the "
"communication between master and the slave. I2C uses two pins, one is for"
" data transmission (SDA), the other is for the clock (SCL). Master uses "
"the SCL to inform slave of the upcoming data transmission, and the data "
"is transmitted through SDA. The I2C example was named “Wire” in the "
"Arduino example."
msgstr ""
"I2C裡有兩個角色，一個是Master，另一個是Slave。 "
"Master的角色只能有一個，而Slave可以有很多個。每個Slave都有自己的位址(address)編號，所以當Master要與特定的Slave溝通時，就會使用這個位址。I2C使用了兩根接腳，一根是資料線"
" (SDA)，另一根是時脈線 (SCL)。 Master藉由控制SCL讓Slave知道有東西要傳，而資料就可以在SDA上面傳送。 "
"I2C在當初Arduino的範例裡，為了親易近人而稱呼I2C為Wire。"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:21 to
msgid ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Materials** "
":raw-html:`</p>`"
msgstr ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **材料準備** :raw-"
"html:`</p>`"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:25 to
msgid "AmebaD [AMB21 / AMB22 / AMB23 / BW16] x 1"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:26 to
msgid "Arduino UNO x 1"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:28 to
msgid ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Example** :raw-"
"html:`</p>`"
msgstr ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **範例説明** :raw-"
"html:`</p>`"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:32 to
#, fuzzy
msgid ""
"In this example, we use Ameba as the I2C master writer, and use Arduino "
"as the I2C slave receiver. When the I2C slave receives string sent from "
"I2C master, it prints the received string."
msgstr "這個範例裡，我們將Ameba當作I2C Master Writer, 而Arduino為I2C Slave Receiver。"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:37 to
#, fuzzy
msgid "**Setting up Arduino Uno to be I2C Slave**"
msgstr "準備 Arduino Uno 為 I2C Slave"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:39 to
msgid ""
"First, select Arduino in the Arduino IDE in ``“Tools” → “Board” → "
"“Arduino Uno”`` Open the “Slave Receiver” example in ``“Examples” → "
"“Wire” → “slave_receiver”``:"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:47 to
#, fuzzy
msgid ""
"Then click ``“Sketch” → “Upload”`` to compile and upload the example to "
"Arduino Uno."
msgstr "然後點選 “Sketch” -> “Upload” 將程式編譯並上傳到 Arduino Uno。"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:49 to
#, fuzzy
msgid "**Setting up Ameba to be I2C Master**"
msgstr "準備Ameba 为 I2C Master"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:51 to
msgid ""
"Next, open another window of Arduino IDE, make sure to choose your Ameba "
"development board in the IDE: ``“Tools” → “Board”`` Then open the “Master"
" Writer” example in ``“File” → “Examples” → “AmebaWire” → "
"“MasterWriter”``"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:62 to
msgid "Wiring"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:64 to
#, fuzzy
msgid ""
"The Arduino example uses A4 as the I2C SDA and A5 as the I2C SCL. Another"
" important thing is that the GND pins of Arduino and Ameba should be "
"connected to each other."
msgstr "另外很重要的是，兩塊板子的GND要互接。"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:68 to
msgid "**AMB21/ AMB22** Wiring Diagram:"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:76 to
msgid "**AMB23** Wiring Diagram:"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:84 to
msgid "**BW16** Wiring Diagram:"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:91 to
msgid "**BW16-TypeC** Wiring Diagram:"
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:98 to
msgid ""
"Open the Arduino IDE of the Arduino Uno and open the serial monitor "
"(“Tools” → “Serial Monitor”). In the Serial Monitor, you can see the "
"messages printed from Arduino Uno. Next, press the reset button on "
"Arduino Uno. Now the Arduino Uno is waiting for the connection from I2C "
"Master. We press the reset button on Ameba to start to send messages. "
"Then observe the serial monitor, you can see the messages show up every "
"half second."
msgstr ""

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:113 to
msgid ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Code "
"Reference** :raw-html:`</p>`"
msgstr ""
":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **程式碼説明** :raw-"
"html:`</p>`"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:117 to
#, fuzzy
msgid ""
"You can find detailed information of this example in the documentation of"
" Arduino: https://www.arduino.cc/en/Tutorial/MasterWriter"
msgstr "Ameba使用同樣的Arduino範例，Arduino官方網站的範例說明可以參考這裡:"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:121 to
#, fuzzy
msgid ""
"First use Wire.begin()/Wire.begin(address) to join the I2C bus as a "
"master or slave, in the Master case the address is not required. "
"https://www.arduino.cc/en/Reference/WireBegin"
msgstr "首先Wire.begin()會先設定address, 如果是Master可以不用設定address:"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:125 to
#, fuzzy
msgid ""
"Next, the Master uses Wire.beginTransmission(address) to begin a "
"transmission to the I2C slave with the given address: "
"https://www.arduino.cc/en/Reference/WireBeginTransmission"
msgstr "接著Master使用Wire.beginTransmission()來設定要傳到哪一個Slave:"

#: - ../../source/ambd_arduino/examples/peripheral/I2C Arduino Data Send
#: UNO.rst:129 to
#, fuzzy
msgid ""
"Uses Wire.write() to send data, and finally use Wire.endTransmission() to"
" end a transmission to a Slave and transmits the bytes that were queued: "
"https://www.arduino.cc/en/Reference/WireEndTransmission"
msgstr "使用Wire.write()送資料, 並且最後使用Wire.endTransmission()將所有資料傳出去:"

#~ msgid ""
#~ "When the I2C slave receives string "
#~ "sent from I2C master, it prints "
#~ "the received string."
#~ msgstr "I2C Master會傳字串到I2C Slave，並且I2C Slave將字串印出來。"

#~ msgid ""
#~ "First, select Arduino in the Arduino "
#~ "IDE in ``“Tools” -> “Board” -> "
#~ "“Arduino Uno”``"
#~ msgstr ""
#~ "首先我們先準備Arduino，先將Arduino IDE選成Arduino, “Tools” ->"
#~ " “Board” -> “Arduino/Genuino Uno”"

#~ msgid ""
#~ "Open the “Slave Receiver” example in "
#~ "``“Examples” -> “Wire” -> “slave_receiver”``:"
#~ msgstr "接著打開 Slave Receiver 的範例，”Examples” -> “Wire” -> “slave_receiver”:"

#~ msgid "|1|"
#~ msgstr ""

#~ msgid "1"
#~ msgstr ""

#~ msgid ""
#~ "Next, open another window of Arduino "
#~ "IDE, make sure to choose your "
#~ "Ameba development board in the IDE: "
#~ "``“Tools” -> “Board”``"
#~ msgstr "我們額外再開一個Arduino IDE，確定板子是 Ameba, “Tools” -> “Board”"

#~ msgid ""
#~ "Then open the “Master Writer” example"
#~ " in ``“File” -> “Examples” -> "
#~ "“AmebaWire” -> “MasterWriter”``"
#~ msgstr ""
#~ "然後打開 Master Writer 的範例, “File” -> "
#~ "“Examples” -> “AmebaWire” -> “MasterWriter”"

#~ msgid "|2|"
#~ msgstr ""

#~ msgid "2"
#~ msgstr ""

#~ msgid "The Arduino example uses A4 as the I2C SDA and A5 as the I2C SCL."
#~ msgstr "Arduino的範例裡，使用A4當作I2C SDA, A5為I2C SCL。這些接腳與Ameba一樣。"

#~ msgid "|3|"
#~ msgstr ""

#~ msgid "3"
#~ msgstr ""

#~ msgid "|3-1|"
#~ msgstr ""

#~ msgid "3-1"
#~ msgstr ""

#~ msgid "|3-3|"
#~ msgstr ""

#~ msgid "3-3"
#~ msgstr ""

#~ msgid ""
#~ "Open the Arduino IDE of the "
#~ "Arduino Uno and open the serial "
#~ "monitor (“Tools” -> “Serial Monitor”)."
#~ msgstr ""
#~ "打開包含Arduino Uno的Arduino IDE，開啟Serial Monitor, "
#~ "“Tools” -> “Serial Monitor”, 會出現Serial "
#~ "Monitor的視窗。"

#~ msgid ""
#~ "In the Serial Monitor, you can see"
#~ " the messages printed from Arduino "
#~ "Uno."
#~ msgstr "這個視窗可以讓你看到Arduino Uno印出來的訊息。"

#~ msgid ""
#~ "Next, press the reset button on "
#~ "Arduino Uno. Now the Arduino Uno "
#~ "is waiting for the connection from "
#~ "I2C Master."
#~ msgstr "接著按下Arduino Uno的Reset按鈕，讓Arduino Uno等待I2C master連接。"

#~ msgid ""
#~ "We press the reset button on Ameba"
#~ " to start to send messages. Then "
#~ "observe the serial monitor, you can "
#~ "see the messages show up every "
#~ "half second."
#~ msgstr "再按下Ameba的Reset按鈕，讓Ameba開始傳訊息。這時候會看到Serial Monitor每隔0.5秒出現新的訊息，這樣就代表成功了。"

#~ msgid "|4|"
#~ msgstr ""

#~ msgid "4"
#~ msgstr ""

#~ msgid "https://www.arduino.cc/en/Tutorial/MasterWriter"
#~ msgstr ""

#~ msgid "https://www.arduino.cc/en/Reference/WireBegin"
#~ msgstr ""

#~ msgid "https://www.arduino.cc/en/Reference/WireBeginTransmission"
#~ msgstr ""

#~ msgid "https://www.arduino.cc/en/Reference/WireEndTransmission"
#~ msgstr ""

