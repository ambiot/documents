# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-02 06:46+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:3
msgid "Class BLEAdvert"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:5 BLEAdvert.rst:53
#: BLEAdvert.rst:85 BLEAdvert.rst:120 BLEAdvert.rst:153 BLEAdvert.rst:199
#: BLEAdvert.rst:234 BLEAdvert.rst:269 BLEAdvert.rst:309
msgid "**Description**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:7
msgid "A class used for managing BLE advertising settings."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:9 BLEAdvert.rst:58
#: BLEAdvert.rst:89 BLEAdvert.rst:124 BLEAdvert.rst:157 BLEAdvert.rst:203
#: BLEAdvert.rst:238 BLEAdvert.rst:273 BLEAdvert.rst:313
msgid "**Syntax**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:15
msgid "**Members**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:18
msgid "**Public Constructors**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:20
msgid ""
"No public constructor is available as this class is intended to be a "
"singleton class. You can get a pointer to this class using "
"BLEDevice::configAdvert()."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:26
msgid "**Public Methods**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:28
msgid "BLEAdvert::updateAdvertParams"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:28
msgid "Update the current BLE advertisement settings to the lower Bluetooth stack"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:32
msgid "BLEAdvert::startAdv"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:32
msgid "Start BLE advertising"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:34
msgid "BLEAdvert::stopAdv"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:34
msgid "Stop BLE advertising"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:36
msgid "BLEAdvert::setAdvType"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:36
msgid "Set the BLE advertising type"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:38
msgid "BLEAdvert::setMinInterval"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:38
msgid "Set the BLE advertising minimum interval"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:41
msgid "BLEAdvert::setMaxInterval"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:41
msgid "Set the BLE advertising maximum interval"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:44
msgid "BLEAdvert::setAdvData"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:44
msgid "Set BLE advertising data"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:46
msgid "BLEAdvert::setScanRspData"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:46
msgid "Set BLE scan response data"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:55
msgid "Update the lower Bluetooth stack with the current advertising settings."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:64 BLEAdvert.rst:95
#: BLEAdvert.rst:130 BLEAdvert.rst:163 BLEAdvert.rst:209 BLEAdvert.rst:244
#: BLEAdvert.rst:283 BLEAdvert.rst:324
msgid "**Parameters**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:66 BLEAdvert.rst:97
#: BLEAdvert.rst:132
msgid "The function requires no input parameter."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:68 BLEAdvert.rst:99
#: BLEAdvert.rst:134 BLEAdvert.rst:181 BLEAdvert.rst:215 BLEAdvert.rst:250
#: BLEAdvert.rst:293 BLEAdvert.rst:334
msgid "**Returns**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:70 BLEAdvert.rst:101
#: BLEAdvert.rst:136 BLEAdvert.rst:183 BLEAdvert.rst:217 BLEAdvert.rst:252
#: BLEAdvert.rst:295 BLEAdvert.rst:336
msgid "The function returns nothing."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:72 BLEAdvert.rst:103
#: BLEAdvert.rst:138 BLEAdvert.rst:185 BLEAdvert.rst:219 BLEAdvert.rst:254
#: BLEAdvert.rst:297 BLEAdvert.rst:338
msgid "**Example Code**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:74 BLEAdvert.rst:105
#: BLEAdvert.rst:140 BLEAdvert.rst:221 BLEAdvert.rst:256 BLEAdvert.rst:299
#: BLEAdvert.rst:340
msgid "NA"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:76 BLEAdvert.rst:107
#: BLEAdvert.rst:142 BLEAdvert.rst:189 BLEAdvert.rst:223 BLEAdvert.rst:258
#: BLEAdvert.rst:301 BLEAdvert.rst:342
msgid "**Notes and Warnings**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:78
msgid ""
"Please use the other class member functions to set the BLE advertising "
"parameters first before using this function."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:87
msgid "Start BLE advertising."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:109
msgid ""
"This function is provided for flexibility in controlling and updating BLE"
" advertising parameters. You should avoid using this function to directly"
" start the BLE advertising process without first registering the "
"necessary callback and handler functions. Call "
"BLEDevice::beginPeripheral() to register the necessary functions and "
"start advertising for the first time."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:122
msgid "Stop BLE advertising."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:144
msgid ""
"This function is provided for flexibility in controlling and updating BLE"
" advertising parameters. You should avoid using this function to directly"
" stop the BLE advertising process. Call BLEDevice::end() to stop "
"advertising and free up used resources."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:151
msgid "**BLEAdvert::setAdvType**"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:155
msgid "Set the BLE advertising type."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:165
msgid "advType: the desired advertisement type. Valid values:"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:168
msgid "– 0 = GAP_ADTYPE_ADV_IND : connectable undirected advertisement"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:170
msgid "– 1 = GAP_ADTYPE_ADV_HDC_DIRECT_IND : connectable high duty cycle directed"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:173
msgid "– 2 = GAP_ADTYPE_ADV_SCAN_IND : scannable undirected advertisement"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:175
msgid ""
"– 3 = GAP_ADTYPE_ADV_NONCONN_IND : Non-connectable undirected "
"advertisement"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:178
msgid ""
"– 4 = GAP_ADTYPE_ADV_LDC_DIRECT_IND : connectable low duty cycle directed"
" advertisement"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:187
msgid "Example: BLEBatteryService"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:191
msgid ""
"Call this function with the GAP_ADTYPE_ADV_IND argument if connection "
"requests should be allowed, and GAP_ADTYPE_ADV_NONCONN_IND if all "
"connection requests should be rejected."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:201
msgid "Set the minimum BLE advertising interval."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:211
msgid ""
"``minInt_ms`` : the desired advertisement minimum interval, expressed in "
"milliseconds. The valid values for the interval are from 20ms to 10240ms."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:225
#: BLEAdvert.rst:260
msgid ""
"BLE advertisements will repeat with an interval between the set minimum "
"and maximum intervals. Set a shorter interval for the BLE device to be "
"discovered rapidly and set a longer interval to conserve power."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:236
msgid "Set the maximum BLE advertising interval."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:246
msgid ""
"``minInt_ms``: the desired advertisement maximum interval, expressed in "
"milliseconds. The valid values for the interval are from 20ms to 10240ms."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:271
msgid "Set BLE advertising data."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:285
msgid "``adData``: scan response data formatted in a BLEAdvertData class object"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:287
msgid ""
"``pData``: pointer to a byte array containing the required scan response "
"data."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:290
msgid ""
"``size``: number of bytes the scan response data contains, maximum of 31 "
"bytes."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:303
#: BLEAdvert.rst:344
msgid "N/A"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:311
msgid "Set BLE scan response data."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:326
msgid "``adData`` : scan response data formatted in a BLEAdvertData class object"
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:328
msgid ""
"``pData`` : pointer to a byte array containing the required scan response"
" data."
msgstr ""

#: ../../source/ambd_arduino/api_class/Class BLEAdvert.rst:331
msgid ""
"``size`` : number of bytes the scan response data contains, maximum of 31"
" bytes."
msgstr ""

#~ msgid "**BLEAdvert Class**"
#~ msgstr ""

#~ msgid "class BLEAdvert"
#~ msgstr ""

#~ msgid "**BLEAdvert::updateAdvertParams**"
#~ msgstr ""

#~ msgid "void updateAdvertParams(void);"
#~ msgstr ""

#~ msgid "**BLEAdvert::startAdv**"
#~ msgstr ""

#~ msgid "void startAdv(void);"
#~ msgstr ""

#~ msgid "**BLEAdvert::stopAdv**"
#~ msgstr ""

#~ msgid "void stopAdv(void);"
#~ msgstr ""

#~ msgid "void setAdvType(uint8_t advType);"
#~ msgstr ""

#~ msgid "**BLEAdvert::setMinInterval**"
#~ msgstr ""

#~ msgid "void setMinInterval(uint16_t minInt_ms);"
#~ msgstr ""

#~ msgid ""
#~ "minInt_ms: the desired advertisement minimum"
#~ " interval, expressed in milliseconds. The"
#~ " valid values for the interval are"
#~ " from 20ms to 10240ms."
#~ msgstr ""

#~ msgid "**BLEAdvert::setMaxInterval**"
#~ msgstr ""

#~ msgid "void setMaxInterval(uint16_t minInt_ms);"
#~ msgstr ""

#~ msgid ""
#~ "minInt_ms: the desired advertisement maximum"
#~ " interval, expressed in milliseconds. The"
#~ " valid values for the interval are"
#~ " from 20ms to 10240ms."
#~ msgstr ""

#~ msgid "**BLEAdvert::setAdvData**"
#~ msgstr ""

#~ msgid "void setAdvData(BLEAdvertData adData);"
#~ msgstr ""

#~ msgid "void setAdvData(uint8_t\\* pData, uint8_t size);"
#~ msgstr ""

#~ msgid "adData: scan response data formatted in a BLEAdvertData class object"
#~ msgstr ""

#~ msgid ""
#~ "pData: pointer to a byte array "
#~ "containing the required scan response "
#~ "data."
#~ msgstr ""

#~ msgid ""
#~ "size: number of bytes the scan "
#~ "response data contains, maximum of 31"
#~ " bytes."
#~ msgstr ""

#~ msgid "**BLEAdvert::setScanRspData**"
#~ msgstr ""

#~ msgid "void setScanRspData(BLEAdvertData adData);"
#~ msgstr ""

#~ msgid "void setScanRspData(uint8_t\\* pData, uint8_t size);"
#~ msgstr ""

