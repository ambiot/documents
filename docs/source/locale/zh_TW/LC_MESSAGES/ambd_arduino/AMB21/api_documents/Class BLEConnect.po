# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-10 10:15+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:2
msgid "Class BLEConnect"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:7
#: BLEConnect.rst:64 BLEConnect.rst:124 BLEConnect.rst:155 BLEConnect.rst:186
#: BLEConnect.rst:216 BLEConnect.rst:250 BLEConnect.rst:281 BLEConnect.rst:312
#: BLEConnect.rst:343 BLEConnect.rst:376 BLEConnect.rst:412
msgid "**Description**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:9
msgid "A class used for managing BLE connection settings."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:11
#: BLEConnect.rst:68 BLEConnect.rst:128 BLEConnect.rst:159 BLEConnect.rst:190
#: BLEConnect.rst:220 BLEConnect.rst:254 BLEConnect.rst:285 BLEConnect.rst:316
#: BLEConnect.rst:347 BLEConnect.rst:380 BLEConnect.rst:416
msgid "**Syntax**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:17
msgid "**Members**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:20
msgid "**Public Constructors**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:22
msgid ""
"No public constructor is available as this class is intended to be a "
"singleton class. You can get a pointer to this class using "
"BLEDevice::configConnection."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:28
msgid "**Public Methods**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:30
msgid "BLEConnect::connect"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:30
msgid "Connect to a target BLE device"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:32
msgid "BLEConnect::disconnect"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:32
msgid "Disconnect from a target BLE device"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:34
msgid "BLEConnect::setScanInterval"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:34
msgid "Set the BLE scanning interval when connecting"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:37
msgid "BLEConnect::setScanWindow"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:37
msgid "Set the BLE scanning window when connecting"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:40
msgid "BLEConnect::setConnInterval"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:40
msgid "Set the BLE connection interval duration"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:43
msgid "BLEConnect::setConnLatency"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:43
msgid "Set the BLE connection slave latency"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:45
msgid "BLEConnect::setConnTimeout"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:45
msgid "Set the BLE connection timeout value"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:47
msgid "BLEConnect::updateConnParams"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:47
msgid "Send new BLE connection parameters to a connected device"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:50
msgid "BLEConnect::getConnInfo"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:50
msgid "Get connection information"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:52
msgid "BLEConnect::getConnAddr"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:52
msgid "Get the Bluetooth address for a certain connection"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:55
msgid "BLEConnect::getConnId"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:55
msgid "Get the connection ID for a certain device"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:66
msgid "Connect to a target BLE device."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:86
#: BLEConnect.rst:134 BLEConnect.rst:165 BLEConnect.rst:196 BLEConnect.rst:226
#: BLEConnect.rst:260 BLEConnect.rst:291 BLEConnect.rst:322 BLEConnect.rst:353
#: BLEConnect.rst:387 BLEConnect.rst:430
msgid "**Parameters**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:88
msgid ""
"``btAddr`` : target device Bluetooth address expressed as a character "
"string."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:90
msgid ""
"``uint8_t (&btAddr)`` : target device Bluetooth address contained in a 6 "
"byte array."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:92
msgid ""
"``destAddr`` : target device Bluetooth address contained in BLEAddr class"
" object."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:94
#: BLEConnect.rst:436
msgid "``targetDevice`` : advertising data packet scanned from target device."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:96
msgid "``destAddrType`` : Bluetooth address type of target device."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:98
msgid "Valid values:"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:100
#: BLEConnect.rst:441
msgid "– GAP_REMOTE_ADDR_LE_PUBLIC"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:102
#: BLEConnect.rst:443
msgid "– GAP_REMOTE_ADDR_LE_RANDOM"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:104
msgid ""
"``scan timeout`` : duration in milliseconds for which to look for target "
"device before giving up."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:106
#: BLEConnect.rst:138 BLEConnect.rst:169 BLEConnect.rst:200 BLEConnect.rst:232
#: BLEConnect.rst:264 BLEConnect.rst:295 BLEConnect.rst:326 BLEConnect.rst:359
#: BLEConnect.rst:395 BLEConnect.rst:445
msgid "**Returns**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:108
msgid "True if connection successful, false if connection failed."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:110
#: BLEConnect.rst:142 BLEConnect.rst:173 BLEConnect.rst:204 BLEConnect.rst:236
#: BLEConnect.rst:268 BLEConnect.rst:299 BLEConnect.rst:330 BLEConnect.rst:363
#: BLEConnect.rst:399 BLEConnect.rst:449
msgid "**Example Code**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:112
#: BLEConnect.rst:451
msgid "Example: BLEBatteryClient"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:114
#: BLEConnect.rst:146 BLEConnect.rst:177 BLEConnect.rst:208 BLEConnect.rst:240
#: BLEConnect.rst:272 BLEConnect.rst:303 BLEConnect.rst:334 BLEConnect.rst:367
#: BLEConnect.rst:403 BLEConnect.rst:453
msgid "**Notes and Warnings**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:116
#: BLEConnect.rst:144 BLEConnect.rst:148 BLEConnect.rst:175 BLEConnect.rst:179
#: BLEConnect.rst:206 BLEConnect.rst:210 BLEConnect.rst:238 BLEConnect.rst:270
#: BLEConnect.rst:301 BLEConnect.rst:332 BLEConnect.rst:365 BLEConnect.rst:369
#: BLEConnect.rst:401 BLEConnect.rst:405 BLEConnect.rst:455
msgid "NA"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:126
msgid "Disconnect from a target BLE device."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:136
msgid "``connId`` : connection ID for target device."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:140
msgid "True if operation successful, false if otherwise."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:157
msgid ""
"Set the BLE scan interval when searching for a target device to connect "
"to."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:167
msgid "``scanInt_ms`` : scan interval in milliseconds. Value range of 3 to 10240."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:171
#: BLEConnect.rst:202 BLEConnect.rst:234 BLEConnect.rst:266 BLEConnect.rst:297
#: BLEConnect.rst:328
msgid "The function returns nothing."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:188
msgid "Set the BLE scan window when searching for a target device to connect to."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:198
msgid ""
"``scanWindow_ms`` : scan window in milliseconds. Value range of 3 to "
"10240."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:218
msgid "Set the BLE connection interval value."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:228
msgid ""
"``min_ms`` : minimum acceptable connection interval in milliseconds. "
"Value range of 8 to 4000."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:230
msgid ""
"``max_ms`` : maximum acceptable connection interval in milliseconds. "
"Value range of 8 to 4000."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:242
msgid ""
"The BLE connection interval defines the period between successive "
"connection events between a connected central and peripheral device. Even"
" if there is no data to exchange, a connection event is required to "
"maintain the connection. max_ms should be larger than or equal to min_ms."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:252
msgid "Set the BLE connection slave latency value."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:262
msgid "``latency`` : Connection slave latency value. Value range of 0 to 499."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:274
msgid ""
"The BLE connection slave latency defines the number of successive "
"connection events a connected peripheral device can ignore without being "
"considered as disconnected by the central device."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:283
msgid "Set the BLE connection timeout value."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:293
msgid ""
"``timeout_ms`` : connection timeout in milliseconds. Value range of 100 "
"to 32000."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:305
msgid ""
"The BLE connection timeout defines the duration after a failed connection"
" events before a peripheral or central device considers the connection "
"broken."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:314
msgid "Update a connected device with new connection parameters."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:324
msgid ""
"``conn_id``: connection ID of target device to update connection "
"parameters."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:336
msgid ""
"Update a connected device with previously set connection interval, slave "
"latency and timeout values. The connected device may reject the new "
"values if it is unable to conform to them."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:345
msgid "Get connection information."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:355
msgid "``connId``: connection ID to get connection information from."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:357
msgid ""
"``pConnInfo`` : pointer to T_GAP_CONN_INFO structure to store obtained "
"connection information."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:361
#: BLEConnect.rst:397
msgid "True if operation success, false if operation failed."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:378
msgid "Get the Bluetooth address for a certain connection."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:389
msgid "``connId``: connection ID to get address information for"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:391
msgid "``addr``: pointer to 6 byte array to store retrieved Bluetooth address"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:393
msgid ""
"``addrType``: pointer to uint8_t variable to store retrieved Bluetooth "
"address type"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:414
msgid "Get the connection ID for a certain device."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:432
msgid ""
"``char\\* btAddr``: target device Bluetooth address expressed as a "
"character string."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:434
msgid ""
"``uint8_t\\* btAddr`` : pointer to a 6 byte array containing target "
"device Bluetooth address."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:438
msgid "``addrType`` : Bluetooth address type of target device. Valid values:"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEConnect.rst:447
msgid ""
"The function returns the requested connection ID. Returns -1 if failed to"
" obtain connection ID."
msgstr ""

#~ msgid "**BLEConnect Class**"
#~ msgstr ""

#~ msgid "class BLEConnect"
#~ msgstr ""

#~ msgid "**BLEConnect::connect**"
#~ msgstr ""

#~ msgid ""
#~ "bool connect(char\\* btAddr, T_GAP_REMOTE_ADDR_TYPE"
#~ " destAddrType, uint16_t scanTimeout);"
#~ msgstr ""

#~ msgid ""
#~ "bool connect(uint8_t (&btAddr)[6], "
#~ "T_GAP_REMOTE_ADDR_TYPE destAddrType, uint16_t "
#~ "scanTimeout);"
#~ msgstr ""

#~ msgid "bool connect(BLEAdvertData targetDevice, uint16_t scanTimeout);"
#~ msgstr ""

#~ msgid ""
#~ "bool connect(BLEAddr destAddr, "
#~ "T_GAP_REMOTE_ADDR_TYPE destAddrType, uint16_t "
#~ "scanTimeout);"
#~ msgstr ""

#~ msgid ""
#~ "char\\* btAddr: target device Bluetooth "
#~ "address expressed as a character string."
#~ msgstr ""

#~ msgid ""
#~ "uint8_t (&btAddr): target device Bluetooth "
#~ "address contained in a 6 byte "
#~ "array."
#~ msgstr ""

#~ msgid ""
#~ "destAddr: target device Bluetooth address "
#~ "contained in BLEAddr class object."
#~ msgstr ""

#~ msgid "targetDevice: advertising data packet scanned from target device."
#~ msgstr ""

#~ msgid "destAddrType: Bluetooth address type of target device. Valid values:"
#~ msgstr ""

#~ msgid ""
#~ "scan timeout: duration in milliseconds "
#~ "for which to look for target "
#~ "device before giving up."
#~ msgstr ""

#~ msgid "**BLEConnect::disconnect**"
#~ msgstr ""

#~ msgid "bool disconnect(uint8_t connId);"
#~ msgstr ""

#~ msgid "connId: connection ID for target device."
#~ msgstr ""

#~ msgid "**BLEConnect::setScanInterval**"
#~ msgstr ""

#~ msgid "void setScanInterval(uint16_t scanInt_ms);"
#~ msgstr ""

#~ msgid "scanInt_ms: scan interval in milliseconds. Value range of 3 to 10240."
#~ msgstr ""

#~ msgid "**BLEConnect::setScanWindow**"
#~ msgstr ""

#~ msgid "void setScanWindow(uint16_t scanWindow_ms);"
#~ msgstr ""

#~ msgid "scanWindow_ms: scan window in milliseconds. Value range of 3 to 10240."
#~ msgstr ""

#~ msgid "**BLEConnect::setConnInterval**"
#~ msgstr ""

#~ msgid "void setConnInterval(uint16_t min_ms, uint16_t max_ms);"
#~ msgstr ""

#~ msgid ""
#~ "min_ms: minimum acceptable connection interval"
#~ " in milliseconds. Value range of 8"
#~ " to 4000."
#~ msgstr ""

#~ msgid ""
#~ "max_ms: maximum acceptable connection interval"
#~ " in milliseconds. Value range of 8"
#~ " to 4000."
#~ msgstr ""

#~ msgid "**BLEConnect::setConnLatency**"
#~ msgstr ""

#~ msgid "void setConnLatency(uint16_t latency);"
#~ msgstr ""

#~ msgid "latency: Connection slave latency value. Value range of 0 to 499."
#~ msgstr ""

#~ msgid "**BLEConnect::setConnTimeout**"
#~ msgstr ""

#~ msgid "void setConnTimeout(uint16_t timeout_ms);"
#~ msgstr ""

#~ msgid ""
#~ "timeout_ms: connection timeout in "
#~ "milliseconds. Value range of 100 to "
#~ "32000."
#~ msgstr ""

#~ msgid "**BLEConnect::updateConnParams**"
#~ msgstr ""

#~ msgid "void updateConnParams(uint8_t conn_id);"
#~ msgstr ""

#~ msgid ""
#~ "conn_id: connection ID of target device"
#~ " to update connection parameters."
#~ msgstr ""

#~ msgid "**BLEConnect::getConnInfo**"
#~ msgstr ""

#~ msgid "bool getConnInfo(uint8_t connId, T_GAP_CONN_INFO \\*pConnInfo);"
#~ msgstr ""

#~ msgid "connId: connection ID to get connection information from."
#~ msgstr ""

#~ msgid ""
#~ "pConnInfo: pointer to T_GAP_CONN_INFO "
#~ "structure to store obtained connection "
#~ "information."
#~ msgstr ""

#~ msgid "**BLEConnect::getConnAddr**"
#~ msgstr ""

#~ msgid "bool getConnAddr(uint8_t connId, uint8_t\\* addr, uint8_t\\* addrType);"
#~ msgstr ""

#~ msgid "connId: connection ID to get address information for"
#~ msgstr ""

#~ msgid "addr: pointer to 6 byte array to store retrieved Bluetooth address"
#~ msgstr ""

#~ msgid ""
#~ "addrType: pointer to uint8_t variable to"
#~ " store retrieved Bluetooth address type"
#~ msgstr ""

#~ msgid "**BLEConnect::getConnId**"
#~ msgstr ""

#~ msgid "int8_t getConnId(char\\* btAddr, uint8_t addrType);"
#~ msgstr ""

#~ msgid "int8_t getConnId(uint8_t\\* btAddr, uint8_t addrType);"
#~ msgstr ""

#~ msgid "int8_t getConnId(BLEAdvertData targetDevice);"
#~ msgstr ""

#~ msgid ""
#~ "uint8_t\\* btAddr: pointer to a 6 "
#~ "byte array containing target device "
#~ "Bluetooth address."
#~ msgstr ""

#~ msgid "addrType: Bluetooth address type of target device. Valid values:"
#~ msgstr ""

