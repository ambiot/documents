# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-18 08:01+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:3
msgid "Class AmebaILI9341"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:7
#: AmebaILI9341.rst:74 AmebaILI9341.rst:368 AmebaILI9341.rst:402
#: AmebaILI9341.rst:433 AmebaILI9341.rst:463 AmebaILI9341.rst:493
#: AmebaILI9341.rst:529 AmebaILI9341.rst:559 AmebaILI9341.rst:592
#: AmebaILI9341.rst:629 AmebaILI9341.rst:661 AmebaILI9341.rst:699
#: AmebaILI9341.rst:735 AmebaILI9341.rst:771 AmebaILI9341.rst:806
#: AmebaILI9341.rst:836 AmebaILI9341.rst:866 AmebaILI9341.rst:896
#: AmebaILI9341.rst:930 AmebaILI9341.rst:963 AmebaILI9341.rst:996
#: AmebaILI9341.rst:1029
msgid "**Description**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:9
msgid "Defines a class to use ILI9341 TFT SPI display for Ameba."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:11
#: AmebaILI9341.rst:78 AmebaILI9341.rst:372 AmebaILI9341.rst:406
#: AmebaILI9341.rst:437 AmebaILI9341.rst:467 AmebaILI9341.rst:498
#: AmebaILI9341.rst:533 AmebaILI9341.rst:563 AmebaILI9341.rst:596
#: AmebaILI9341.rst:633 AmebaILI9341.rst:665 AmebaILI9341.rst:703
#: AmebaILI9341.rst:739 AmebaILI9341.rst:775 AmebaILI9341.rst:810
#: AmebaILI9341.rst:840 AmebaILI9341.rst:870 AmebaILI9341.rst:900
#: AmebaILI9341.rst:934 AmebaILI9341.rst:967 AmebaILI9341.rst:1000
#: AmebaILI9341.rst:1033
msgid "**Syntax**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:17
msgid "**Members**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:20
msgid "**Public Constructors**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:22
msgid "AmebaILI9341::AmebaILI9341"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:22
msgid "Constructs an AmebaILI9341 object"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:24
msgid "**Public Methods**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:26
msgid "AmebaILI9341::begin"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:26
msgid "Initialize SPI, pin mapping and screen configuration"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:29
msgid "AmebaILI9341::setAddress"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:29
msgid "Initialize image size and position"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:31
msgid "AmebaILI9341::writecommand"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:31
msgid "SPI transfer a command"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:33
msgid "AmebaILI9341::writedata"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:33
msgid "SPI transfer a piece of data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:35
msgid "AmebaILI9341::setRotation"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:35
msgid "Set screen orientation"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:37
msgid "AmebaILI9341::fillScreen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:37
msgid "Fill the screen with a color"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:39
msgid "AmebaILI9341::clr"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:39
msgid "Clear screen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:41
msgid "AmebaILI9341::fillRectangle"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:41
msgid "Fill a rectangular space with a color"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:43
msgid "AmebaILI9341::drawPixel"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:43
#: AmebaILI9341.rst:631
msgid "Turn on a pixel on the screen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:45
msgid "AmebaILI9341::drawChar"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:45
msgid "To print a character on the screen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:47
msgid "AmebaILI9341::drawLine"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:47
msgid "Draw line on the screen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:49
msgid "AmebaILI9341::drawRectangle"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:49
msgid "Draw a rectangle on the screen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:51
msgid "AmebaILI9341::drawCircle"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:51
msgid "Draw a circle on the screen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:53
msgid "AmebaILI9341::write"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:53
msgid "Same as drawChar"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:55
msgid "AmebaILI9341::getWidth"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:55
msgid "Return the width 240"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:57
msgid "AmebaILI9341::getHeight"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:57
msgid "Return the height 320"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:59
msgid "AmebaILI9341::setCursor"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:59
msgid "Set cursor to the desired position"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:61
msgid "AmebaILI9341::setForeground"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:61
#: AmebaILI9341.rst:932
msgid "Set foreground color"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:63
msgid "AmebaILI9341::setBackground"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:63
#: AmebaILI9341.rst:965
msgid "Set background color"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:65
msgid "AmebaILI9341::setFontSize"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:65
msgid "Set character font size"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:67
msgid "AmebaILI9341::reset"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:67
msgid "Reset pin to High or Low"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:76
msgid "Constructs an AmebaILI9341 object and set CS, DC and RESET pins ."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:84
#: AmebaILI9341.rst:378 AmebaILI9341.rst:412 AmebaILI9341.rst:443
#: AmebaILI9341.rst:473 AmebaILI9341.rst:504 AmebaILI9341.rst:539
#: AmebaILI9341.rst:569 AmebaILI9341.rst:602 AmebaILI9341.rst:639
#: AmebaILI9341.rst:673 AmebaILI9341.rst:711 AmebaILI9341.rst:747
#: AmebaILI9341.rst:783 AmebaILI9341.rst:816 AmebaILI9341.rst:846
#: AmebaILI9341.rst:876 AmebaILI9341.rst:906 AmebaILI9341.rst:940
#: AmebaILI9341.rst:973 AmebaILI9341.rst:1006 AmebaILI9341.rst:1039
msgid "**Parameters**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:86
msgid ""
"``csPin`` : pin for Chip Select ``dcPin`` : pin for Data/Command "
"``resetPin`` : pin for Reset"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:90
#: AmebaILI9341.rst:382 AmebaILI9341.rst:417 AmebaILI9341.rst:447
#: AmebaILI9341.rst:477 AmebaILI9341.rst:509 AmebaILI9341.rst:543
#: AmebaILI9341.rst:573 AmebaILI9341.rst:610 AmebaILI9341.rst:645
#: AmebaILI9341.rst:682 AmebaILI9341.rst:719 AmebaILI9341.rst:755
#: AmebaILI9341.rst:790 AmebaILI9341.rst:820 AmebaILI9341.rst:850
#: AmebaILI9341.rst:880 AmebaILI9341.rst:911 AmebaILI9341.rst:944
#: AmebaILI9341.rst:977 AmebaILI9341.rst:1010 AmebaILI9341.rst:1043
msgid "**Returns**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:92
#: AmebaILI9341.rst:384 AmebaILI9341.rst:419 AmebaILI9341.rst:449
#: AmebaILI9341.rst:479 AmebaILI9341.rst:511 AmebaILI9341.rst:545
#: AmebaILI9341.rst:575 AmebaILI9341.rst:612 AmebaILI9341.rst:647
#: AmebaILI9341.rst:684 AmebaILI9341.rst:721 AmebaILI9341.rst:757
#: AmebaILI9341.rst:792 AmebaILI9341.rst:913 AmebaILI9341.rst:946
#: AmebaILI9341.rst:979 AmebaILI9341.rst:1012 AmebaILI9341.rst:1045
msgid "The function returns nothing."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:94
#: AmebaILI9341.rst:386 AmebaILI9341.rst:421 AmebaILI9341.rst:451
#: AmebaILI9341.rst:481 AmebaILI9341.rst:513 AmebaILI9341.rst:547
#: AmebaILI9341.rst:577 AmebaILI9341.rst:614 AmebaILI9341.rst:649
#: AmebaILI9341.rst:686 AmebaILI9341.rst:723 AmebaILI9341.rst:759
#: AmebaILI9341.rst:794 AmebaILI9341.rst:824 AmebaILI9341.rst:854
#: AmebaILI9341.rst:884 AmebaILI9341.rst:915 AmebaILI9341.rst:948
#: AmebaILI9341.rst:981 AmebaILI9341.rst:1014 AmebaILI9341.rst:1047
msgid "**Example Code**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:96
msgid "Example: : PM25_ON_ILI9341_TFT_LCD"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:98
msgid ""
"This example demonstrates how to read pm2.5 value on PMS 3003 air-"
"condition sensor and display it on ILI9341 TFT LCD."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:360
#: AmebaILI9341.rst:393 AmebaILI9341.rst:425 AmebaILI9341.rst:455
#: AmebaILI9341.rst:485 AmebaILI9341.rst:520 AmebaILI9341.rst:551
#: AmebaILI9341.rst:584 AmebaILI9341.rst:621 AmebaILI9341.rst:653
#: AmebaILI9341.rst:690 AmebaILI9341.rst:727 AmebaILI9341.rst:763
#: AmebaILI9341.rst:798 AmebaILI9341.rst:828 AmebaILI9341.rst:858
#: AmebaILI9341.rst:888 AmebaILI9341.rst:922 AmebaILI9341.rst:955
#: AmebaILI9341.rst:988 AmebaILI9341.rst:1021 AmebaILI9341.rst:1051
msgid "**Notes and Warnings**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:362
#: AmebaILI9341.rst:423 AmebaILI9341.rst:453 AmebaILI9341.rst:457
#: AmebaILI9341.rst:483 AmebaILI9341.rst:549 AmebaILI9341.rst:623
#: AmebaILI9341.rst:651 AmebaILI9341.rst:655 AmebaILI9341.rst:688
#: AmebaILI9341.rst:725 AmebaILI9341.rst:729 AmebaILI9341.rst:761
#: AmebaILI9341.rst:765 AmebaILI9341.rst:796 AmebaILI9341.rst:826
#: AmebaILI9341.rst:856 AmebaILI9341.rst:860 AmebaILI9341.rst:886
#: AmebaILI9341.rst:890 AmebaILI9341.rst:924 AmebaILI9341.rst:957
#: AmebaILI9341.rst:990 AmebaILI9341.rst:1023 AmebaILI9341.rst:1049
#: AmebaILI9341.rst:1053
msgid "NA"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:370
msgid "Initialize hardware SPI, pin mapping and screen configuration"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:380
#: AmebaILI9341.rst:571 AmebaILI9341.rst:848 AmebaILI9341.rst:878
#: AmebaILI9341.rst:1041
msgid "The function requires no input parameter."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:388
#: AmebaILI9341.rst:515 AmebaILI9341.rst:579 AmebaILI9341.rst:616
#: AmebaILI9341.rst:917 AmebaILI9341.rst:950 AmebaILI9341.rst:983
#: AmebaILI9341.rst:1016
msgid "Example: PM25_ON_ILI9341_TFT_LCD"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:390
#: AmebaILI9341.rst:517 AmebaILI9341.rst:618 AmebaILI9341.rst:919
#: AmebaILI9341.rst:952 AmebaILI9341.rst:985 AmebaILI9341.rst:1018
msgid ""
"Details of the code are given in the previous section of AmebaILI9341:: "
"AmebaILI9341."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:395
msgid ""
"This method is required to run first before other operations on the "
"display."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:404
msgid "Initialize image size and positioning on the display"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:414
msgid ""
"``x0`` : leftmost coordinate of the image y0: top coordinate of the image"
" x1: rightmost coordinate of the image y1: bottom coordinate of the image"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:427
msgid "Do not use this to set the cursor, use the “setCursor” method instead."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:435
msgid "Write a single-byte command to display"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:445
msgid "``command`` : a single byte command"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:465
msgid "Write 1 byte of data to display"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:475
msgid "``data`` : 1 byte data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:487
msgid "Only use this method to write 1 byte at a time."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:495
msgid ""
"Setting screen orientation, “0” for no rotation, “1” for 90 degrees "
"rotation and so on so forth."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:506
msgid ""
"``m`` : one of the 4 rotation modes -> “0” for no rotation, “1” for 90⁰, "
"“2” for 180⁰, “3” for 270⁰"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:522
msgid ""
"if m=4, it’s equivalent to mode 0, and m=5 for mode 1, m=6 for mode 2 so "
"on so forth."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:531
msgid "Fill the entire screen with one color"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:541
msgid "``color`` : a 16-bit color reference defined in AmebaILI9341.h"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:553
msgid "Refer to AmebaILI9341.h for available colors."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:561
msgid "Fill the entire screen with a certain background-color"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:581
msgid ""
"Details of the code are given in the previous section of AmebaILI9341:: "
"AmebaILI9341"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:586
msgid "background-color can be set by calling setBackground method."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:594
msgid "Fill a rectangular space with a color on the screen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:604
#: AmebaILI9341.rst:749
msgid ""
"``x`` : leftmost coordinate of the image ``y`` : top coordinate of the "
"image ``w`` : width of the image ``h`` : height of the image ``color`` : "
"the color of the image"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:641
msgid ""
"``x`` : leftmost coordinate of the image ``y`` : top coordinate of the "
"image ``color`` : the color of the image"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:663
msgid "Draw character on the screen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:675
msgid ""
"``x`` : leftmost coordinate of the image ``y`` : top coordinate of the "
"image ``c`` : a character ``_fontcolor`` : font color ``_background`` : "
"background color ``_fontsize`` : font size"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:692
msgid ""
"In the actual example, the Print method is used to print a string of "
"character on the screen instead of using this method."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:701
msgid "Draw a straight line on the screen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:713
msgid ""
"``x0`` : leftmost coordinate of the image ``y0`` : top coordinate of the "
"image ``x1`` : leftmost coordinate of the image ``y1`` : top coordinate "
"of the image ``color`` : the color of the image"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:737
msgid "Draw a rectangular shape on the screen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:773
msgid "Draw a circular shape on the screen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:785
msgid ""
"``x0`` : leftmost coordinate of the image ``y0`` : top coordinate of the "
"image ``r`` : radius of the image ``color`` : the color of the image"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:800
msgid "Include “AmebaServo.h” to use the class function."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:808
msgid "Same as drawChar, write a character on the screen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:818
msgid "``c`` : a character to be written on the screen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:822
msgid "Number of bytes written"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:830
msgid "This an inherited method from Print class and is seldom used."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:838
msgid "Get the width of the image"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:852
msgid "Width of the image"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:868
msgid "Get the height of the image"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:882
msgid "Height of the image"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:898
msgid "Set the cursor to a specific position on the screen"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:908
msgid "``x`` : coordinate on the x-axis ``y`` : coordinate on the y-axis"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:942
msgid "``color`` : one of the colors available in AmebaILI9341.h"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:975
msgid "``_background`` : one of the colors available in AmebaILI9341.h"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:998
msgid "Set the font size of the characters printed on the screen."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:1008
msgid "``size``: font size default 1 for smallest, 5 for largest font size"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaILI9341.rst:1031
msgid "Reset the pin to High or Low"
msgstr ""

#~ msgid "**AmebaILI9341 Class**"
#~ msgstr ""

#~ msgid "class AmebaILI9341"
#~ msgstr ""

#~ msgid "**AmebaILI9341::AmebaILI9341**"
#~ msgstr ""

#~ msgid "AmebaILI9341::AmebaILI9341(int csPin, int dcPin, int resetPin)"
#~ msgstr ""

#~ msgid ""
#~ "csPin: pin for Chip Select dcPin: "
#~ "pin for Data/Command resetPin: pin for"
#~ " Reset"
#~ msgstr ""

#~ msgid "/\\*"
#~ msgstr ""

#~ msgid "PMS 3003 pin map is as follow:"
#~ msgstr ""

#~ msgid "PIN1 :VCC, connect to 5V"
#~ msgstr ""

#~ msgid "PIN2 :GND"
#~ msgstr ""

#~ msgid "PIN3 :SET, 0:Standby mode, 1:operating mode"
#~ msgstr ""

#~ msgid "PIN4 :RXD :Serial RX"
#~ msgstr ""

#~ msgid "PIN5 :TXD :Serial TX"
#~ msgstr ""

#~ msgid "PIN6 :RESET"
#~ msgstr ""

#~ msgid "PIN7 :NC"
#~ msgstr ""

#~ msgid "PIN8 :NC"
#~ msgstr ""

#~ msgid "In this example, we only use Serial to get PM 2.5 value."
#~ msgstr ""

#~ msgid "The circuit:"
#~ msgstr ""

#~ msgid "\\* RX is digital pin 0 (connect to TX of PMS 3003)"
#~ msgstr ""

#~ msgid "\\* TX is digital pin 1 (connect to RX of PMS 3003)"
#~ msgstr ""

#~ msgid "For RTL8195A ILI9341 TFT LCD with SPI interface has these pins:"
#~ msgstr ""

#~ msgid "D/C : connect to pin 9"
#~ msgstr ""

#~ msgid "CS : connect to pin 10"
#~ msgstr ""

#~ msgid "MOSI : connect to pin 11"
#~ msgstr ""

#~ msgid "MISO : connect to pin 12"
#~ msgstr ""

#~ msgid "CLK : connect to pin 13"
#~ msgstr ""

#~ msgid "VCC : connect to 3V3"
#~ msgstr ""

#~ msgid "GND : connect to GND"
#~ msgstr ""

#~ msgid "\\*/"
#~ msgstr ""

#~ msgid "**#include \"SoftwareSerial.h\"**"
#~ msgstr ""

#~ msgid "**#include \"SPI.h\"**"
#~ msgstr ""

#~ msgid "**#include \"AmebaILI9341.h\"**"
#~ msgstr ""

#~ msgid "**#if defined(BOARD_RTL8195A)**"
#~ msgstr ""

#~ msgid "SoftwareSerial mySerial(0, 1); // RX, TX"
#~ msgstr ""

#~ msgid "**#define TFT_RESET 8**"
#~ msgstr ""

#~ msgid "**#define TFT_DC 9**"
#~ msgstr ""

#~ msgid "**#define TFT_CS 10**"
#~ msgstr ""

#~ msgid "**#elif defined(BOARD_RTL8710)**"
#~ msgstr ""

#~ msgid "SoftwareSerial mySerial(17, 5); // RX, TX"
#~ msgstr ""

#~ msgid "// IMPORTANT: Due to limit pin, we do not connect TFT_RESET pin."
#~ msgstr ""

#~ msgid "**#define TFT_RESET 0xFFFFFFFF**"
#~ msgstr ""

#~ msgid "**#define TFT_DC 2**"
#~ msgstr ""

#~ msgid "**#endif**"
#~ msgstr ""

#~ msgid "AmebaILI9341 tft = AmebaILI9341(TFT_CS, TFT_DC, TFT_RESET);"
#~ msgstr ""

#~ msgid "**#define ILI9341_SPI_FREQUENCY 20000000**"
#~ msgstr ""

#~ msgid "**#define pmsDataLen 32**"
#~ msgstr ""

#~ msgid "**uint8_t** buf[pmsDataLen];"
#~ msgstr ""

#~ msgid "**int** idx = 0;"
#~ msgstr ""

#~ msgid "**int** pm10 = 0;"
#~ msgstr ""

#~ msgid "**int** last_pm25 = 0;"
#~ msgstr ""

#~ msgid "**int** pm25 = 0;"
#~ msgstr ""

#~ msgid "**int** pm100 = 0;"
#~ msgstr ""

#~ msgid "**uint16_t** pm25color[] = {"
#~ msgstr ""

#~ msgid "*0x9FF3*,"
#~ msgstr ""

#~ msgid "*0x37E0*,"
#~ msgstr ""

#~ msgid "*0x3660*,"
#~ msgstr ""

#~ msgid "*0xFFE0*,"
#~ msgstr ""

#~ msgid "*0xFE60*,"
#~ msgstr ""

#~ msgid "*0xFCC0*,"
#~ msgstr ""

#~ msgid "*0xFB2C*,"
#~ msgstr ""

#~ msgid "*0xF800*,"
#~ msgstr ""

#~ msgid "*0x9800*,"
#~ msgstr ""

#~ msgid "*0xC99F*"
#~ msgstr ""

#~ msgid "};"
#~ msgstr ""

#~ msgid "**void** setup() {"
#~ msgstr ""

#~ msgid "Serial.begin(57600);"
#~ msgstr ""

#~ msgid "mySerial.begin(9600); // PMS 3003 UART has baud rate 9600"
#~ msgstr ""

#~ msgid "SPI.setDefaultFrequency(ILI9341_SPI_FREQUENCY);"
#~ msgstr ""

#~ msgid "tft.begin();"
#~ msgstr ""

#~ msgid "drawPictureFrames();"
#~ msgstr ""

#~ msgid "}"
#~ msgstr ""

#~ msgid "**void** loop() { // run over and over"
#~ msgstr ""

#~ msgid "**uint8_t** c;"
#~ msgstr ""

#~ msgid "idx = 0;"
#~ msgstr ""

#~ msgid "memset(buf, 0, pmsDataLen);"
#~ msgstr ""

#~ msgid "**while** (**true**) {"
#~ msgstr ""

#~ msgid "**while** (c != *0x42*) {"
#~ msgstr ""

#~ msgid "**while** (!mySerial.available());"
#~ msgstr ""

#~ msgid "c = mySerial.read();"
#~ msgstr ""

#~ msgid "**if** (c == *0x4d*) {"
#~ msgstr ""

#~ msgid "// now we got a correct header)"
#~ msgstr ""

#~ msgid "buf[idx++] = *0x42*;"
#~ msgstr ""

#~ msgid "buf[idx++] = *0x4d*;"
#~ msgstr ""

#~ msgid "**break**;"
#~ msgstr ""

#~ msgid "**while** (idx != pmsDataLen) {"
#~ msgstr ""

#~ msgid "**while**\\ (!mySerial.available());"
#~ msgstr ""

#~ msgid "buf[idx++] = mySerial.read();"
#~ msgstr ""

#~ msgid "pm10 = ( buf[10] << 8 ) \\| buf[11];"
#~ msgstr ""

#~ msgid "last_pm25 = pm25;"
#~ msgstr ""

#~ msgid "pm25 = ( buf[12] << 8 ) \\| buf[13];"
#~ msgstr ""

#~ msgid "pm100 = ( buf[14] << 8 ) \\| buf[15];"
#~ msgstr ""

#~ msgid "updateValueToTftScreen();"
#~ msgstr ""

#~ msgid "**void** drawPictureFrames() {"
#~ msgstr ""

#~ msgid "tft.setRotation(1);"
#~ msgstr ""

#~ msgid "tft.clr();"
#~ msgstr ""

#~ msgid "tft.setFontSize(1);"
#~ msgstr ""

#~ msgid "// Upper title"
#~ msgstr ""

#~ msgid "tft.setCursor(20,20);"
#~ msgstr ""

#~ msgid "tft.print(\"PM2.5 DETECTOR\");"
#~ msgstr ""

#~ msgid "// PM 2.5 Circle Frame"
#~ msgstr ""

#~ msgid "tft.drawCircle(100,130,60, ILI9341_BLUE);"
#~ msgstr ""

#~ msgid "tft.drawCircle(100,130,61, ILI9341_BLUE);"
#~ msgstr ""

#~ msgid "tft.setCursor(90,85);"
#~ msgstr ""

#~ msgid "tft.print(\"PM2.5\");"
#~ msgstr ""

#~ msgid "tft.setCursor(90,170);"
#~ msgstr ""

#~ msgid "tft.print(\"um/m3\");"
#~ msgstr ""

#~ msgid "// PM 10 Circle Frame"
#~ msgstr ""

#~ msgid "tft.drawCircle(220,70,40, ILI9341_BLUE);"
#~ msgstr ""

#~ msgid "tft.setCursor(210,40);"
#~ msgstr ""

#~ msgid "tft.print(\"PM10\");"
#~ msgstr ""

#~ msgid "tft.setCursor(205,95);"
#~ msgstr ""

#~ msgid "// PM 1.0 Circle Frame"
#~ msgstr ""

#~ msgid "tft.drawCircle(220,170,40, ILI9341_BLUE);"
#~ msgstr ""

#~ msgid "tft.setCursor(205,140);"
#~ msgstr ""

#~ msgid "tft.print(\"PM1.0\");"
#~ msgstr ""

#~ msgid "tft.setCursor(205,195);"
#~ msgstr ""

#~ msgid "// right side bar, referenced from: http://taqm.epa.gov.tw/taqm/tw/"
#~ msgstr ""

#~ msgid "tft.fillRectangle(290, 30+ 0*2, 10, 12*2, pm25color[0]); // 0~11"
#~ msgstr ""

#~ msgid "tft.fillRectangle(290, 30+12*2, 10, 12*2, pm25color[1]); // 12-23"
#~ msgstr ""

#~ msgid "tft.fillRectangle(290, 30+24*2, 10, 12*2, pm25color[2]); // 24-35"
#~ msgstr ""

#~ msgid "tft.fillRectangle(290, 30+36*2, 10, 6*2, pm25color[3]); // 36-41"
#~ msgstr ""

#~ msgid "tft.fillRectangle(290, 30+42*2, 10, 6*2, pm25color[4]); // 42-47"
#~ msgstr ""

#~ msgid "tft.fillRectangle(290, 30+48*2, 10, 6*2, pm25color[5]); // 48-53"
#~ msgstr ""

#~ msgid "tft.fillRectangle(290, 30+54*2, 10, 6*2, pm25color[6]); // 54-58"
#~ msgstr ""

#~ msgid "tft.fillRectangle(290, 30+59*2, 10, 6*2, pm25color[7]); // 59-64"
#~ msgstr ""

#~ msgid "tft.fillRectangle(290, 30+65*2, 10, 6*2, pm25color[8]); // 65-70"
#~ msgstr ""

#~ msgid "tft.fillRectangle(290, 30+71*2, 10, 10*2, pm25color[9]); // >=71"
#~ msgstr ""

#~ msgid "tft.setCursor(302, 30);"
#~ msgstr ""

#~ msgid "tft.print(\"0\");"
#~ msgstr ""

#~ msgid "tft.setCursor(302, 30+36*2);"
#~ msgstr ""

#~ msgid "tft.print(\"36\");"
#~ msgstr ""

#~ msgid "tft.setCursor(302, 30+54*2);"
#~ msgstr ""

#~ msgid "tft.print(\"54\");"
#~ msgstr ""

#~ msgid "tft.setCursor(302, 30+71*2);"
#~ msgstr ""

#~ msgid "tft.print(\"71\");"
#~ msgstr ""

#~ msgid "// bottom right text"
#~ msgstr ""

#~ msgid "tft.setCursor(210,230);"
#~ msgstr ""

#~ msgid "tft.print(\"Powered by Realtek\");"
#~ msgstr ""

#~ msgid "**void** updateValueToTftScreen() {"
#~ msgstr ""

#~ msgid "tft.setCursor(60, 111);"
#~ msgstr ""

#~ msgid "tft.setFontSize(5);"
#~ msgstr ""

#~ msgid "tft.setForeground( getPm25Color(pm25) );"
#~ msgstr ""

#~ msgid "**if** (pm25 < 10) {"
#~ msgstr ""

#~ msgid "tft.print(\" \");"
#~ msgstr ""

#~ msgid "} **else** **if** (pm25 < 100) {"
#~ msgstr ""

#~ msgid "tft.print(pm25);"
#~ msgstr ""

#~ msgid "tft.setCursor(195,60);"
#~ msgstr ""

#~ msgid "tft.setFontSize(3);"
#~ msgstr ""

#~ msgid "**if** (pm100 < 10) {"
#~ msgstr ""

#~ msgid "} **else** **if** (pm100 < 100) {"
#~ msgstr ""

#~ msgid "tft.print(pm100);"
#~ msgstr ""

#~ msgid "tft.setCursor(198,160);"
#~ msgstr ""

#~ msgid "**if** (pm10 < 10) {"
#~ msgstr ""

#~ msgid "} **else** **if** (pm10 < 100) {"
#~ msgstr ""

#~ msgid "tft.print(pm10);"
#~ msgstr ""

#~ msgid "tft.setForeground(ILI9341_WHITE);"
#~ msgstr ""

#~ msgid "**if** (last_pm25 > 80) {"
#~ msgstr ""

#~ msgid "tft.fillRectangle(275, 80*2+30-3, 12, 8, ILI9341_BLACK);"
#~ msgstr ""

#~ msgid "} **else** {"
#~ msgstr ""

#~ msgid "tft.fillRectangle(275, last_pm25*2+30-3, 12, 8, ILI9341_BLACK);"
#~ msgstr ""

#~ msgid "**if** (pm25 > 80) {"
#~ msgstr ""

#~ msgid "tft.setCursor(275, 80*2+30-3);"
#~ msgstr ""

#~ msgid "tft.setCursor(275, pm25*2+30-3);"
#~ msgstr ""

#~ msgid "tft.print(\"=>\");"
#~ msgstr ""

#~ msgid "**uint16_t** getPm25Color(**int** v) {"
#~ msgstr ""

#~ msgid "**if** (v < 12) {"
#~ msgstr ""

#~ msgid "**return** pm25color[0];"
#~ msgstr ""

#~ msgid "} **else** **if** (v < 24) {"
#~ msgstr ""

#~ msgid "**return** pm25color[1];"
#~ msgstr ""

#~ msgid "} **else** **if** (v < 36) {"
#~ msgstr ""

#~ msgid "**return** pm25color[2];"
#~ msgstr ""

#~ msgid "} **else** **if** (v < 42) {"
#~ msgstr ""

#~ msgid "**return** pm25color[3];"
#~ msgstr ""

#~ msgid "} **else** **if** (v < 48) {"
#~ msgstr ""

#~ msgid "**return** pm25color[4];"
#~ msgstr ""

#~ msgid "} **else** **if** (v < 54) {"
#~ msgstr ""

#~ msgid "**return** pm25color[5];"
#~ msgstr ""

#~ msgid "} **else** **if** (v < 59) {"
#~ msgstr ""

#~ msgid "**return** pm25color[6];"
#~ msgstr ""

#~ msgid "} **else** **if** (v < 65) {"
#~ msgstr ""

#~ msgid "**return** pm25color[7];"
#~ msgstr ""

#~ msgid "} **else** **if** (v < 71) {"
#~ msgstr ""

#~ msgid "**return** pm25color[8];"
#~ msgstr ""

#~ msgid "**return** pm25color[9];"
#~ msgstr ""

#~ msgid "**AmebaILI9341::begin**"
#~ msgstr ""

#~ msgid "void AmebaILI9341::begin(void)"
#~ msgstr ""

#~ msgid "**AmebaILI9341::setAddress**"
#~ msgstr ""

#~ msgid ""
#~ "void AmebaILI9341::setAddress(uint16_t x0, uint16_t"
#~ " y0, uint16_t x1, uint16_t y1)"
#~ msgstr ""

#~ msgid ""
#~ "x0: leftmost coordinate of the image "
#~ "y0: top coordinate of the image "
#~ "x1: rightmost coordinate of the image"
#~ " y1: bottom coordinate of the image"
#~ msgstr ""

#~ msgid "**AmebaILI9341::writecommand**"
#~ msgstr ""

#~ msgid "void AmebaILI9341::writecommand(uint8_t command)"
#~ msgstr ""

#~ msgid "command: a single byte command"
#~ msgstr ""

#~ msgid "**AmebaILI9341::writedata**"
#~ msgstr ""

#~ msgid "void AmebaILI9341::writedata(uint8_t data)"
#~ msgstr ""

#~ msgid "data: 1 byte data"
#~ msgstr ""

#~ msgid "**AmebaILI9341::setRotation**"
#~ msgstr ""

#~ msgid "void AmebaILI9341::setRotation(uint8_t m)/span> **Parameters**"
#~ msgstr ""

#~ msgid ""
#~ "m: one of the 4 rotation modes "
#~ "-> “0” for no rotation, “1” for"
#~ " 90⁰, “2” for 180⁰, “3” for "
#~ "270⁰"
#~ msgstr ""

#~ msgid "**AmebaILI9341::fillScreen**"
#~ msgstr ""

#~ msgid "void AmebaILI9341::fillScreen(uint16_t color)"
#~ msgstr ""

#~ msgid "color: a 16-bit color reference defined in AmebaILI9341.h"
#~ msgstr ""

#~ msgid "**AmebaILI9341::clr**"
#~ msgstr ""

#~ msgid "void AmebaILI9341::clr(void)"
#~ msgstr ""

#~ msgid "**AmebaILI9341::fillRectangle**"
#~ msgstr ""

#~ msgid ""
#~ "void AmebaILI9341::fillRectangle(int16_t x, int16_t"
#~ " y, int16_t w, int16_t h, uint16_t"
#~ " color)"
#~ msgstr ""

#~ msgid ""
#~ "x: leftmost coordinate of the image "
#~ "y: top coordinate of the image w:"
#~ " width of the image h: height "
#~ "of the image color: the color of"
#~ " the image"
#~ msgstr ""

#~ msgid "**AmebaILI9341::drawPixel**"
#~ msgstr ""

#~ msgid "void AmebaILI9341::drawPixel(int16_t x, int16_t y, uint16_t color)"
#~ msgstr ""

#~ msgid ""
#~ "x: leftmost coordinate of the image "
#~ "y: top coordinate of the image "
#~ "color: the color of the image"
#~ msgstr ""

#~ msgid "**AmebaILI9341::drawChar**"
#~ msgstr ""

#~ msgid ""
#~ "void AmebaILI9341::drawChar(unsigned char c) "
#~ "void AmebaILI9341::drawChar(int16_t x, int16_t "
#~ "y, unsigned char c, uint16_t "
#~ "\\_fontcolor, uint16_t \\_background, uint8_t "
#~ "\\_fontsize)"
#~ msgstr ""

#~ msgid ""
#~ "x: leftmost coordinate of the image "
#~ "y: top coordinate of the image c:"
#~ " a character \\_fontcolor: font color "
#~ "\\_background: background color \\_fontsize: "
#~ "font size"
#~ msgstr ""

#~ msgid "**AmebaILI9341::drawLine**"
#~ msgstr ""

#~ msgid ""
#~ "void AmebaILI9341::drawLine(int16_t x0, int16_t "
#~ "y0, int16_t x1, int16_t y1) void "
#~ "AmebaILI9341::drawLine(int16_t x0, int16_t y0, "
#~ "int16_t x1, int16_t y1, uint16_t color)"
#~ msgstr ""

#~ msgid ""
#~ "x0: leftmost coordinate of the image "
#~ "y0: top coordinate of the image "
#~ "x1: leftmost coordinate of the image "
#~ "y1: top coordinate of the image "
#~ "color: the color of the image"
#~ msgstr ""

#~ msgid "**AmebaILI9341::drawRectangle**"
#~ msgstr ""

#~ msgid ""
#~ "void AmebaILI9341::drawRectangle(int16_t x, int16_t"
#~ " y, int16_t w, int16_t h) void "
#~ "AmebaILI9341::drawRectangle(int16_t x, int16_t y,"
#~ " int16_t w, int16_t h, uint16_t "
#~ "color)"
#~ msgstr ""

#~ msgid "**AmebaILI9341::drawCircle**"
#~ msgstr ""

#~ msgid ""
#~ "void AmebaILI9341::drawCircle(int16_t x0, int16_t"
#~ " y0, int16_t r) void "
#~ "AmebaILI9341::drawCircle(int16_t x0, int16_t y0, "
#~ "int16_t r, uint16_t color)"
#~ msgstr ""

#~ msgid ""
#~ "x0: leftmost coordinate of the image "
#~ "y0: top coordinate of the image r:"
#~ " radius of the image color: the "
#~ "color of the image"
#~ msgstr ""

#~ msgid "**AmebaILI9341::write**"
#~ msgstr ""

#~ msgid "size_t AmebaILI9341::write(uint8_t c)"
#~ msgstr ""

#~ msgid "c: a character to be written on the screen"
#~ msgstr ""

#~ msgid "**AmebaILI9341::getWidth**"
#~ msgstr ""

#~ msgid "int16_t AmebaILI9341::getWidth(void)"
#~ msgstr ""

#~ msgid "**AmebaILI9341::getHeight**"
#~ msgstr ""

#~ msgid "int16_t AmebaILI9341::getHeight(void)"
#~ msgstr ""

#~ msgid "**AmebaILI9341::setCursor**"
#~ msgstr ""

#~ msgid "void AmebaILI9341::setCursor(int16_t x, int16_t y)"
#~ msgstr ""

#~ msgid "x: coordinate on the x-axis y: coordinate on the y-axis"
#~ msgstr ""

#~ msgid "**AmebaILI9341::setForeground**"
#~ msgstr ""

#~ msgid "void AmebaILI9341::setForeground(uint16_t color)"
#~ msgstr ""

#~ msgid "color: one of the colors available in AmebaILI9341.h"
#~ msgstr ""

#~ msgid "**AmebaILI9341::setBackground**"
#~ msgstr ""

#~ msgid "void AmebaILI9341::setBackground(uint16_t \\_background)"
#~ msgstr ""

#~ msgid "\\_background: one of the colors available in AmebaILI9341.h"
#~ msgstr ""

#~ msgid "**AmebaILI9341::setFontSize**"
#~ msgstr ""

#~ msgid "void AmebaILI9341::setFontSize(uint8_t size)"
#~ msgstr ""

#~ msgid "size: font size, default 1 for smallest, 5 for largest font size"
#~ msgstr ""

#~ msgid "**AmebaILI9341::reset**"
#~ msgstr ""

#~ msgid "void AmebaILI9341::reset(void)"
#~ msgstr ""

