# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-01 09:11+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:3
msgid "Class WiFiClient"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:6
#: WiFiClient.rst:59 WiFiClient.rst:184 WiFiClient.rst:229 WiFiClient.rst:269
#: WiFiClient.rst:305 WiFiClient.rst:351 WiFiClient.rst:385 WiFiClient.rst:416
#: WiFiClient.rst:450 WiFiClient.rst:484
msgid "**Description**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:8
msgid "Defines a class of WiFi Client implementation for Ameba."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:10
#: WiFiClient.rst:64 WiFiClient.rst:188 WiFiClient.rst:233 WiFiClient.rst:273
#: WiFiClient.rst:309 WiFiClient.rst:356 WiFiClient.rst:389 WiFiClient.rst:420
#: WiFiClient.rst:454 WiFiClient.rst:488
msgid "**Syntax**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:16
msgid "**Members**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:19
msgid "**Public Constructors**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:21
msgid "WiFiClient::WiFiClient"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:21
#: WiFiClient.rst:61
msgid ""
"Constructs a WiFiClient instance that connects to the specified IP "
"address and port."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:28
msgid "**Public Methods**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:30
msgid "WiFiClient::connect"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:30
#: WiFiClient.rst:186
msgid "Connect to the IP address and port"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:32
msgid "WiFiClient::write"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:32
#: WiFiClient.rst:231
msgid "Write a single byte into the packet"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:34
msgid "WiFiClient::available"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:34
#: WiFiClient.rst:271
msgid "Number of bytes remaining in the current packet"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:37
msgid "WiFiClient::read"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:37
#: WiFiClient.rst:307
msgid "Read a single byte from the current packet"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:40
msgid "WiFiClient:: peek"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:40
#: WiFiClient.rst:353
msgid ""
"Return the next byte from the current packet without moving on to the "
"next byte"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:44
msgid "WiFiClient:: flush"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:44
#: WiFiClient.rst:387
msgid "Finish reading the current packet"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:46
msgid "WiFiClient::stop"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:46
msgid "Stop client connection"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:48
msgid "WiFiClient::connected"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:48
msgid "Check if client is connected, return 1 if connected, 0 if not"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:51
msgid "WiFiClient::setRecvTimeout"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:51
#: WiFiClient.rst:486
msgid "Set receiving timeout"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:74
#: WiFiClient.rst:198 WiFiClient.rst:243 WiFiClient.rst:279 WiFiClient.rst:323
#: WiFiClient.rst:362 WiFiClient.rst:395 WiFiClient.rst:426 WiFiClient.rst:460
#: WiFiClient.rst:494
msgid "**Parameters**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:76
msgid "``sock`` : socket state, default -1."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:78
#: WiFiClient.rst:206 WiFiClient.rst:251 WiFiClient.rst:283 WiFiClient.rst:329
#: WiFiClient.rst:366 WiFiClient.rst:399 WiFiClient.rst:430 WiFiClient.rst:464
#: WiFiClient.rst:498
msgid "**Returns**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:80
#: WiFiClient.rst:401 WiFiClient.rst:432
msgid "The function returns nothing."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:82
#: WiFiClient.rst:212 WiFiClient.rst:256 WiFiClient.rst:289 WiFiClient.rst:335
#: WiFiClient.rst:372 WiFiClient.rst:403 WiFiClient.rst:434 WiFiClient.rst:468
#: WiFiClient.rst:502
msgid "**Example Code**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:84
#: WiFiClient.rst:214 WiFiClient.rst:291 WiFiClient.rst:337 WiFiClient.rst:436
#: WiFiClient.rst:470
msgid "Example: WiFiWebClient"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:175
#: WiFiClient.rst:220 WiFiClient.rst:260 WiFiClient.rst:296 WiFiClient.rst:342
#: WiFiClient.rst:376 WiFiClient.rst:407 WiFiClient.rst:441 WiFiClient.rst:475
#: WiFiClient.rst:506
msgid "**Notes and Warnings**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:177
#: WiFiClient.rst:222 WiFiClient.rst:258 WiFiClient.rst:262 WiFiClient.rst:298
#: WiFiClient.rst:344 WiFiClient.rst:374 WiFiClient.rst:378 WiFiClient.rst:405
#: WiFiClient.rst:409 WiFiClient.rst:443 WiFiClient.rst:477 WiFiClient.rst:504
#: WiFiClient.rst:508
msgid "NA"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:200
msgid "``ip`` : IP address"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:202
msgid "``host`` : Host name"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:204
msgid "``port`` : the port to listen on"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:208
msgid "Returns “1”: if successful"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:210
msgid "Returns “0”: if failed"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:216
msgid "The details of the example are explained in the previous section of"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:218
msgid "WiFiClient:: WiFiClient."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:245
msgid "``byte`` : the outgoing byte"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:247
msgid "``buf`` : the outgoing message"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:249
#: WiFiClient.rst:331
msgid "``size`` : the size of the buffer"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:253
msgid ""
"The function returns single byte into the packet or returns bytes size "
"from buffer into the packet."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:281
#: WiFiClient.rst:364 WiFiClient.rst:397 WiFiClient.rst:428 WiFiClient.rst:462
msgid "The function requires no input parameter."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:285
msgid "Function returns the number of bytes available in the current packet"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:287
msgid "Function returns 0: if no data available"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:293
#: WiFiClient.rst:339 WiFiClient.rst:438 WiFiClient.rst:472
msgid ""
"The details of the example are explained in the previous section of "
"WiFiClient:: WiFiClient."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:325
msgid "``buf`` : buffer to hold incoming packets (char*)"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:327
msgid "``size`` : maximum size of the buffer (int)"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:333
msgid "``-1`` : if no buffer is available"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:368
msgid "``b`` : the next byte or character"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:370
msgid "``-1`` : if none is available"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:418
msgid "Disconnect from the server. Stop client connection"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:452
msgid "Check if client is connected, return 1 if connected, 0 if not."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:466
msgid "The function returns “1” if connected, returns “0” if not connected."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:496
msgid "timeout: timeout in seconds"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class WiFiClient.rst:500
msgid "0"
msgstr ""

#~ msgid "**WiFiClient Class**"
#~ msgstr ""

#~ msgid "class WiFiClient"
#~ msgstr ""

#~ msgid "**WiFiClient::WiFiClient**"
#~ msgstr ""

#~ msgid "WiFiClient::WiFiClient()"
#~ msgstr ""

#~ msgid "WiFiClient::WiFiClient(uint8_t sock)"
#~ msgstr ""

#~ msgid "sock: socket state, default -1."
#~ msgstr ""

#~ msgid "**#include <WiFi.h>**"
#~ msgstr ""

#~ msgid "**char** ssid[] = \"yourNetwork\"; // your network SSID (name)"
#~ msgstr ""

#~ msgid ""
#~ "**char** pass[] = \"password\"; // your"
#~ " network password (use for WPA, or"
#~ " use as key for WEP)"
#~ msgstr ""

#~ msgid ""
#~ "**int** keyIndex = 0; // your "
#~ "network key Index number (needed only"
#~ " for WEP)"
#~ msgstr ""

#~ msgid "**int** status = WL_IDLE_STATUS;"
#~ msgstr ""

#~ msgid "//IPAddress server(64,233,189,94); // numeric IP for Google (no DNS)"
#~ msgstr ""

#~ msgid ""
#~ "**char** server[] = \"www.google.com\"; // "
#~ "name address for Google (using DNS)"
#~ msgstr ""

#~ msgid "WiFiClient client;"
#~ msgstr ""

#~ msgid "**void** setup() {"
#~ msgstr ""

#~ msgid "//Initialize serial and wait for port to open:"
#~ msgstr ""

#~ msgid "Serial.begin(9600);"
#~ msgstr ""

#~ msgid "**while** (!Serial) {"
#~ msgstr ""

#~ msgid ";"
#~ msgstr ""

#~ msgid "}"
#~ msgstr ""

#~ msgid "// check for the presence of the shield:"
#~ msgstr ""

#~ msgid "**if** (WiFi.status() == WL_NO_SHIELD) {"
#~ msgstr ""

#~ msgid "Serial.println(\"WiFi shield not present\");"
#~ msgstr ""

#~ msgid "// don't continue:"
#~ msgstr ""

#~ msgid "**while** (**true**);"
#~ msgstr ""

#~ msgid "String fv = WiFi.firmwareVersion();"
#~ msgstr ""

#~ msgid "**if** (fv != \"1.1.0\") {"
#~ msgstr ""

#~ msgid "Serial.println(\"Please upgrade the firmware\");"
#~ msgstr ""

#~ msgid "// attempt to connect to Wifi network:"
#~ msgstr ""

#~ msgid "**while** (status != WL_CONNECTED) {"
#~ msgstr ""

#~ msgid "Serial.print(\"Attempting to connect to SSID: \");"
#~ msgstr ""

#~ msgid "Serial.println(ssid);"
#~ msgstr ""

#~ msgid ""
#~ "// Connect to WPA/WPA2 network. Change"
#~ " this line if using open or WEP"
#~ " network:"
#~ msgstr ""

#~ msgid "status = WiFi.begin(ssid, pass);"
#~ msgstr ""

#~ msgid "// wait 10 seconds for connection:"
#~ msgstr ""

#~ msgid "delay(10000);"
#~ msgstr ""

#~ msgid "Serial.println(\"Connected to wifi\");"
#~ msgstr ""

#~ msgid "printWifiStatus();"
#~ msgstr ""

#~ msgid "Serial.println(\"\\nStarting connection to server...\");"
#~ msgstr ""

#~ msgid "// if you get a connection, report back via serial:"
#~ msgstr ""

#~ msgid "**if** (client.connect(server, 80)) {"
#~ msgstr ""

#~ msgid "Serial.println(\"connected to server\");"
#~ msgstr ""

#~ msgid "// Make a HTTP request:"
#~ msgstr ""

#~ msgid "client.println(\"GET /search?q=ameba HTTP/1.1\");"
#~ msgstr ""

#~ msgid "client.println(\"Host: www.google.com\");"
#~ msgstr ""

#~ msgid "client.println(\"Connection: close\");"
#~ msgstr ""

#~ msgid "client.println();"
#~ msgstr ""

#~ msgid "**void** loop() {"
#~ msgstr ""

#~ msgid "// if there are incoming bytes available"
#~ msgstr ""

#~ msgid "// from the server, read them and print them:"
#~ msgstr ""

#~ msgid "**while** (client.available()) {"
#~ msgstr ""

#~ msgid "**char** c = client.read();"
#~ msgstr ""

#~ msgid "Serial.write(c);"
#~ msgstr ""

#~ msgid "// if the server's disconnected, stop the client:"
#~ msgstr ""

#~ msgid "**if** (!client.connected()) {"
#~ msgstr ""

#~ msgid "Serial.println();"
#~ msgstr ""

#~ msgid "Serial.println(\"disconnecting from server.\");"
#~ msgstr ""

#~ msgid "client.stop();"
#~ msgstr ""

#~ msgid "// do nothing forevermore:"
#~ msgstr ""

#~ msgid "**void** printWifiStatus() {"
#~ msgstr ""

#~ msgid "// print the SSID of the network you're attached to:"
#~ msgstr ""

#~ msgid "Serial.print(\"SSID: \");"
#~ msgstr ""

#~ msgid "Serial.println(WiFi.SSID());"
#~ msgstr ""

#~ msgid "// print your WiFi shield's IP address:"
#~ msgstr ""

#~ msgid "IPAddress ip = WiFi.localIP();"
#~ msgstr ""

#~ msgid "Serial.print(\"IP Address: \");"
#~ msgstr ""

#~ msgid "Serial.println(ip);"
#~ msgstr ""

#~ msgid "// print the received signal strength:"
#~ msgstr ""

#~ msgid "**long** rssi = WiFi.RSSI();"
#~ msgstr ""

#~ msgid "Serial.print(\"signal strength (RSSI):\");"
#~ msgstr ""

#~ msgid "Serial.print(rssi);"
#~ msgstr ""

#~ msgid "Serial.println(\" dBm\");"
#~ msgstr ""

#~ msgid "**WiFiClient::connect**"
#~ msgstr ""

#~ msgid "int WiFiClient::connect(IPAddress ip, uint16_t port)"
#~ msgstr ""

#~ msgid "int WiFiClient::connect(const char \\*host, uint16_t port)"
#~ msgstr ""

#~ msgid "ip: IP address"
#~ msgstr ""

#~ msgid "host: Host name"
#~ msgstr ""

#~ msgid "port: the port to listen on"
#~ msgstr ""

#~ msgid "**WiFiClient::write**"
#~ msgstr ""

#~ msgid "size_t WiFiClient::write(uint8_t byte)"
#~ msgstr ""

#~ msgid "size_t WiFiClient::write(const uint8_t \\*buf, size_t size)"
#~ msgstr ""

#~ msgid "byte: the outgoing byte"
#~ msgstr ""

#~ msgid "buf: the outgoing message"
#~ msgstr ""

#~ msgid "size: the size of the buffer"
#~ msgstr ""

#~ msgid "**WiFiClient::available**"
#~ msgstr ""

#~ msgid "int WiFiClient::available(void)"
#~ msgstr ""

#~ msgid "• Function returns the number of bytes available in the current packet"
#~ msgstr ""

#~ msgid "**WiFiClient::read**"
#~ msgstr ""

#~ msgid "int WiFiClient::read()"
#~ msgstr ""

#~ msgid "int WiFiClient::read(unsigned char\\* buf, size_t size)"
#~ msgstr ""

#~ msgid "int WiFiClient::read(char \\*buf, size_t size)"
#~ msgstr ""

#~ msgid "buf: buffer to hold incoming packets (char*)"
#~ msgstr ""

#~ msgid "size: maximum size of the buffer (int)"
#~ msgstr ""

#~ msgid "-1: if no buffer is available"
#~ msgstr ""

#~ msgid "**WiFiClient::peek**"
#~ msgstr ""

#~ msgid "int WiFiClient::peek(void)"
#~ msgstr ""

#~ msgid "b: the next byte or character"
#~ msgstr ""

#~ msgid "-1: if none is available"
#~ msgstr ""

#~ msgid "**WiFiClient::flush**"
#~ msgstr ""

#~ msgid "void WiFiClient::flush(void)"
#~ msgstr ""

#~ msgid "**WiFiClient::stop**"
#~ msgstr ""

#~ msgid "void WiFiClient::stop(void)"
#~ msgstr ""

#~ msgid "**WiFiClient::connected**"
#~ msgstr ""

#~ msgid "uint8_t WiFiClient::connected(void)"
#~ msgstr ""

#~ msgid "**WiFiClient::setRecvTimeout**"
#~ msgstr ""

#~ msgid "int WiFiClient::setRecvTimeout(int timeout)"
#~ msgstr ""

