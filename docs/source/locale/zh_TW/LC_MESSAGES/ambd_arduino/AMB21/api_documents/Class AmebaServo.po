# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-18 08:01+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:3
msgid "Class AmebaServo"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:7
#: AmebaServo.rst:52 AmebaServo.rst:149 AmebaServo.rst:180 AmebaServo.rst:217
#: AmebaServo.rst:248 AmebaServo.rst:281 AmebaServo.rst:313
msgid "**Description**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:9
msgid "Defines a class of manipulating servo motors connected to Arduino pins."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:11
#: AmebaServo.rst:58 AmebaServo.rst:153 AmebaServo.rst:185 AmebaServo.rst:221
#: AmebaServo.rst:253 AmebaServo.rst:286 AmebaServo.rst:317
msgid "**Syntax**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:17
msgid "**Members**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:20
msgid "**Public Constructors**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:22
msgid "AmebaServo::AmebaServo"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:22
msgid "Constructs an AmebaServo object."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:24
msgid "**Public Methods**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:26
msgid "AmebaServo::attach"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:26
msgid "Attach the given pin to the next free channel."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:29
msgid "AmebaServo::detach"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:29
#: AmebaServo.rst:151
msgid "Detach the servo."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:31
msgid "AmebaServo::write"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:31
msgid ""
"Write value, if the value is < 200 it's treated as an angle, otherwise as"
" pulse-width in microseconds."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:35
msgid "AmebaServo::writeMicroseconds"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:35
msgid "Write pulse width in microseconds."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:37
msgid "AmebaServo::read"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:37
msgid "Output current pulse width as an angle between 0 and 180 degrees."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:40
msgid "AmebaServo::readMicroseconds"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:40
msgid "Output current pulse width in microseconds for this servo."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:43
msgid "AmebaServo::attached"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:43
msgid "Check if the servo is attached."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:54
msgid ""
"Attach the given pin to the next free channel, sets pinMode (including "
"minimum and maximum values for writes), returns channel number, or 0 if "
"failure."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:67
#: AmebaServo.rst:159 AmebaServo.rst:191 AmebaServo.rst:227 AmebaServo.rst:259
#: AmebaServo.rst:292 AmebaServo.rst:323
msgid "**Parameters**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:69
msgid "``pin`` : The Arduino pin number to be attached."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:71
msgid "``min`` : Minimum values for writes."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:73
msgid "``max`` : Maximum values for writes."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:75
#: AmebaServo.rst:163 AmebaServo.rst:196 AmebaServo.rst:231 AmebaServo.rst:263
#: AmebaServo.rst:296 AmebaServo.rst:327
msgid "**Returns**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:77
msgid "The function returns channel number or 0"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:79
#: AmebaServo.rst:167 AmebaServo.rst:200 AmebaServo.rst:235 AmebaServo.rst:267
#: AmebaServo.rst:300 AmebaServo.rst:331
msgid "**Example Code**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:81
msgid ""
"The code demos servo motor sweeping from 0 degrees to 180 degrees then "
"sweep back to 0 degrees in the step of 1 degree."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:84
msgid "ServoSweep.ino"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:140
msgid "**Note and Warnings**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:142
#: AmebaServo.rst:173 AmebaServo.rst:210 AmebaServo.rst:241 AmebaServo.rst:273
#: AmebaServo.rst:306 AmebaServo.rst:341
msgid ""
"Every time must include the header file “AmebaServo.h” in front of the "
"project to use the class function."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:161
#: AmebaServo.rst:261 AmebaServo.rst:294 AmebaServo.rst:325
msgid "The function requires no input parameter."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:165
#: AmebaServo.rst:198 AmebaServo.rst:233
msgid "The function returns nothing."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:169
#: AmebaServo.rst:237 AmebaServo.rst:269 AmebaServo.rst:302
msgid "NA"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:171
#: AmebaServo.rst:208 AmebaServo.rst:239 AmebaServo.rst:271 AmebaServo.rst:304
#: AmebaServo.rst:339
msgid "**Notes and Warnings**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:182
msgid ""
"Write an integer value to the function, if the value is < 200, it’s being"
" treated as an angle, otherwise as pulse-width in microseconds."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:193
msgid ""
"``value`` : The value < 200 its treated as an angle; otherwise as pulse "
"width in microseconds."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:202
msgid "Example: ServoSweep"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:204
#: AmebaServo.rst:335
msgid ""
"The code demos servo motor sweeping from 0 degrees to 180 degrees then "
"sweep back to 0 degrees in the step of 1 degree. Please refer to code in "
"“AmebaServo:: attach” section."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:219
msgid "Write pulse width to the servo in microseconds."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:229
msgid "``value`` : Write value the pulse width in microseconds."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:250
msgid ""
"The function reads current pulse width and returns as an angle between 0 "
"and 180 degrees."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:265
msgid "The pulse width as an angle between 0 ~ 180 degrees."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:283
msgid ""
"The function returns a Boolean value “true” if this servo is attached, "
"otherwise returns “false”."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:298
msgid "The function returns current servo pulse width in microseconds."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:315
msgid "It returns true if this servo is attached, otherwise false."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:329
msgid "The function returns a Boolean value as true or false."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class AmebaServo.rst:333
msgid "Example: `ServoSweep`"
msgstr ""

#~ msgid "AmebaServo Class"
#~ msgstr ""

#~ msgid "pin: The Arduino pin number to be attached."
#~ msgstr ""

#~ msgid "min: Minimum values for writes."
#~ msgstr ""

#~ msgid "max: Maximum values for writes."
#~ msgstr ""

#~ msgid "Example: ServoSweep"
#~ msgstr ""

#~ msgid "**AmebaServo::write**"
#~ msgstr ""

#~ msgid "void AmebaServo::write(int value);"
#~ msgstr ""

#~ msgid ""
#~ "value: The value < 200 its treated"
#~ " as an angle; otherwise as pulse "
#~ "width in microseconds."
#~ msgstr ""

#~ msgid "**AmebaServo::writeMicroseconds**"
#~ msgstr ""

#~ msgid "void AmebaServo::writeMicroseconds(int value);"
#~ msgstr ""

#~ msgid "value: Write value the pulse width in microseconds."
#~ msgstr ""

#~ msgid "**AmebaServo::read**"
#~ msgstr ""

#~ msgid "int AmebaServo::read(void);"
#~ msgstr ""

#~ msgid "**AmebaServo::readMicroseconds**"
#~ msgstr ""

#~ msgid "int AmebaServo::readMicroseconds(void);"
#~ msgstr ""

#~ msgid "**AmebaServo::attached**"
#~ msgstr ""

#~ msgid "bool AmebaServo::attached(void);"
#~ msgstr ""

#~ msgid "class AmebaServo"
#~ msgstr ""

#~ msgid "void AmebaServo::detach(void);"
#~ msgstr ""

