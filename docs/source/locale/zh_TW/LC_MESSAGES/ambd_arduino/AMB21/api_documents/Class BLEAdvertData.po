# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-18 08:01+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:3
msgid "Class BLEAdvertData"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:8
#: BLEAdvertData.rst:109 BLEAdvertData.rst:142 BLEAdvertData.rst:172
#: BLEAdvertData.rst:208 BLEAdvertData.rst:244 BLEAdvertData.rst:276
#: BLEAdvertData.rst:315 BLEAdvertData.rst:346 BLEAdvertData.rst:376
#: BLEAdvertData.rst:406 BLEAdvertData.rst:437 BLEAdvertData.rst:467
#: BLEAdvertData.rst:498 BLEAdvertData.rst:528 BLEAdvertData.rst:559
#: BLEAdvertData.rst:594 BLEAdvertData.rst:628 BLEAdvertData.rst:659
#: BLEAdvertData.rst:690 BLEAdvertData.rst:721 BLEAdvertData.rst:752
#: BLEAdvertData.rst:783 BLEAdvertData.rst:814 BLEAdvertData.rst:846
#: BLEAdvertData.rst:877 BLEAdvertData.rst:909
msgid "**Description**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:10
msgid "A class used for managing BLE advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:12
#: BLEAdvertData.rst:113 BLEAdvertData.rst:146 BLEAdvertData.rst:176
#: BLEAdvertData.rst:212 BLEAdvertData.rst:248 BLEAdvertData.rst:280
#: BLEAdvertData.rst:319 BLEAdvertData.rst:350 BLEAdvertData.rst:380
#: BLEAdvertData.rst:410 BLEAdvertData.rst:441 BLEAdvertData.rst:471
#: BLEAdvertData.rst:502 BLEAdvertData.rst:532 BLEAdvertData.rst:563
#: BLEAdvertData.rst:598 BLEAdvertData.rst:632 BLEAdvertData.rst:663
#: BLEAdvertData.rst:694 BLEAdvertData.rst:725 BLEAdvertData.rst:756
#: BLEAdvertData.rst:787 BLEAdvertData.rst:818 BLEAdvertData.rst:850
#: BLEAdvertData.rst:881 BLEAdvertData.rst:913
msgid "**Syntax**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:19
msgid "**Members**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:22
msgid "**Public Constructors**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:24
msgid "BLEAdvertData::BLEAdvertData"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:24
msgid "Constructs a BLEAdvertData object"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:28
msgid "**Public Methods**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:30
msgid "BLEAdvertData::clear"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:30
msgid "Clear all advertising data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:32
msgid "BLEAdvertData::addData"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:32
msgid "Add binary advertising data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:34
msgid "BLEAdvertData::addFlags"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:34
msgid "Add flags to advertising data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:36
msgid "B LEAdvertData::addPartialServices"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:36
msgid "Add partial services to advertising data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:39
msgid "BL EAdvertData::addCompleteServices"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:39
msgid "Add complete services to advertising data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:42
msgid "BLEAdvertData::addAppearance"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:42
msgid "Add device appearance to advertising data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:45
msgid "BLEAdvertData::addShortName"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:45
msgid "Add short device name to advertising data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:48
msgid "BLEAdvertData::addCompleteName"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:48
msgid "Add complete device name to advertising data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:51
msgid "BLEAdvertData::parseScanInfo"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:51
msgid "Parse advertising data received from a scan"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:54
msgid "BLEAdvertData::hasFlags"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:54
msgid "Check if received data includes advertising flags"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:57
msgid "BLEAdvertData::hasUUID"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:57
msgid "Check if received data includes UUIDs"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:60
msgid "BLEAdvertData::hasName"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:60
msgid "Check if received data includes device name"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:63
msgid "BLEAdvertData::hasManufacturer"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:63
msgid "Check if received data includes manufacturer data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:66
msgid "BLEAdvertData::getAdvType"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:66
msgid "Get advertising type of received data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:69
msgid "BLEAdvertData::getAddrType"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:69
msgid "Get Bluetooth address type of received data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:72
msgid "BLEAdvertData::getAddr"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:72
msgid "Get Bluetooth address of received data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:75
msgid "BLEAdvertData::getRSSI"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:75
msgid "Get RSSI of received data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:77
msgid "BLEAdvertData::getFlags"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:77
msgid "Get advertising flags of received data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:80
msgid "BLEAdvertData::getServiceCount"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:80
msgid "Get number of advertised services in received data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:83
msgid "BLEAdvertData::getServiceList"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:83
msgid "Get array of advertised services in received data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:86
msgid "BLEAdvertData::getName"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:86
msgid "Get advertised device name in received data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:89
msgid "BLEAdvertData::getTxPower"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:89
msgid "Get advertised transmission power in received data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:92
msgid "BLEAdvertData::getAppearance"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:92
msgid "Get advertised device appearance in received data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:95
msgid "BLEAdvertData::getManufacturer"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:95
msgid "Get advertised manufacturer in received data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:98
msgid "BLEAdver tData::getManufacturerDataLength"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:98
msgid "Get length of manufacturer data in received data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:101
msgid "BL EAdvertData::getManufacturerData"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:101
msgid "Get advertised manufacturer data in received data"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:111
msgid "Constructs a BLEAdvertData object."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:119
#: BLEAdvertData.rst:152 BLEAdvertData.rst:182 BLEAdvertData.rst:219
#: BLEAdvertData.rst:255 BLEAdvertData.rst:290 BLEAdvertData.rst:325
#: BLEAdvertData.rst:356 BLEAdvertData.rst:386 BLEAdvertData.rst:416
#: BLEAdvertData.rst:447 BLEAdvertData.rst:477 BLEAdvertData.rst:508
#: BLEAdvertData.rst:538 BLEAdvertData.rst:569 BLEAdvertData.rst:604
#: BLEAdvertData.rst:638 BLEAdvertData.rst:669 BLEAdvertData.rst:700
#: BLEAdvertData.rst:731 BLEAdvertData.rst:762 BLEAdvertData.rst:793
#: BLEAdvertData.rst:824 BLEAdvertData.rst:856 BLEAdvertData.rst:887
#: BLEAdvertData.rst:919
msgid "**Parameters**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:121
#: BLEAdvertData.rst:154 BLEAdvertData.rst:449 BLEAdvertData.rst:479
#: BLEAdvertData.rst:510 BLEAdvertData.rst:540 BLEAdvertData.rst:571
#: BLEAdvertData.rst:606 BLEAdvertData.rst:640 BLEAdvertData.rst:671
#: BLEAdvertData.rst:702 BLEAdvertData.rst:733 BLEAdvertData.rst:764
#: BLEAdvertData.rst:795 BLEAdvertData.rst:826 BLEAdvertData.rst:858
#: BLEAdvertData.rst:889 BLEAdvertData.rst:921
msgid "The function requires no input parameter."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:123
#: BLEAdvertData.rst:156 BLEAdvertData.rst:188 BLEAdvertData.rst:228
#: BLEAdvertData.rst:259 BLEAdvertData.rst:297 BLEAdvertData.rst:329
#: BLEAdvertData.rst:360 BLEAdvertData.rst:390 BLEAdvertData.rst:420
#: BLEAdvertData.rst:451 BLEAdvertData.rst:481 BLEAdvertData.rst:512
#: BLEAdvertData.rst:542 BLEAdvertData.rst:573 BLEAdvertData.rst:608
#: BLEAdvertData.rst:642 BLEAdvertData.rst:673 BLEAdvertData.rst:704
#: BLEAdvertData.rst:735 BLEAdvertData.rst:766 BLEAdvertData.rst:797
#: BLEAdvertData.rst:828 BLEAdvertData.rst:860 BLEAdvertData.rst:891
#: BLEAdvertData.rst:923
msgid "**Returns**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:125
#: BLEAdvertData.rst:158 BLEAdvertData.rst:190 BLEAdvertData.rst:422
msgid "The function returns nothing."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:127
#: BLEAdvertData.rst:160 BLEAdvertData.rst:192 BLEAdvertData.rst:232
#: BLEAdvertData.rst:263 BLEAdvertData.rst:301 BLEAdvertData.rst:333
#: BLEAdvertData.rst:364 BLEAdvertData.rst:394 BLEAdvertData.rst:424
#: BLEAdvertData.rst:455 BLEAdvertData.rst:485 BLEAdvertData.rst:516
#: BLEAdvertData.rst:547 BLEAdvertData.rst:577 BLEAdvertData.rst:612
#: BLEAdvertData.rst:646 BLEAdvertData.rst:678 BLEAdvertData.rst:708
#: BLEAdvertData.rst:739 BLEAdvertData.rst:770 BLEAdvertData.rst:801
#: BLEAdvertData.rst:832 BLEAdvertData.rst:864 BLEAdvertData.rst:896
#: BLEAdvertData.rst:927
msgid "**Example Code**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:129
#: BLEAdvertData.rst:162 BLEAdvertData.rst:166 BLEAdvertData.rst:194
#: BLEAdvertData.rst:238 BLEAdvertData.rst:265 BLEAdvertData.rst:269
#: BLEAdvertData.rst:335 BLEAdvertData.rst:366 BLEAdvertData.rst:370
#: BLEAdvertData.rst:400 BLEAdvertData.rst:457 BLEAdvertData.rst:461
#: BLEAdvertData.rst:487 BLEAdvertData.rst:491 BLEAdvertData.rst:549
#: BLEAdvertData.rst:553 BLEAdvertData.rst:579 BLEAdvertData.rst:614
#: BLEAdvertData.rst:648 BLEAdvertData.rst:652 BLEAdvertData.rst:680
#: BLEAdvertData.rst:684 BLEAdvertData.rst:714 BLEAdvertData.rst:745
#: BLEAdvertData.rst:776 BLEAdvertData.rst:803 BLEAdvertData.rst:807
#: BLEAdvertData.rst:834 BLEAdvertData.rst:866 BLEAdvertData.rst:898
#: BLEAdvertData.rst:902 BLEAdvertData.rst:929 BLEAdvertData.rst:933
msgid "NA"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:131
#: BLEAdvertData.rst:164 BLEAdvertData.rst:196 BLEAdvertData.rst:236
#: BLEAdvertData.rst:267 BLEAdvertData.rst:305 BLEAdvertData.rst:337
#: BLEAdvertData.rst:368 BLEAdvertData.rst:398 BLEAdvertData.rst:428
#: BLEAdvertData.rst:459 BLEAdvertData.rst:489 BLEAdvertData.rst:551
#: BLEAdvertData.rst:581 BLEAdvertData.rst:616 BLEAdvertData.rst:650
#: BLEAdvertData.rst:682 BLEAdvertData.rst:712 BLEAdvertData.rst:743
#: BLEAdvertData.rst:774 BLEAdvertData.rst:805 BLEAdvertData.rst:836
#: BLEAdvertData.rst:868 BLEAdvertData.rst:900 BLEAdvertData.rst:931
msgid "**Notes and Warnings**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:133
msgid ""
"This class is used for managing BLE advertising data for two primary "
"uses. First is to assemble advertising data for broadcasting as "
"advertising packets. Second is to process and split up the advertising "
"data received from a scan into separate types."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:144
msgid "Clear all advertising data currently saved in class object."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:174
msgid "Add binary advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:184
msgid "``data`` : pointer to array containing desired advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:186
msgid "``size`` : number of bytes in array."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:198
msgid ""
"This function is provided for flexibility in adding BLE advertising data."
" Other functions should be used for adding advertising data if possible, "
"as this function does not perform any checks on the validity of the data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:210
msgid "Add flags to advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:221
msgid ""
"flags: desired flags to add to advertising data. Valid values: – "
"GAP_ADTYPE_FLAGS_LIMITED – GAP_ADTYPE_FLAGS_GENERAL – "
"GAP_ADTYPE_FLAGS_BREDR_NOT_SUPPORTED – "
"GAP_ADTYPE_FLAGS_SIMULTANEOUS_LE_BREDR_CONTROLLER – "
"GAP_ADTYPE_FLAGS_SIMULTANEOUS_LE_BREDR_HOST"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:230
#: BLEAdvertData.rst:261 BLEAdvertData.rst:299 BLEAdvertData.rst:331
#: BLEAdvertData.rst:362 BLEAdvertData.rst:392
msgid "Current total size of advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:234
#: BLEAdvertData.rst:303 BLEAdvertData.rst:396
msgid "Example: BLEBatteryService"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:242
msgid "**BLEAdvertData::addPartialServices**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:246
msgid "Add partial list of service UUIDs to advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:257
#: BLEAdvertData.rst:292
msgid "``uuid`` : the desired UUID contained in BLEUUID class object."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:278
msgid "Add complete list of service UUIDs to advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:294
msgid ""
"``uuidBitLength`` : UUID bit length for which a blank entry is to be "
"added. Valid values: 16, 32, 128."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:307
msgid ""
"uuidBitLength is used when it is desired to add a blank entry to the "
"advertisement data, used to indicate that no services with UUIDs of a "
"certain length are available."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:317
msgid "Add device appearance to advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:327
msgid "``appearance`` : the desired device appearance."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:339
msgid ""
"Refer to Bluetooth specifications for a full list of device appearance "
"values."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:348
msgid "Add shortened device name to advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:358
#: BLEAdvertData.rst:388
msgid "``str`` : character string containing desired device name."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:378
msgid "Add complete device name to advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:408
msgid "Parse advertising data received from a scan."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:418
msgid "``p_data`` : pointer to advertising data received from a Bluetooth scan."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:426
#: BLEAdvertData.rst:518 BLEAdvertData.rst:710 BLEAdvertData.rst:741
#: BLEAdvertData.rst:772
msgid "Example: BLEBatteryClient"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:430
msgid ""
"Advertising data fields of parsed receive data can be access using member"
" functions starting with “has” and “get”."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:439
msgid "Check if received data includes advertising flags."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:453
msgid "True if flags are present in received advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:469
msgid "Check if received data includes service UUIDs."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:483
msgid "True if service UUIDs are present in received advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:500
msgid "Check if received data includes device name."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:514
msgid "True if device name is present in received advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:520
msgid "**Notes and Warnings** NA"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:530
msgid "Check if received data includes manufacturer specific data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:544
msgid ""
"True if manufacturer specific data is present in received advertising "
"data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:561
msgid "Get advertising type of received data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:575
msgid "Advertising type of received advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:583
msgid ""
"Possible types: – GAP_ADV_EVT_TYPE_UNDIRECTED – GAP_ADV_EVT_TYPE_DIRECTED"
" – GAP_ADV_EVT_TYPE_SCANNABLE – GAP_ADV_EVT_TYPE_NON_CONNECTABEL – "
"GAP_ADV_EVT_TYPE_SCAN_RSP"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:596
msgid "Get Bluetooth address type of received data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:610
msgid "Bluetooth address type of received data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:618
msgid "Possible types:"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:620
msgid "– GAP_REMOTE_ADDR_LE_PUBLIC"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:622
msgid "– GAP_REMOTE_ADDR_LE_RANDOM"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:630
msgid "Get received signal strength indicator (RSSI) of received data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:644
msgid "Received signal strength."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:661
msgid "Get advertising flags of received data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:675
msgid ""
"Advertising flags present in received advertising data, expressed as a "
"single byte."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:692
msgid "Get number of advertised services in received data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:706
msgid "Number of advertised service UUIDs in received data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:723
msgid "Get list of advertised service UUIDs in received data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:737
msgid "Pointer to a BLEUUID array containing all advertised service UUIDs."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:754
msgid "Get advertised device name in received data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:768
msgid "Advertised device name contained in a String class object."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:785
msgid "Get advertised transmission power in received data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:799
msgid "Advertised transmission power."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:816
msgid "Get advertised device appearance in received data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:830
msgid "Advertised device appearance."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:838
msgid ""
"Refer to Bluetooth specifications for full list of device appearance "
"values."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:843
msgid "**BLEAdvertData::getManufacturer**"
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:848
msgid "Get advertised manufacturer in received data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:862
msgid "Advertised manufacturer."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:870
msgid "Refer to Bluetooth specifications for full list of manufacturer codes."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:879
msgid "Get length of manufacturer data in received data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:893
msgid "Number of bytes of manufacturer data present in received advertising data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:911
msgid "Get manufacturer data in received data."
msgstr ""

#: ../../source/ambd_arduino/AMB21/api_documents/Class BLEAdvertData.rst:925
msgid "Pointer to array containing manufacturer data."
msgstr ""

#~ msgid "**BLEAdvertData Class**"
#~ msgstr ""

#~ msgid "class BLEAdvertData"
#~ msgstr ""

#~ msgid "**BLEAdvertData::BLEAdvertData**"
#~ msgstr ""

#~ msgid "BLEAdvertData::BLEAdvertData(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::clear**"
#~ msgstr ""

#~ msgid "void clear(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::addData**"
#~ msgstr ""

#~ msgid "void addData(const uint8_t\\* data, uint8_t size);"
#~ msgstr ""

#~ msgid "data: pointer to array containing desired advertising data."
#~ msgstr ""

#~ msgid "size: number of bytes in array."
#~ msgstr ""

#~ msgid "**BLEAdvertData::addFlags**"
#~ msgstr ""

#~ msgid "uint8_t addFlags(uint8_t flags);"
#~ msgstr ""

#~ msgid "flags: desired flags to add to advertising data. Valid values:"
#~ msgstr ""

#~ msgid "– GAP_ADTYPE_FLAGS_LIMITED"
#~ msgstr ""

#~ msgid "– GAP_ADTYPE_FLAGS_GENERAL"
#~ msgstr ""

#~ msgid "– GAP_ADTYPE_FLAGS_BREDR_NOT_SUPPORTED"
#~ msgstr ""

#~ msgid "– GAP_ADTYPE_FLAGS_SIMULTANEOUS_LE_BREDR_CONTROLLER"
#~ msgstr ""

#~ msgid "– GAP_ADTYPE_FLAGS_SIMULTANEOUS_LE_BREDR_HOST"
#~ msgstr ""

#~ msgid "uint8_t addPartialServices(BLEUUID uuid);"
#~ msgstr ""

#~ msgid "uuid: the desired UUID contained in BLEUUID class object."
#~ msgstr ""

#~ msgid "**BLEAdvertData::addCompleteServices**"
#~ msgstr ""

#~ msgid "uint8_t addCompleteServices(BLEUUID uuid);"
#~ msgstr ""

#~ msgid "uint8_t addCompleteServices(uint8_t uuidBitLength);"
#~ msgstr ""

#~ msgid ""
#~ "uuidBitLength: UUID bit length for which"
#~ " a blank entry is to be added."
#~ " Valid values: 16, 32, 128."
#~ msgstr ""

#~ msgid "**BLEAdvertData::addAppearance**"
#~ msgstr ""

#~ msgid "uint8_t addAppearance(uint16_t appearance);"
#~ msgstr ""

#~ msgid "appearance: the desired device appearance."
#~ msgstr ""

#~ msgid "**BLEAdvertData::addShortName**"
#~ msgstr ""

#~ msgid "uint8_t addShortName(const char\\* str);"
#~ msgstr ""

#~ msgid "str: character string containing desired device name."
#~ msgstr ""

#~ msgid "**BLEAdvertData::addCompleteName**"
#~ msgstr ""

#~ msgid "uint8_t addCompleteName(const char\\* str);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::parseScanInfo**"
#~ msgstr ""

#~ msgid "void parseScanInfo(T_LE_CB_DATA \\*p_data);"
#~ msgstr ""

#~ msgid "p_data: pointer to advertising data received from a Bluetooth scan."
#~ msgstr ""

#~ msgid "**BLEAdvertData::hasFlags**"
#~ msgstr ""

#~ msgid "bool hasFlags(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::hasUUID**"
#~ msgstr ""

#~ msgid "bool hasUUID(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::hasName**"
#~ msgstr ""

#~ msgid "bool hasName(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::hasManufacturer**"
#~ msgstr ""

#~ msgid "bool hasManufacturer(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::getAdvType**"
#~ msgstr ""

#~ msgid "T_GAP_ADV_EVT_TYPE getAdvType(void);"
#~ msgstr ""

#~ msgid "– GAP_ADV_EVT_TYPE_UNDIRECTED"
#~ msgstr ""

#~ msgid "– GAP_ADV_EVT_TYPE_DIRECTED"
#~ msgstr ""

#~ msgid "– GAP_ADV_EVT_TYPE_SCANNABLE"
#~ msgstr ""

#~ msgid "– GAP_ADV_EVT_TYPE_NON_CONNECTABEL"
#~ msgstr ""

#~ msgid "– GAP_ADV_EVT_TYPE_SCAN_RSP"
#~ msgstr ""

#~ msgid "**BLEAdvertData::getAddrType**"
#~ msgstr ""

#~ msgid "T_GAP_REMOTE_ADDR_TYPE getAddrType(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::getRSSI**"
#~ msgstr ""

#~ msgid "Int8_t getRSSI(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::getFlags**"
#~ msgstr ""

#~ msgid "uint8_t getFlags(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::getServiceCount**"
#~ msgstr ""

#~ msgid "uint8_t getServiceCount(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::getServiceList**"
#~ msgstr ""

#~ msgid "BLEUUID\\* getServiceList(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::getName**"
#~ msgstr ""

#~ msgid "String getName(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::getTxPower**"
#~ msgstr ""

#~ msgid "int8_t getTxPower(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::getAppearance**"
#~ msgstr ""

#~ msgid "uint16_t getAppearance(void);"
#~ msgstr ""

#~ msgid "uint16_t getManufacturer(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::getManufacturerDataLength**"
#~ msgstr ""

#~ msgid "uint8_t getManufacturerDataLength(void);"
#~ msgstr ""

#~ msgid "**BLEAdvertData::getManufacturerData**"
#~ msgstr ""

#~ msgid "uint8_t\\* getManufacturerData(void);"
#~ msgstr ""

